{
	"id": "ced999ec2a54af4f16b7cb23539d5b8e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"ECE473 Final Project/DAOToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\ncontract DAOToken is ERC20, AccessControl {\n    using SafeMath for uint256;\n\n    // Define a new role identifier for the CCUS company\n    bytes32 public constant CCUS_ROLE = keccak256(\"CCUS_ROLE\");\n    mapping(address => uint256) private _lockedTokens;\n\n    constructor(string memory name, string memory symbol, uint256 initialSupply)\n        ERC20(name, symbol) {\n        _mint(msg.sender, initialSupply);\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    function lockToken(address account, uint256 amount) public onlyRole(CCUS_ROLE) {\n        require(amount <= balanceOf(account), \"DAOToken: cannot lock more than the balance\");\n        _lockedTokens[account] = _lockedTokens[account].add(amount);\n        _transfer(account, address(this), amount);\n    }\n\n    function unlockToken(address account, uint256 amount) public onlyRole(CCUS_ROLE) {\n        uint256 lockedBalance = _lockedTokens[account];\n        require(amount <= lockedBalance, \"DAOToken: cannot unlock more tokens than are locked\");\n        _lockedTokens[account] = _lockedTokens[account].sub(amount);\n        _transfer(address(this), account, amount);\n    }\n\n    function getLockedTokens(address account) public view returns (uint256) {\n        return _lockedTokens[account];\n    }\n\n    function grantCCUSRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {\n        grantRole(CCUS_ROLE, account);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201c442d1a1d10dd67827f747bb4619049faa61963afefe98516470ce557deaca264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c442d1a1d10dd67827f747bb4619049faa61963afefe98516470ce557deaca264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR PREVRANDAO 0x2D BYTE SAR LT 0xDD PUSH8 0x827F747BB4619049 STATICCALL 0xA6 NOT PUSH4 0xAFEFE985 AND SELFBALANCE 0xC 0xE5 JUMPI 0xDE 0xAC LOG2 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "482:6210:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212201c442d1a1d10dd67827f747bb4619049faa61963afefe98516470ce557deaca264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR PREVRANDAO 0x2D BYTE SAR LT 0xDD PUSH8 0x827F747BB4619049 STATICCALL 0xA6 NOT PUSH4 0xAFEFE985 AND SELFBALANCE 0xC 0xE5 JUMPI 0xDE 0xAC LOG2 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "482:6210:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201c442d1a1d10dd67827f747bb4619049faa61963afefe98516470ce557deaca264736f6c63430008190033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"ECE473 Final Project/DAOToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ECE473 Final Project/DAOToken.sol": {
				"DAOToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CCUS_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getLockedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantCCUSRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "lockToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "unlockToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ECE473 Final Project/DAOToken.sol\":231:1622  contract DAOToken is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"ECE473 Final Project/DAOToken.sol\":489:695  constructor(string memory name, string memory symbol, uint256 initialSupply)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"ECE473 Final Project/DAOToken.sol\":580:584  name */\n  dup3\n    /* \"ECE473 Final Project/DAOToken.sol\":586:592  symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"ECE473 Final Project/DAOToken.sol\":604:636  _mint(msg.sender, initialSupply) */\n  tag_11\n    /* \"ECE473 Final Project/DAOToken.sol\":610:620  msg.sender */\n  caller\n    /* \"ECE473 Final Project/DAOToken.sol\":622:635  initialSupply */\n  dup3\n    /* \"ECE473 Final Project/DAOToken.sol\":604:609  _mint */\n  shl(0x20, tag_12)\n    /* \"ECE473 Final Project/DAOToken.sol\":604:636  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"ECE473 Final Project/DAOToken.sol\":646:688  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_13\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"ECE473 Final Project/DAOToken.sol\":657:675  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"ECE473 Final Project/DAOToken.sol\":677:687  msg.sender */\n  caller\n    /* \"ECE473 Final Project/DAOToken.sol\":646:656  _grantRole */\n  shl(0x20, tag_14)\n    /* \"ECE473 Final Project/DAOToken.sol\":646:688  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_13:\n  pop\n    /* \"ECE473 Final Project/DAOToken.sol\":489:695  constructor(string memory name, string memory symbol, uint256 initialSupply)... */\n  pop\n  pop\n  pop\n    /* \"ECE473 Final Project/DAOToken.sol\":231:1622  contract DAOToken is ERC20, AccessControl {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_12:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_17\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_17:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_21)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_20:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_23\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_24)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_26\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_27)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_22)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_25:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_22:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_21:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_31\n  swap2\n  swap1\n  tag_32\n  jump\t// in\ntag_31:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_33)\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_34\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_35\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_38)\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_27:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_43:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_44:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_45:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_46:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_47:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_48:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_49:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_50:\n    /* \"#utility.yul\":957:984   */\n  tag_91\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_48\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_93\n  tag_49\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1030:1118   */\ntag_92:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_51:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_95\n  tag_43\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_96\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_50\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_52:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_99\n  tag_49\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1434:1490   */\ntag_98:\n    /* \"#utility.yul\":1508:1537   */\n  tag_100\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_48\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_53:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_54:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_103\n    /* \"#utility.yul\":1885:1934   */\n  tag_104\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_52\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":1869:1935   */\n  tag_51\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_106\n  tag_47\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2010:2122   */\ntag_105:\n    /* \"#utility.yul\":2131:2183   */\n  tag_107\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_53\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_55:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_109\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_110\n  tag_46\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2292:2414   */\ntag_109:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_111\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_54\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:2647   */\ntag_56:\n    /* \"#utility.yul\":2607:2614   */\n  0x00\n    /* \"#utility.yul\":2636:2641   */\n  dup2\n    /* \"#utility.yul\":2625:2641   */\n  swap1\n  pop\n    /* \"#utility.yul\":2570:2647   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2653:2775   */\ntag_57:\n    /* \"#utility.yul\":2726:2750   */\n  tag_114\n    /* \"#utility.yul\":2744:2749   */\n  dup2\n    /* \"#utility.yul\":2726:2750   */\n  tag_56\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2719:2724   */\n  dup2\n    /* \"#utility.yul\":2716:2751   */\n  eq\n    /* \"#utility.yul\":2706:2769   */\n  tag_115\n  jumpi\n    /* \"#utility.yul\":2765:2766   */\n  0x00\n    /* \"#utility.yul\":2762:2763   */\n  dup1\n    /* \"#utility.yul\":2755:2767   */\n  revert\n    /* \"#utility.yul\":2706:2769   */\ntag_115:\n    /* \"#utility.yul\":2653:2775   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2781:2924   */\ntag_58:\n    /* \"#utility.yul\":2838:2843   */\n  0x00\n    /* \"#utility.yul\":2869:2875   */\n  dup2\n    /* \"#utility.yul\":2863:2876   */\n  mload\n    /* \"#utility.yul\":2854:2876   */\n  swap1\n  pop\n    /* \"#utility.yul\":2885:2918   */\n  tag_117\n    /* \"#utility.yul\":2912:2917   */\n  dup2\n    /* \"#utility.yul\":2885:2918   */\n  tag_57\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":2781:2924   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2930:3939   */\ntag_3:\n    /* \"#utility.yul\":3038:3044   */\n  0x00\n    /* \"#utility.yul\":3046:3052   */\n  dup1\n    /* \"#utility.yul\":3054:3060   */\n  0x00\n    /* \"#utility.yul\":3103:3105   */\n  0x60\n    /* \"#utility.yul\":3091:3100   */\n  dup5\n    /* \"#utility.yul\":3082:3089   */\n  dup7\n    /* \"#utility.yul\":3078:3101   */\n  sub\n    /* \"#utility.yul\":3074:3106   */\n  slt\n    /* \"#utility.yul\":3071:3190   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":3109:3188   */\n  tag_120\n  tag_44\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3071:3190   */\ntag_119:\n    /* \"#utility.yul\":3250:3251   */\n  0x00\n    /* \"#utility.yul\":3239:3248   */\n  dup5\n    /* \"#utility.yul\":3235:3252   */\n  add\n    /* \"#utility.yul\":3229:3253   */\n  mload\n    /* \"#utility.yul\":3280:3298   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3272:3278   */\n  dup2\n    /* \"#utility.yul\":3269:3299   */\n  gt\n    /* \"#utility.yul\":3266:3383   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":3302:3381   */\n  tag_122\n  tag_45\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3266:3383   */\ntag_121:\n    /* \"#utility.yul\":3407:3481   */\n  tag_123\n    /* \"#utility.yul\":3473:3480   */\n  dup7\n    /* \"#utility.yul\":3464:3470   */\n  dup3\n    /* \"#utility.yul\":3453:3462   */\n  dup8\n    /* \"#utility.yul\":3449:3471   */\n  add\n    /* \"#utility.yul\":3407:3481   */\n  tag_55\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3397:3481   */\n  swap4\n  pop\n    /* \"#utility.yul\":3200:3491   */\n  pop\n    /* \"#utility.yul\":3551:3553   */\n  0x20\n    /* \"#utility.yul\":3540:3549   */\n  dup5\n    /* \"#utility.yul\":3536:3554   */\n  add\n    /* \"#utility.yul\":3530:3555   */\n  mload\n    /* \"#utility.yul\":3582:3600   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3574:3580   */\n  dup2\n    /* \"#utility.yul\":3571:3601   */\n  gt\n    /* \"#utility.yul\":3568:3685   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":3604:3683   */\n  tag_125\n  tag_45\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3568:3685   */\ntag_124:\n    /* \"#utility.yul\":3709:3783   */\n  tag_126\n    /* \"#utility.yul\":3775:3782   */\n  dup7\n    /* \"#utility.yul\":3766:3772   */\n  dup3\n    /* \"#utility.yul\":3755:3764   */\n  dup8\n    /* \"#utility.yul\":3751:3773   */\n  add\n    /* \"#utility.yul\":3709:3783   */\n  tag_55\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3699:3783   */\n  swap3\n  pop\n    /* \"#utility.yul\":3501:3793   */\n  pop\n    /* \"#utility.yul\":3832:3834   */\n  0x40\n    /* \"#utility.yul\":3858:3922   */\n  tag_127\n    /* \"#utility.yul\":3914:3921   */\n  dup7\n    /* \"#utility.yul\":3905:3911   */\n  dup3\n    /* \"#utility.yul\":3894:3903   */\n  dup8\n    /* \"#utility.yul\":3890:3912   */\n  add\n    /* \"#utility.yul\":3858:3922   */\n  tag_58\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":3848:3922   */\n  swap2\n  pop\n    /* \"#utility.yul\":3803:3932   */\n  pop\n    /* \"#utility.yul\":2930:3939   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":3945:4044   */\ntag_59:\n    /* \"#utility.yul\":3997:4003   */\n  0x00\n    /* \"#utility.yul\":4031:4036   */\n  dup2\n    /* \"#utility.yul\":4025:4037   */\n  mload\n    /* \"#utility.yul\":4015:4037   */\n  swap1\n  pop\n    /* \"#utility.yul\":3945:4044   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4050:4230   */\ntag_60:\n    /* \"#utility.yul\":4098:4175   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4095:4096   */\n  0x00\n    /* \"#utility.yul\":4088:4176   */\n  mstore\n    /* \"#utility.yul\":4195:4199   */\n  0x22\n    /* \"#utility.yul\":4192:4193   */\n  0x04\n    /* \"#utility.yul\":4185:4200   */\n  mstore\n    /* \"#utility.yul\":4219:4223   */\n  0x24\n    /* \"#utility.yul\":4216:4217   */\n  0x00\n    /* \"#utility.yul\":4209:4224   */\n  revert\n    /* \"#utility.yul\":4236:4556   */\ntag_61:\n    /* \"#utility.yul\":4280:4286   */\n  0x00\n    /* \"#utility.yul\":4317:4318   */\n  0x02\n    /* \"#utility.yul\":4311:4315   */\n  dup3\n    /* \"#utility.yul\":4307:4319   */\n  div\n    /* \"#utility.yul\":4297:4319   */\n  swap1\n  pop\n    /* \"#utility.yul\":4364:4365   */\n  0x01\n    /* \"#utility.yul\":4358:4362   */\n  dup3\n    /* \"#utility.yul\":4354:4366   */\n  and\n    /* \"#utility.yul\":4385:4403   */\n  dup1\n    /* \"#utility.yul\":4375:4456   */\n  tag_131\n  jumpi\n    /* \"#utility.yul\":4441:4445   */\n  0x7f\n    /* \"#utility.yul\":4433:4439   */\n  dup3\n    /* \"#utility.yul\":4429:4446   */\n  and\n    /* \"#utility.yul\":4419:4446   */\n  swap2\n  pop\n    /* \"#utility.yul\":4375:4456   */\ntag_131:\n    /* \"#utility.yul\":4503:4505   */\n  0x20\n    /* \"#utility.yul\":4495:4501   */\n  dup3\n    /* \"#utility.yul\":4492:4506   */\n  lt\n    /* \"#utility.yul\":4472:4490   */\n  dup2\n    /* \"#utility.yul\":4469:4507   */\n  sub\n    /* \"#utility.yul\":4466:4550   */\n  tag_132\n  jumpi\n    /* \"#utility.yul\":4522:4540   */\n  tag_133\n  tag_60\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4466:4550   */\ntag_132:\n    /* \"#utility.yul\":4287:4556   */\n  pop\n    /* \"#utility.yul\":4236:4556   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4562:4703   */\ntag_62:\n    /* \"#utility.yul\":4611:4615   */\n  0x00\n    /* \"#utility.yul\":4634:4637   */\n  dup2\n    /* \"#utility.yul\":4626:4637   */\n  swap1\n  pop\n    /* \"#utility.yul\":4657:4660   */\n  dup2\n    /* \"#utility.yul\":4654:4655   */\n  0x00\n    /* \"#utility.yul\":4647:4661   */\n  mstore\n    /* \"#utility.yul\":4691:4695   */\n  0x20\n    /* \"#utility.yul\":4688:4689   */\n  0x00\n    /* \"#utility.yul\":4678:4696   */\n  keccak256\n    /* \"#utility.yul\":4670:4696   */\n  swap1\n  pop\n    /* \"#utility.yul\":4562:4703   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4709:4802   */\ntag_63:\n    /* \"#utility.yul\":4746:4752   */\n  0x00\n    /* \"#utility.yul\":4793:4795   */\n  0x20\n    /* \"#utility.yul\":4788:4790   */\n  0x1f\n    /* \"#utility.yul\":4781:4786   */\n  dup4\n    /* \"#utility.yul\":4777:4791   */\n  add\n    /* \"#utility.yul\":4773:4796   */\n  div\n    /* \"#utility.yul\":4763:4796   */\n  swap1\n  pop\n    /* \"#utility.yul\":4709:4802   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4808:4915   */\ntag_64:\n    /* \"#utility.yul\":4852:4860   */\n  0x00\n    /* \"#utility.yul\":4902:4907   */\n  dup3\n    /* \"#utility.yul\":4896:4900   */\n  dup3\n    /* \"#utility.yul\":4892:4908   */\n  shl\n    /* \"#utility.yul\":4871:4908   */\n  swap1\n  pop\n    /* \"#utility.yul\":4808:4915   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4921:5314   */\ntag_65:\n    /* \"#utility.yul\":4990:4996   */\n  0x00\n    /* \"#utility.yul\":5040:5041   */\n  0x08\n    /* \"#utility.yul\":5028:5038   */\n  dup4\n    /* \"#utility.yul\":5024:5042   */\n  mul\n    /* \"#utility.yul\":5063:5160   */\n  tag_138\n    /* \"#utility.yul\":5093:5159   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5082:5091   */\n  dup3\n    /* \"#utility.yul\":5063:5160   */\n  tag_64\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":5181:5220   */\n  tag_139\n    /* \"#utility.yul\":5211:5219   */\n  dup7\n    /* \"#utility.yul\":5200:5209   */\n  dup4\n    /* \"#utility.yul\":5181:5220   */\n  tag_64\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5169:5220   */\n  swap6\n  pop\n    /* \"#utility.yul\":5253:5257   */\n  dup1\n    /* \"#utility.yul\":5249:5258   */\n  not\n    /* \"#utility.yul\":5242:5247   */\n  dup5\n    /* \"#utility.yul\":5238:5259   */\n  and\n    /* \"#utility.yul\":5229:5259   */\n  swap4\n  pop\n    /* \"#utility.yul\":5302:5306   */\n  dup1\n    /* \"#utility.yul\":5292:5300   */\n  dup7\n    /* \"#utility.yul\":5288:5307   */\n  and\n    /* \"#utility.yul\":5281:5286   */\n  dup5\n    /* \"#utility.yul\":5278:5308   */\n  or\n    /* \"#utility.yul\":5268:5308   */\n  swap3\n  pop\n    /* \"#utility.yul\":4997:5314   */\n  pop\n  pop\n    /* \"#utility.yul\":4921:5314   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5320:5380   */\ntag_66:\n    /* \"#utility.yul\":5348:5351   */\n  0x00\n    /* \"#utility.yul\":5369:5374   */\n  dup2\n    /* \"#utility.yul\":5362:5374   */\n  swap1\n  pop\n    /* \"#utility.yul\":5320:5380   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5386:5528   */\ntag_67:\n    /* \"#utility.yul\":5436:5445   */\n  0x00\n    /* \"#utility.yul\":5469:5522   */\n  tag_142\n    /* \"#utility.yul\":5487:5521   */\n  tag_143\n    /* \"#utility.yul\":5496:5520   */\n  tag_144\n    /* \"#utility.yul\":5514:5519   */\n  dup5\n    /* \"#utility.yul\":5496:5520   */\n  tag_56\n  jump\t// in\ntag_144:\n    /* \"#utility.yul\":5487:5521   */\n  tag_66\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5469:5522   */\n  tag_56\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5456:5522   */\n  swap1\n  pop\n    /* \"#utility.yul\":5386:5528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5534:5609   */\ntag_68:\n    /* \"#utility.yul\":5577:5580   */\n  0x00\n    /* \"#utility.yul\":5598:5603   */\n  dup2\n    /* \"#utility.yul\":5591:5603   */\n  swap1\n  pop\n    /* \"#utility.yul\":5534:5609   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5615:5884   */\ntag_69:\n    /* \"#utility.yul\":5725:5764   */\n  tag_147\n    /* \"#utility.yul\":5756:5763   */\n  dup4\n    /* \"#utility.yul\":5725:5764   */\n  tag_67\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5786:5877   */\n  tag_148\n    /* \"#utility.yul\":5835:5876   */\n  tag_149\n    /* \"#utility.yul\":5859:5875   */\n  dup3\n    /* \"#utility.yul\":5835:5876   */\n  tag_68\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5827:5833   */\n  dup5\n    /* \"#utility.yul\":5820:5824   */\n  dup5\n    /* \"#utility.yul\":5814:5825   */\n  sload\n    /* \"#utility.yul\":5786:5877   */\n  tag_65\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5780:5784   */\n  dup3\n    /* \"#utility.yul\":5773:5878   */\n  sstore\n    /* \"#utility.yul\":5691:5884   */\n  pop\n    /* \"#utility.yul\":5615:5884   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5890:5963   */\ntag_70:\n    /* \"#utility.yul\":5935:5938   */\n  0x00\n    /* \"#utility.yul\":5890:5963   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5969:6158   */\ntag_71:\n    /* \"#utility.yul\":6046:6078   */\n  tag_152\n  tag_70\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6087:6152   */\n  tag_153\n    /* \"#utility.yul\":6145:6151   */\n  dup2\n    /* \"#utility.yul\":6137:6143   */\n  dup5\n    /* \"#utility.yul\":6131:6135   */\n  dup5\n    /* \"#utility.yul\":6087:6152   */\n  tag_69\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6022:6158   */\n  pop\n    /* \"#utility.yul\":5969:6158   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6164:6350   */\ntag_72:\n    /* \"#utility.yul\":6224:6344   */\ntag_155:\n    /* \"#utility.yul\":6241:6244   */\n  dup2\n    /* \"#utility.yul\":6234:6239   */\n  dup2\n    /* \"#utility.yul\":6231:6245   */\n  lt\n    /* \"#utility.yul\":6224:6344   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":6295:6334   */\n  tag_158\n    /* \"#utility.yul\":6332:6333   */\n  0x00\n    /* \"#utility.yul\":6325:6330   */\n  dup3\n    /* \"#utility.yul\":6295:6334   */\n  tag_71\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6268:6269   */\n  0x01\n    /* \"#utility.yul\":6261:6266   */\n  dup2\n    /* \"#utility.yul\":6257:6270   */\n  add\n    /* \"#utility.yul\":6248:6270   */\n  swap1\n  pop\n    /* \"#utility.yul\":6224:6344   */\n  jump(tag_155)\ntag_157:\n    /* \"#utility.yul\":6164:6350   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6356:6899   */\ntag_73:\n    /* \"#utility.yul\":6457:6459   */\n  0x1f\n    /* \"#utility.yul\":6452:6455   */\n  dup3\n    /* \"#utility.yul\":6449:6460   */\n  gt\n    /* \"#utility.yul\":6446:6892   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":6491:6529   */\n  tag_161\n    /* \"#utility.yul\":6523:6528   */\n  dup2\n    /* \"#utility.yul\":6491:6529   */\n  tag_62\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6575:6604   */\n  tag_162\n    /* \"#utility.yul\":6593:6603   */\n  dup5\n    /* \"#utility.yul\":6575:6604   */\n  tag_63\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":6565:6573   */\n  dup2\n    /* \"#utility.yul\":6561:6605   */\n  add\n    /* \"#utility.yul\":6758:6760   */\n  0x20\n    /* \"#utility.yul\":6746:6756   */\n  dup6\n    /* \"#utility.yul\":6743:6761   */\n  lt\n    /* \"#utility.yul\":6740:6789   */\n  iszero\n  tag_163\n  jumpi\n    /* \"#utility.yul\":6779:6787   */\n  dup2\n    /* \"#utility.yul\":6764:6787   */\n  swap1\n  pop\n    /* \"#utility.yul\":6740:6789   */\ntag_163:\n    /* \"#utility.yul\":6802:6882   */\n  tag_164\n    /* \"#utility.yul\":6858:6880   */\n  tag_165\n    /* \"#utility.yul\":6876:6879   */\n  dup6\n    /* \"#utility.yul\":6858:6880   */\n  tag_63\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6848:6856   */\n  dup4\n    /* \"#utility.yul\":6844:6881   */\n  add\n    /* \"#utility.yul\":6831:6842   */\n  dup3\n    /* \"#utility.yul\":6802:6882   */\n  tag_72\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":6461:6892   */\n  pop\n  pop\n    /* \"#utility.yul\":6446:6892   */\ntag_160:\n    /* \"#utility.yul\":6356:6899   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6905:7022   */\ntag_74:\n    /* \"#utility.yul\":6959:6967   */\n  0x00\n    /* \"#utility.yul\":7009:7014   */\n  dup3\n    /* \"#utility.yul\":7003:7007   */\n  dup3\n    /* \"#utility.yul\":6999:7015   */\n  shr\n    /* \"#utility.yul\":6978:7015   */\n  swap1\n  pop\n    /* \"#utility.yul\":6905:7022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7028:7197   */\ntag_75:\n    /* \"#utility.yul\":7072:7078   */\n  0x00\n    /* \"#utility.yul\":7105:7156   */\n  tag_168\n    /* \"#utility.yul\":7153:7154   */\n  0x00\n    /* \"#utility.yul\":7149:7155   */\n  not\n    /* \"#utility.yul\":7141:7146   */\n  dup5\n    /* \"#utility.yul\":7138:7139   */\n  0x08\n    /* \"#utility.yul\":7134:7147   */\n  mul\n    /* \"#utility.yul\":7105:7156   */\n  tag_74\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7101:7157   */\n  not\n    /* \"#utility.yul\":7186:7190   */\n  dup1\n    /* \"#utility.yul\":7180:7184   */\n  dup4\n    /* \"#utility.yul\":7176:7191   */\n  and\n    /* \"#utility.yul\":7166:7191   */\n  swap2\n  pop\n    /* \"#utility.yul\":7079:7197   */\n  pop\n    /* \"#utility.yul\":7028:7197   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7202:7497   */\ntag_76:\n    /* \"#utility.yul\":7278:7282   */\n  0x00\n    /* \"#utility.yul\":7424:7453   */\n  tag_170\n    /* \"#utility.yul\":7449:7452   */\n  dup4\n    /* \"#utility.yul\":7443:7447   */\n  dup4\n    /* \"#utility.yul\":7424:7453   */\n  tag_75\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7416:7453   */\n  swap2\n  pop\n    /* \"#utility.yul\":7486:7489   */\n  dup3\n    /* \"#utility.yul\":7483:7484   */\n  0x02\n    /* \"#utility.yul\":7479:7490   */\n  mul\n    /* \"#utility.yul\":7473:7477   */\n  dup3\n    /* \"#utility.yul\":7470:7491   */\n  or\n    /* \"#utility.yul\":7462:7491   */\n  swap1\n  pop\n    /* \"#utility.yul\":7202:7497   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7502:8897   */\ntag_8:\n    /* \"#utility.yul\":7619:7656   */\n  tag_172\n    /* \"#utility.yul\":7652:7655   */\n  dup3\n    /* \"#utility.yul\":7619:7656   */\n  tag_59\n  jump\t// in\ntag_172:\n    /* \"#utility.yul\":7721:7739   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7713:7719   */\n  dup2\n    /* \"#utility.yul\":7710:7740   */\n  gt\n    /* \"#utility.yul\":7707:7763   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":7743:7761   */\n  tag_174\n  tag_49\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":7707:7763   */\ntag_173:\n    /* \"#utility.yul\":7787:7825   */\n  tag_175\n    /* \"#utility.yul\":7819:7823   */\n  dup3\n    /* \"#utility.yul\":7813:7824   */\n  sload\n    /* \"#utility.yul\":7787:7825   */\n  tag_61\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":7872:7939   */\n  tag_176\n    /* \"#utility.yul\":7932:7938   */\n  dup3\n    /* \"#utility.yul\":7924:7930   */\n  dup3\n    /* \"#utility.yul\":7918:7922   */\n  dup6\n    /* \"#utility.yul\":7872:7939   */\n  tag_73\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":7966:7967   */\n  0x00\n    /* \"#utility.yul\":7990:7994   */\n  0x20\n    /* \"#utility.yul\":7977:7994   */\n  swap1\n  pop\n    /* \"#utility.yul\":8022:8024   */\n  0x1f\n    /* \"#utility.yul\":8014:8020   */\n  dup4\n    /* \"#utility.yul\":8011:8025   */\n  gt\n    /* \"#utility.yul\":8039:8040   */\n  0x01\n    /* \"#utility.yul\":8034:8652   */\n  dup2\n  eq\n  tag_178\n  jumpi\n    /* \"#utility.yul\":8696:8697   */\n  0x00\n    /* \"#utility.yul\":8713:8719   */\n  dup5\n    /* \"#utility.yul\":8710:8787   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8762:8771   */\n  dup3\n    /* \"#utility.yul\":8757:8760   */\n  dup8\n    /* \"#utility.yul\":8753:8772   */\n  add\n    /* \"#utility.yul\":8747:8773   */\n  mload\n    /* \"#utility.yul\":8738:8773   */\n  swap1\n  pop\n    /* \"#utility.yul\":8710:8787   */\ntag_179:\n    /* \"#utility.yul\":8813:8880   */\n  tag_180\n    /* \"#utility.yul\":8873:8879   */\n  dup6\n    /* \"#utility.yul\":8866:8871   */\n  dup3\n    /* \"#utility.yul\":8813:8880   */\n  tag_76\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8807:8811   */\n  dup7\n    /* \"#utility.yul\":8800:8881   */\n  sstore\n    /* \"#utility.yul\":8669:8891   */\n  pop\n    /* \"#utility.yul\":8004:8891   */\n  jump(tag_177)\n    /* \"#utility.yul\":8034:8652   */\ntag_178:\n    /* \"#utility.yul\":8086:8090   */\n  0x1f\n    /* \"#utility.yul\":8082:8091   */\n  not\n    /* \"#utility.yul\":8074:8080   */\n  dup5\n    /* \"#utility.yul\":8070:8092   */\n  and\n    /* \"#utility.yul\":8120:8157   */\n  tag_181\n    /* \"#utility.yul\":8152:8156   */\n  dup7\n    /* \"#utility.yul\":8120:8157   */\n  tag_62\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":8179:8180   */\n  0x00\n    /* \"#utility.yul\":8193:8401   */\ntag_182:\n    /* \"#utility.yul\":8207:8214   */\n  dup3\n    /* \"#utility.yul\":8204:8205   */\n  dup2\n    /* \"#utility.yul\":8201:8215   */\n  lt\n    /* \"#utility.yul\":8193:8401   */\n  iszero\n  tag_184\n  jumpi\n    /* \"#utility.yul\":8286:8295   */\n  dup5\n    /* \"#utility.yul\":8281:8284   */\n  dup10\n    /* \"#utility.yul\":8277:8296   */\n  add\n    /* \"#utility.yul\":8271:8297   */\n  mload\n    /* \"#utility.yul\":8263:8269   */\n  dup3\n    /* \"#utility.yul\":8256:8298   */\n  sstore\n    /* \"#utility.yul\":8337:8338   */\n  0x01\n    /* \"#utility.yul\":8329:8335   */\n  dup3\n    /* \"#utility.yul\":8325:8339   */\n  add\n    /* \"#utility.yul\":8315:8339   */\n  swap2\n  pop\n    /* \"#utility.yul\":8384:8386   */\n  0x20\n    /* \"#utility.yul\":8373:8382   */\n  dup6\n    /* \"#utility.yul\":8369:8387   */\n  add\n    /* \"#utility.yul\":8356:8387   */\n  swap5\n  pop\n    /* \"#utility.yul\":8230:8234   */\n  0x20\n    /* \"#utility.yul\":8227:8228   */\n  dup2\n    /* \"#utility.yul\":8223:8235   */\n  add\n    /* \"#utility.yul\":8218:8235   */\n  swap1\n  pop\n    /* \"#utility.yul\":8193:8401   */\n  jump(tag_182)\ntag_184:\n    /* \"#utility.yul\":8429:8435   */\n  dup7\n    /* \"#utility.yul\":8420:8427   */\n  dup4\n    /* \"#utility.yul\":8417:8436   */\n  lt\n    /* \"#utility.yul\":8414:8593   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8487:8496   */\n  dup5\n    /* \"#utility.yul\":8482:8485   */\n  dup10\n    /* \"#utility.yul\":8478:8497   */\n  add\n    /* \"#utility.yul\":8472:8498   */\n  mload\n    /* \"#utility.yul\":8530:8578   */\n  tag_186\n    /* \"#utility.yul\":8572:8576   */\n  0x1f\n    /* \"#utility.yul\":8564:8570   */\n  dup10\n    /* \"#utility.yul\":8560:8577   */\n  and\n    /* \"#utility.yul\":8549:8558   */\n  dup3\n    /* \"#utility.yul\":8530:8578   */\n  tag_75\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8522:8528   */\n  dup4\n    /* \"#utility.yul\":8515:8579   */\n  sstore\n    /* \"#utility.yul\":8437:8593   */\n  pop\n    /* \"#utility.yul\":8414:8593   */\ntag_185:\n    /* \"#utility.yul\":8639:8640   */\n  0x01\n    /* \"#utility.yul\":8635:8636   */\n  0x02\n    /* \"#utility.yul\":8627:8633   */\n  dup9\n    /* \"#utility.yul\":8623:8637   */\n  mul\n    /* \"#utility.yul\":8619:8641   */\n  add\n    /* \"#utility.yul\":8613:8617   */\n  dup9\n    /* \"#utility.yul\":8606:8642   */\n  sstore\n    /* \"#utility.yul\":8041:8652   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8004:8891   */\ntag_177:\n  pop\n    /* \"#utility.yul\":7594:8897   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7502:8897   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8903:9029   */\ntag_77:\n    /* \"#utility.yul\":8940:8947   */\n  0x00\n    /* \"#utility.yul\":8980:9022   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":8973:8978   */\n  dup3\n    /* \"#utility.yul\":8969:9023   */\n  and\n    /* \"#utility.yul\":8958:9023   */\n  swap1\n  pop\n    /* \"#utility.yul\":8903:9029   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9035:9131   */\ntag_78:\n    /* \"#utility.yul\":9072:9079   */\n  0x00\n    /* \"#utility.yul\":9101:9125   */\n  tag_189\n    /* \"#utility.yul\":9119:9124   */\n  dup3\n    /* \"#utility.yul\":9101:9125   */\n  tag_77\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9090:9125   */\n  swap1\n  pop\n    /* \"#utility.yul\":9035:9131   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9137:9255   */\ntag_79:\n    /* \"#utility.yul\":9224:9248   */\n  tag_191\n    /* \"#utility.yul\":9242:9247   */\n  dup2\n    /* \"#utility.yul\":9224:9248   */\n  tag_78\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9219:9222   */\n  dup3\n    /* \"#utility.yul\":9212:9249   */\n  mstore\n    /* \"#utility.yul\":9137:9255   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9261:9483   */\ntag_19:\n    /* \"#utility.yul\":9354:9358   */\n  0x00\n    /* \"#utility.yul\":9392:9394   */\n  0x20\n    /* \"#utility.yul\":9381:9390   */\n  dup3\n    /* \"#utility.yul\":9377:9395   */\n  add\n    /* \"#utility.yul\":9369:9395   */\n  swap1\n  pop\n    /* \"#utility.yul\":9405:9476   */\n  tag_193\n    /* \"#utility.yul\":9473:9474   */\n  0x00\n    /* \"#utility.yul\":9462:9471   */\n  dup4\n    /* \"#utility.yul\":9458:9475   */\n  add\n    /* \"#utility.yul\":9449:9455   */\n  dup5\n    /* \"#utility.yul\":9405:9476   */\n  tag_79\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9261:9483   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9489:9669   */\ntag_80:\n    /* \"#utility.yul\":9537:9614   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9534:9535   */\n  0x00\n    /* \"#utility.yul\":9527:9615   */\n  mstore\n    /* \"#utility.yul\":9634:9638   */\n  0x11\n    /* \"#utility.yul\":9631:9632   */\n  0x04\n    /* \"#utility.yul\":9624:9639   */\n  mstore\n    /* \"#utility.yul\":9658:9662   */\n  0x24\n    /* \"#utility.yul\":9655:9656   */\n  0x00\n    /* \"#utility.yul\":9648:9663   */\n  revert\n    /* \"#utility.yul\":9675:9866   */\ntag_32:\n    /* \"#utility.yul\":9715:9718   */\n  0x00\n    /* \"#utility.yul\":9734:9754   */\n  tag_196\n    /* \"#utility.yul\":9752:9753   */\n  dup3\n    /* \"#utility.yul\":9734:9754   */\n  tag_56\n  jump\t// in\ntag_196:\n    /* \"#utility.yul\":9729:9754   */\n  swap2\n  pop\n    /* \"#utility.yul\":9768:9788   */\n  tag_197\n    /* \"#utility.yul\":9786:9787   */\n  dup4\n    /* \"#utility.yul\":9768:9788   */\n  tag_56\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9763:9788   */\n  swap3\n  pop\n    /* \"#utility.yul\":9811:9812   */\n  dup3\n    /* \"#utility.yul\":9808:9809   */\n  dup3\n    /* \"#utility.yul\":9804:9813   */\n  add\n    /* \"#utility.yul\":9797:9813   */\n  swap1\n  pop\n    /* \"#utility.yul\":9832:9835   */\n  dup1\n    /* \"#utility.yul\":9829:9830   */\n  dup3\n    /* \"#utility.yul\":9826:9836   */\n  gt\n    /* \"#utility.yul\":9823:9859   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":9839:9857   */\n  tag_199\n  tag_80\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9823:9859   */\ntag_198:\n    /* \"#utility.yul\":9675:9866   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9872:9990   */\ntag_81:\n    /* \"#utility.yul\":9959:9983   */\n  tag_201\n    /* \"#utility.yul\":9977:9982   */\n  dup2\n    /* \"#utility.yul\":9959:9983   */\n  tag_56\n  jump\t// in\ntag_201:\n    /* \"#utility.yul\":9954:9957   */\n  dup3\n    /* \"#utility.yul\":9947:9984   */\n  mstore\n    /* \"#utility.yul\":9872:9990   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9996:10438   */\ntag_36:\n    /* \"#utility.yul\":10145:10149   */\n  0x00\n    /* \"#utility.yul\":10183:10185   */\n  0x60\n    /* \"#utility.yul\":10172:10181   */\n  dup3\n    /* \"#utility.yul\":10168:10186   */\n  add\n    /* \"#utility.yul\":10160:10186   */\n  swap1\n  pop\n    /* \"#utility.yul\":10196:10267   */\n  tag_203\n    /* \"#utility.yul\":10264:10265   */\n  0x00\n    /* \"#utility.yul\":10253:10262   */\n  dup4\n    /* \"#utility.yul\":10249:10266   */\n  add\n    /* \"#utility.yul\":10240:10246   */\n  dup7\n    /* \"#utility.yul\":10196:10267   */\n  tag_79\n  jump\t// in\ntag_203:\n    /* \"#utility.yul\":10277:10349   */\n  tag_204\n    /* \"#utility.yul\":10345:10347   */\n  0x20\n    /* \"#utility.yul\":10334:10343   */\n  dup4\n    /* \"#utility.yul\":10330:10348   */\n  add\n    /* \"#utility.yul\":10321:10327   */\n  dup6\n    /* \"#utility.yul\":10277:10349   */\n  tag_81\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10359:10431   */\n  tag_205\n    /* \"#utility.yul\":10427:10429   */\n  0x40\n    /* \"#utility.yul\":10416:10425   */\n  dup4\n    /* \"#utility.yul\":10412:10430   */\n  add\n    /* \"#utility.yul\":10403:10409   */\n  dup5\n    /* \"#utility.yul\":10359:10431   */\n  tag_81\n  jump\t// in\ntag_205:\n    /* \"#utility.yul\":9996:10438   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10444:10666   */\ntag_40:\n    /* \"#utility.yul\":10537:10541   */\n  0x00\n    /* \"#utility.yul\":10575:10577   */\n  0x20\n    /* \"#utility.yul\":10564:10573   */\n  dup3\n    /* \"#utility.yul\":10560:10578   */\n  add\n    /* \"#utility.yul\":10552:10578   */\n  swap1\n  pop\n    /* \"#utility.yul\":10588:10659   */\n  tag_207\n    /* \"#utility.yul\":10656:10657   */\n  0x00\n    /* \"#utility.yul\":10645:10654   */\n  dup4\n    /* \"#utility.yul\":10641:10658   */\n  add\n    /* \"#utility.yul\":10632:10638   */\n  dup5\n    /* \"#utility.yul\":10588:10659   */\n  tag_81\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10444:10666   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"ECE473 Final Project/DAOToken.sol\":231:1622  contract DAOToken is ERC20, AccessControl {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ECE473 Final Project/DAOToken.sol\":231:1622  contract DAOToken is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x91d14854\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x313ce567\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x31e9e9c0\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6b2d95d4\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x1d4a8b2d\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x1d4a8b2d\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x2fe3abc7\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17be3fa5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECE473 Final Project/DAOToken.sol\":701:1001  function lockToken(address account, uint256 amount) public onlyRole(CCUS_ROLE) {... */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECE473 Final Project/DAOToken.sol\":1498:1620  function grantCCUSRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_8:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_9:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"ECE473 Final Project/DAOToken.sol\":369:427  bytes32 public constant CCUS_ROLE = keccak256(\"CCUS_ROLE\") */\n    tag_12:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_13:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ECE473 Final Project/DAOToken.sol\":1007:1368  function unlockToken(address account, uint256 amount) public onlyRole(CCUS_ROLE) {... */\n    tag_14:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_15:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      stop\n        /* \"ECE473 Final Project/DAOToken.sol\":1374:1492  function getLockedTokens(address account) public view returns (uint256) {... */\n    tag_16:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_18:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_19:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_20:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_23:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_107\n      swap2\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      tag_109\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_112\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_114\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_118\n      swap1\n      tag_117\n      jump\t// in\n    tag_118:\n      dup1\n      iszero\n      tag_119\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_120\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_119)\n    tag_120:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_121:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_121\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_119:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ECE473 Final Project/DAOToken.sol\":701:1001  function lockToken(address account, uint256 amount) public onlyRole(CCUS_ROLE) {... */\n    tag_44:\n        /* \"ECE473 Final Project/DAOToken.sol\":405:427  keccak256(\"CCUS_ROLE\") */\n      0xa0017d6d59dd228ae09b05f9ef75d0136b06c4284ca797e9b72b0a3a195e403f\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_128\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_129\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_128:\n        /* \"ECE473 Final Project/DAOToken.sol\":808:826  balanceOf(account) */\n      tag_131\n        /* \"ECE473 Final Project/DAOToken.sol\":818:825  account */\n      dup4\n        /* \"ECE473 Final Project/DAOToken.sol\":808:817  balanceOf */\n      tag_87\n        /* \"ECE473 Final Project/DAOToken.sol\":808:826  balanceOf(account) */\n      jump\t// in\n    tag_131:\n        /* \"ECE473 Final Project/DAOToken.sol\":798:804  amount */\n      dup3\n        /* \"ECE473 Final Project/DAOToken.sol\":798:826  amount <= balanceOf(account) */\n      gt\n      iszero\n        /* \"ECE473 Final Project/DAOToken.sol\":790:874  require(amount <= balanceOf(account), \"DAOToken: cannot lock more than the balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"ECE473 Final Project/DAOToken.sol\":909:943  _lockedTokens[account].add(amount) */\n      tag_135\n        /* \"ECE473 Final Project/DAOToken.sol\":936:942  amount */\n      dup3\n        /* \"ECE473 Final Project/DAOToken.sol\":909:922  _lockedTokens */\n      0x06\n        /* \"ECE473 Final Project/DAOToken.sol\":909:931  _lockedTokens[account] */\n      0x00\n        /* \"ECE473 Final Project/DAOToken.sol\":923:930  account */\n      dup7\n        /* \"ECE473 Final Project/DAOToken.sol\":909:931  _lockedTokens[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ECE473 Final Project/DAOToken.sol\":909:935  _lockedTokens[account].add */\n      tag_136\n      swap1\n        /* \"ECE473 Final Project/DAOToken.sol\":909:943  _lockedTokens[account].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"ECE473 Final Project/DAOToken.sol\":884:897  _lockedTokens */\n      0x06\n        /* \"ECE473 Final Project/DAOToken.sol\":884:906  _lockedTokens[account] */\n      0x00\n        /* \"ECE473 Final Project/DAOToken.sol\":898:905  account */\n      dup6\n        /* \"ECE473 Final Project/DAOToken.sol\":884:906  _lockedTokens[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECE473 Final Project/DAOToken.sol\":884:943  _lockedTokens[account] = _lockedTokens[account].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ECE473 Final Project/DAOToken.sol\":953:994  _transfer(account, address(this), amount) */\n      tag_137\n        /* \"ECE473 Final Project/DAOToken.sol\":963:970  account */\n      dup4\n        /* \"ECE473 Final Project/DAOToken.sol\":980:984  this */\n      address\n        /* \"ECE473 Final Project/DAOToken.sol\":987:993  amount */\n      dup5\n        /* \"ECE473 Final Project/DAOToken.sol\":953:962  _transfer */\n      tag_138\n        /* \"ECE473 Final Project/DAOToken.sol\":953:994  _transfer(account, address(this), amount) */\n      jump\t// in\n    tag_137:\n        /* \"ECE473 Final Project/DAOToken.sol\":701:1001  function lockToken(address account, uint256 amount) public onlyRole(CCUS_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ECE473 Final Project/DAOToken.sol\":1498:1620  function grantCCUSRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"ECE473 Final Project/DAOToken.sol\":1554:1572  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_129\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_141:\n        /* \"ECE473 Final Project/DAOToken.sol\":1584:1613  grantRole(CCUS_ROLE, account) */\n      tag_143\n        /* \"ECE473 Final Project/DAOToken.sol\":405:427  keccak256(\"CCUS_ROLE\") */\n      0xa0017d6d59dd228ae09b05f9ef75d0136b06c4284ca797e9b72b0a3a195e403f\n        /* \"ECE473 Final Project/DAOToken.sol\":1605:1612  account */\n      dup4\n        /* \"ECE473 Final Project/DAOToken.sol\":1584:1593  grantRole */\n      tag_67\n        /* \"ECE473 Final Project/DAOToken.sol\":1584:1613  grantRole(CCUS_ROLE, account) */\n      jump\t// in\n    tag_143:\n        /* \"ECE473 Final Project/DAOToken.sol\":1498:1620  function grantCCUSRole(address account) public onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_147\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_61\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_129\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_155\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_154:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ECE473 Final Project/DAOToken.sol\":369:427  bytes32 public constant CCUS_ROLE = keccak256(\"CCUS_ROLE\") */\n    tag_69:\n        /* \"ECE473 Final Project/DAOToken.sol\":405:427  keccak256(\"CCUS_ROLE\") */\n      0xa0017d6d59dd228ae09b05f9ef75d0136b06c4284ca797e9b72b0a3a195e403f\n        /* \"ECE473 Final Project/DAOToken.sol\":369:427  bytes32 public constant CCUS_ROLE = keccak256(\"CCUS_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"ECE473 Final Project/DAOToken.sol\":1007:1368  function unlockToken(address account, uint256 amount) public onlyRole(CCUS_ROLE) {... */\n    tag_77:\n        /* \"ECE473 Final Project/DAOToken.sol\":405:427  keccak256(\"CCUS_ROLE\") */\n      0xa0017d6d59dd228ae09b05f9ef75d0136b06c4284ca797e9b72b0a3a195e403f\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_158\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_129\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_158:\n        /* \"ECE473 Final Project/DAOToken.sol\":1098:1119  uint256 lockedBalance */\n      0x00\n        /* \"ECE473 Final Project/DAOToken.sol\":1122:1135  _lockedTokens */\n      0x06\n        /* \"ECE473 Final Project/DAOToken.sol\":1122:1144  _lockedTokens[account] */\n      0x00\n        /* \"ECE473 Final Project/DAOToken.sol\":1136:1143  account */\n      dup6\n        /* \"ECE473 Final Project/DAOToken.sol\":1122:1144  _lockedTokens[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ECE473 Final Project/DAOToken.sol\":1098:1144  uint256 lockedBalance = _lockedTokens[account] */\n      swap1\n      pop\n        /* \"ECE473 Final Project/DAOToken.sol\":1172:1185  lockedBalance */\n      dup1\n        /* \"ECE473 Final Project/DAOToken.sol\":1162:1168  amount */\n      dup4\n        /* \"ECE473 Final Project/DAOToken.sol\":1162:1185  amount <= lockedBalance */\n      gt\n      iszero\n        /* \"ECE473 Final Project/DAOToken.sol\":1154:1241  require(amount <= lockedBalance, \"DAOToken: cannot unlock more tokens than are locked\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"ECE473 Final Project/DAOToken.sol\":1276:1310  _lockedTokens[account].sub(amount) */\n      tag_163\n        /* \"ECE473 Final Project/DAOToken.sol\":1303:1309  amount */\n      dup4\n        /* \"ECE473 Final Project/DAOToken.sol\":1276:1289  _lockedTokens */\n      0x06\n        /* \"ECE473 Final Project/DAOToken.sol\":1276:1298  _lockedTokens[account] */\n      0x00\n        /* \"ECE473 Final Project/DAOToken.sol\":1290:1297  account */\n      dup8\n        /* \"ECE473 Final Project/DAOToken.sol\":1276:1298  _lockedTokens[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ECE473 Final Project/DAOToken.sol\":1276:1302  _lockedTokens[account].sub */\n      tag_164\n      swap1\n        /* \"ECE473 Final Project/DAOToken.sol\":1276:1310  _lockedTokens[account].sub(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"ECE473 Final Project/DAOToken.sol\":1251:1264  _lockedTokens */\n      0x06\n        /* \"ECE473 Final Project/DAOToken.sol\":1251:1273  _lockedTokens[account] */\n      0x00\n        /* \"ECE473 Final Project/DAOToken.sol\":1265:1272  account */\n      dup7\n        /* \"ECE473 Final Project/DAOToken.sol\":1251:1273  _lockedTokens[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ECE473 Final Project/DAOToken.sol\":1251:1310  _lockedTokens[account] = _lockedTokens[account].sub(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ECE473 Final Project/DAOToken.sol\":1320:1361  _transfer(address(this), account, amount) */\n      tag_165\n        /* \"ECE473 Final Project/DAOToken.sol\":1338:1342  this */\n      address\n        /* \"ECE473 Final Project/DAOToken.sol\":1345:1352  account */\n      dup6\n        /* \"ECE473 Final Project/DAOToken.sol\":1354:1360  amount */\n      dup6\n        /* \"ECE473 Final Project/DAOToken.sol\":1320:1329  _transfer */\n      tag_138\n        /* \"ECE473 Final Project/DAOToken.sol\":1320:1361  _transfer(address(this), account, amount) */\n      jump\t// in\n    tag_165:\n        /* \"ECE473 Final Project/DAOToken.sol\":1088:1368  {... */\n      pop\n        /* \"ECE473 Final Project/DAOToken.sol\":1007:1368  function unlockToken(address account, uint256 amount) public onlyRole(CCUS_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_168\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_170\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_169:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ECE473 Final Project/DAOToken.sol\":1374:1492  function getLockedTokens(address account) public view returns (uint256) {... */\n    tag_83:\n        /* \"ECE473 Final Project/DAOToken.sol\":1437:1444  uint256 */\n      0x00\n        /* \"ECE473 Final Project/DAOToken.sol\":1463:1476  _lockedTokens */\n      0x06\n        /* \"ECE473 Final Project/DAOToken.sol\":1463:1485  _lockedTokens[account] */\n      0x00\n        /* \"ECE473 Final Project/DAOToken.sol\":1477:1484  account */\n      dup4\n        /* \"ECE473 Final Project/DAOToken.sol\":1463:1485  _lockedTokens[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ECE473 Final Project/DAOToken.sol\":1456:1485  return _lockedTokens[account] */\n      swap1\n      pop\n        /* \"ECE473 Final Project/DAOToken.sol\":1374:1492  function getLockedTokens(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_117\n      jump\t// in\n    tag_175:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_176\n      swap1\n      tag_117\n      jump\t// in\n    tag_176:\n      dup1\n      iszero\n      tag_177\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_178\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_177)\n    tag_178:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_179:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_179\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_138\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_61\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_129\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_187\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_170\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_187:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_196\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_202\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_207\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_208\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_217\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_91\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_216)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_216:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3199:3211  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_170:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_225\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_91\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_224)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_224:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_235\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_237\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_91\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_238\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_239\n      swap3\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_243\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_243:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_244)\n    tag_242:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_248)\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_249\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_251:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_253:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_254:\n        /* \"#utility.yul\":561:584   */\n      tag_290\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_253\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_291:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_255:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_293\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_254\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_29:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_296\n      tag_251\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":833:952   */\n    tag_295:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_297\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_255\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_256:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_257:\n        /* \"#utility.yul\":1268:1289   */\n      tag_300\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_256\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_32:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_302\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_257\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_258:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_259:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_260:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_261:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_262:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_308\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_258\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2222:2293   */\n      tag_309\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_259\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_310\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_260\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2392:2421   */\n      tag_311\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_261\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_36:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_313\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_262\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2879   */\n    tag_263:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2830:2872   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2823:2828   */\n      dup3\n        /* \"#utility.yul\":2819:2873   */\n      and\n        /* \"#utility.yul\":2808:2873   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2981   */\n    tag_264:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2975   */\n      tag_316\n        /* \"#utility.yul\":2969:2974   */\n      dup3\n        /* \"#utility.yul\":2951:2975   */\n      tag_263\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2940:2975   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2981   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2987:3109   */\n    tag_265:\n        /* \"#utility.yul\":3060:3084   */\n      tag_318\n        /* \"#utility.yul\":3078:3083   */\n      dup2\n        /* \"#utility.yul\":3060:3084   */\n      tag_264\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3053:3058   */\n      dup2\n        /* \"#utility.yul\":3050:3085   */\n      eq\n        /* \"#utility.yul\":3040:3103   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":3099:3100   */\n      0x00\n        /* \"#utility.yul\":3096:3097   */\n      dup1\n        /* \"#utility.yul\":3089:3101   */\n      revert\n        /* \"#utility.yul\":3040:3103   */\n    tag_319:\n        /* \"#utility.yul\":2987:3109   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3254   */\n    tag_266:\n        /* \"#utility.yul\":3161:3166   */\n      0x00\n        /* \"#utility.yul\":3199:3205   */\n      dup2\n        /* \"#utility.yul\":3186:3206   */\n      calldataload\n        /* \"#utility.yul\":3177:3206   */\n      swap1\n      pop\n        /* \"#utility.yul\":3215:3248   */\n      tag_321\n        /* \"#utility.yul\":3242:3247   */\n      dup2\n        /* \"#utility.yul\":3215:3248   */\n      tag_265\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3115:3254   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3260:3337   */\n    tag_267:\n        /* \"#utility.yul\":3297:3304   */\n      0x00\n        /* \"#utility.yul\":3326:3331   */\n      dup2\n        /* \"#utility.yul\":3315:3331   */\n      swap1\n      pop\n        /* \"#utility.yul\":3260:3337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3465   */\n    tag_268:\n        /* \"#utility.yul\":3416:3440   */\n      tag_324\n        /* \"#utility.yul\":3434:3439   */\n      dup2\n        /* \"#utility.yul\":3416:3440   */\n      tag_267\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3409:3414   */\n      dup2\n        /* \"#utility.yul\":3406:3441   */\n      eq\n        /* \"#utility.yul\":3396:3459   */\n      tag_325\n      jumpi\n        /* \"#utility.yul\":3455:3456   */\n      0x00\n        /* \"#utility.yul\":3452:3453   */\n      dup1\n        /* \"#utility.yul\":3445:3457   */\n      revert\n        /* \"#utility.yul\":3396:3459   */\n    tag_325:\n        /* \"#utility.yul\":3343:3465   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3471:3610   */\n    tag_269:\n        /* \"#utility.yul\":3517:3522   */\n      0x00\n        /* \"#utility.yul\":3555:3561   */\n      dup2\n        /* \"#utility.yul\":3542:3562   */\n      calldataload\n        /* \"#utility.yul\":3533:3562   */\n      swap1\n      pop\n        /* \"#utility.yul\":3571:3604   */\n      tag_327\n        /* \"#utility.yul\":3598:3603   */\n      dup2\n        /* \"#utility.yul\":3571:3604   */\n      tag_268\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3471:3610   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3616:4090   */\n    tag_39:\n        /* \"#utility.yul\":3684:3690   */\n      0x00\n        /* \"#utility.yul\":3692:3698   */\n      dup1\n        /* \"#utility.yul\":3741:3743   */\n      0x40\n        /* \"#utility.yul\":3729:3738   */\n      dup4\n        /* \"#utility.yul\":3720:3727   */\n      dup6\n        /* \"#utility.yul\":3716:3739   */\n      sub\n        /* \"#utility.yul\":3712:3744   */\n      slt\n        /* \"#utility.yul\":3709:3828   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":3747:3826   */\n      tag_330\n      tag_251\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3709:3828   */\n    tag_329:\n        /* \"#utility.yul\":3867:3868   */\n      0x00\n        /* \"#utility.yul\":3892:3945   */\n      tag_331\n        /* \"#utility.yul\":3937:3944   */\n      dup6\n        /* \"#utility.yul\":3928:3934   */\n      dup3\n        /* \"#utility.yul\":3917:3926   */\n      dup7\n        /* \"#utility.yul\":3913:3935   */\n      add\n        /* \"#utility.yul\":3892:3945   */\n      tag_266\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3882:3945   */\n      swap3\n      pop\n        /* \"#utility.yul\":3838:3955   */\n      pop\n        /* \"#utility.yul\":3994:3996   */\n      0x20\n        /* \"#utility.yul\":4020:4073   */\n      tag_332\n        /* \"#utility.yul\":4065:4072   */\n      dup6\n        /* \"#utility.yul\":4056:4062   */\n      dup3\n        /* \"#utility.yul\":4045:4054   */\n      dup7\n        /* \"#utility.yul\":4041:4063   */\n      add\n        /* \"#utility.yul\":4020:4073   */\n      tag_269\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4010:4073   */\n      swap2\n      pop\n        /* \"#utility.yul\":3965:4083   */\n      pop\n        /* \"#utility.yul\":3616:4090   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4096:4214   */\n    tag_270:\n        /* \"#utility.yul\":4183:4207   */\n      tag_334\n        /* \"#utility.yul\":4201:4206   */\n      dup2\n        /* \"#utility.yul\":4183:4207   */\n      tag_267\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4178:4181   */\n      dup3\n        /* \"#utility.yul\":4171:4208   */\n      mstore\n        /* \"#utility.yul\":4096:4214   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4442   */\n    tag_48:\n        /* \"#utility.yul\":4313:4317   */\n      0x00\n        /* \"#utility.yul\":4351:4353   */\n      0x20\n        /* \"#utility.yul\":4340:4349   */\n      dup3\n        /* \"#utility.yul\":4336:4354   */\n      add\n        /* \"#utility.yul\":4328:4354   */\n      swap1\n      pop\n        /* \"#utility.yul\":4364:4435   */\n      tag_336\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4421:4430   */\n      dup4\n        /* \"#utility.yul\":4417:4434   */\n      add\n        /* \"#utility.yul\":4408:4414   */\n      dup5\n        /* \"#utility.yul\":4364:4435   */\n      tag_270\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":4220:4442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4448:4777   */\n    tag_51:\n        /* \"#utility.yul\":4507:4513   */\n      0x00\n        /* \"#utility.yul\":4556:4558   */\n      0x20\n        /* \"#utility.yul\":4544:4553   */\n      dup3\n        /* \"#utility.yul\":4535:4542   */\n      dup5\n        /* \"#utility.yul\":4531:4554   */\n      sub\n        /* \"#utility.yul\":4527:4559   */\n      slt\n        /* \"#utility.yul\":4524:4643   */\n      iszero\n      tag_338\n      jumpi\n        /* \"#utility.yul\":4562:4641   */\n      tag_339\n      tag_251\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4524:4643   */\n    tag_338:\n        /* \"#utility.yul\":4682:4683   */\n      0x00\n        /* \"#utility.yul\":4707:4760   */\n      tag_340\n        /* \"#utility.yul\":4752:4759   */\n      dup5\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup6\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_266\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4653:4770   */\n      pop\n        /* \"#utility.yul\":4448:4777   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:5402   */\n    tag_55:\n        /* \"#utility.yul\":4860:4866   */\n      0x00\n        /* \"#utility.yul\":4868:4874   */\n      dup1\n        /* \"#utility.yul\":4876:4882   */\n      0x00\n        /* \"#utility.yul\":4925:4927   */\n      0x60\n        /* \"#utility.yul\":4913:4922   */\n      dup5\n        /* \"#utility.yul\":4904:4911   */\n      dup7\n        /* \"#utility.yul\":4900:4923   */\n      sub\n        /* \"#utility.yul\":4896:4928   */\n      slt\n        /* \"#utility.yul\":4893:5012   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":4931:5010   */\n      tag_343\n      tag_251\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":4893:5012   */\n    tag_342:\n        /* \"#utility.yul\":5051:5052   */\n      0x00\n        /* \"#utility.yul\":5076:5129   */\n      tag_344\n        /* \"#utility.yul\":5121:5128   */\n      dup7\n        /* \"#utility.yul\":5112:5118   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5119   */\n      add\n        /* \"#utility.yul\":5076:5129   */\n      tag_266\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5066:5129   */\n      swap4\n      pop\n        /* \"#utility.yul\":5022:5139   */\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5204:5257   */\n      tag_345\n        /* \"#utility.yul\":5249:5256   */\n      dup7\n        /* \"#utility.yul\":5240:5246   */\n      dup3\n        /* \"#utility.yul\":5229:5238   */\n      dup8\n        /* \"#utility.yul\":5225:5247   */\n      add\n        /* \"#utility.yul\":5204:5257   */\n      tag_266\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":5194:5257   */\n      swap3\n      pop\n        /* \"#utility.yul\":5149:5267   */\n      pop\n        /* \"#utility.yul\":5306:5308   */\n      0x40\n        /* \"#utility.yul\":5332:5385   */\n      tag_346\n        /* \"#utility.yul\":5377:5384   */\n      dup7\n        /* \"#utility.yul\":5368:5374   */\n      dup3\n        /* \"#utility.yul\":5357:5366   */\n      dup8\n        /* \"#utility.yul\":5353:5375   */\n      add\n        /* \"#utility.yul\":5332:5385   */\n      tag_269\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":5322:5385   */\n      swap2\n      pop\n        /* \"#utility.yul\":5277:5395   */\n      pop\n        /* \"#utility.yul\":4783:5402   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5408:5485   */\n    tag_271:\n        /* \"#utility.yul\":5445:5452   */\n      0x00\n        /* \"#utility.yul\":5474:5479   */\n      dup2\n        /* \"#utility.yul\":5463:5479   */\n      swap1\n      pop\n        /* \"#utility.yul\":5408:5485   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5491:5613   */\n    tag_272:\n        /* \"#utility.yul\":5564:5588   */\n      tag_349\n        /* \"#utility.yul\":5582:5587   */\n      dup2\n        /* \"#utility.yul\":5564:5588   */\n      tag_271\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5557:5562   */\n      dup2\n        /* \"#utility.yul\":5554:5589   */\n      eq\n        /* \"#utility.yul\":5544:5607   */\n      tag_350\n      jumpi\n        /* \"#utility.yul\":5603:5604   */\n      0x00\n        /* \"#utility.yul\":5600:5601   */\n      dup1\n        /* \"#utility.yul\":5593:5605   */\n      revert\n        /* \"#utility.yul\":5544:5607   */\n    tag_350:\n        /* \"#utility.yul\":5491:5613   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5619:5758   */\n    tag_273:\n        /* \"#utility.yul\":5665:5670   */\n      0x00\n        /* \"#utility.yul\":5703:5709   */\n      dup2\n        /* \"#utility.yul\":5690:5710   */\n      calldataload\n        /* \"#utility.yul\":5681:5710   */\n      swap1\n      pop\n        /* \"#utility.yul\":5719:5752   */\n      tag_352\n        /* \"#utility.yul\":5746:5751   */\n      dup2\n        /* \"#utility.yul\":5719:5752   */\n      tag_272\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5619:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6093   */\n    tag_60:\n        /* \"#utility.yul\":5823:5829   */\n      0x00\n        /* \"#utility.yul\":5872:5874   */\n      0x20\n        /* \"#utility.yul\":5860:5869   */\n      dup3\n        /* \"#utility.yul\":5851:5858   */\n      dup5\n        /* \"#utility.yul\":5847:5870   */\n      sub\n        /* \"#utility.yul\":5843:5875   */\n      slt\n        /* \"#utility.yul\":5840:5959   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":5878:5957   */\n      tag_355\n      tag_251\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":5840:5959   */\n    tag_354:\n        /* \"#utility.yul\":5998:5999   */\n      0x00\n        /* \"#utility.yul\":6023:6076   */\n      tag_356\n        /* \"#utility.yul\":6068:6075   */\n      dup5\n        /* \"#utility.yul\":6059:6065   */\n      dup3\n        /* \"#utility.yul\":6048:6057   */\n      dup6\n        /* \"#utility.yul\":6044:6066   */\n      add\n        /* \"#utility.yul\":6023:6076   */\n      tag_273\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6013:6076   */\n      swap2\n      pop\n        /* \"#utility.yul\":5969:6086   */\n      pop\n        /* \"#utility.yul\":5764:6093   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6099:6217   */\n    tag_274:\n        /* \"#utility.yul\":6186:6210   */\n      tag_358\n        /* \"#utility.yul\":6204:6209   */\n      dup2\n        /* \"#utility.yul\":6186:6210   */\n      tag_271\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6181:6184   */\n      dup3\n        /* \"#utility.yul\":6174:6211   */\n      mstore\n        /* \"#utility.yul\":6099:6217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6445   */\n    tag_63:\n        /* \"#utility.yul\":6316:6320   */\n      0x00\n        /* \"#utility.yul\":6354:6356   */\n      0x20\n        /* \"#utility.yul\":6343:6352   */\n      dup3\n        /* \"#utility.yul\":6339:6357   */\n      add\n        /* \"#utility.yul\":6331:6357   */\n      swap1\n      pop\n        /* \"#utility.yul\":6367:6438   */\n      tag_360\n        /* \"#utility.yul\":6435:6436   */\n      0x00\n        /* \"#utility.yul\":6424:6433   */\n      dup4\n        /* \"#utility.yul\":6420:6437   */\n      add\n        /* \"#utility.yul\":6411:6417   */\n      dup5\n        /* \"#utility.yul\":6367:6438   */\n      tag_274\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6223:6445   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6925   */\n    tag_66:\n        /* \"#utility.yul\":6519:6525   */\n      0x00\n        /* \"#utility.yul\":6527:6533   */\n      dup1\n        /* \"#utility.yul\":6576:6578   */\n      0x40\n        /* \"#utility.yul\":6564:6573   */\n      dup4\n        /* \"#utility.yul\":6555:6562   */\n      dup6\n        /* \"#utility.yul\":6551:6574   */\n      sub\n        /* \"#utility.yul\":6547:6579   */\n      slt\n        /* \"#utility.yul\":6544:6663   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":6582:6661   */\n      tag_363\n      tag_251\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":6544:6663   */\n    tag_362:\n        /* \"#utility.yul\":6702:6703   */\n      0x00\n        /* \"#utility.yul\":6727:6780   */\n      tag_364\n        /* \"#utility.yul\":6772:6779   */\n      dup6\n        /* \"#utility.yul\":6763:6769   */\n      dup3\n        /* \"#utility.yul\":6752:6761   */\n      dup7\n        /* \"#utility.yul\":6748:6770   */\n      add\n        /* \"#utility.yul\":6727:6780   */\n      tag_273\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6717:6780   */\n      swap3\n      pop\n        /* \"#utility.yul\":6673:6790   */\n      pop\n        /* \"#utility.yul\":6829:6831   */\n      0x20\n        /* \"#utility.yul\":6855:6908   */\n      tag_365\n        /* \"#utility.yul\":6900:6907   */\n      dup6\n        /* \"#utility.yul\":6891:6897   */\n      dup3\n        /* \"#utility.yul\":6880:6889   */\n      dup7\n        /* \"#utility.yul\":6876:6898   */\n      add\n        /* \"#utility.yul\":6855:6908   */\n      tag_266\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6845:6908   */\n      swap2\n      pop\n        /* \"#utility.yul\":6800:6918   */\n      pop\n        /* \"#utility.yul\":6451:6925   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6931:7017   */\n    tag_275:\n        /* \"#utility.yul\":6966:6973   */\n      0x00\n        /* \"#utility.yul\":7006:7010   */\n      0xff\n        /* \"#utility.yul\":6999:7004   */\n      dup3\n        /* \"#utility.yul\":6995:7011   */\n      and\n        /* \"#utility.yul\":6984:7011   */\n      swap1\n      pop\n        /* \"#utility.yul\":6931:7017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7023:7135   */\n    tag_276:\n        /* \"#utility.yul\":7106:7128   */\n      tag_368\n        /* \"#utility.yul\":7122:7127   */\n      dup2\n        /* \"#utility.yul\":7106:7128   */\n      tag_275\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":7101:7104   */\n      dup3\n        /* \"#utility.yul\":7094:7129   */\n      mstore\n        /* \"#utility.yul\":7023:7135   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7141:7355   */\n    tag_74:\n        /* \"#utility.yul\":7230:7234   */\n      0x00\n        /* \"#utility.yul\":7268:7270   */\n      0x20\n        /* \"#utility.yul\":7257:7266   */\n      dup3\n        /* \"#utility.yul\":7253:7271   */\n      add\n        /* \"#utility.yul\":7245:7271   */\n      swap1\n      pop\n        /* \"#utility.yul\":7281:7348   */\n      tag_370\n        /* \"#utility.yul\":7345:7346   */\n      0x00\n        /* \"#utility.yul\":7334:7343   */\n      dup4\n        /* \"#utility.yul\":7330:7347   */\n      add\n        /* \"#utility.yul\":7321:7327   */\n      dup5\n        /* \"#utility.yul\":7281:7348   */\n      tag_276\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7141:7355   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7361:7835   */\n    tag_108:\n        /* \"#utility.yul\":7429:7435   */\n      0x00\n        /* \"#utility.yul\":7437:7443   */\n      dup1\n        /* \"#utility.yul\":7486:7488   */\n      0x40\n        /* \"#utility.yul\":7474:7483   */\n      dup4\n        /* \"#utility.yul\":7465:7472   */\n      dup6\n        /* \"#utility.yul\":7461:7484   */\n      sub\n        /* \"#utility.yul\":7457:7489   */\n      slt\n        /* \"#utility.yul\":7454:7573   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":7492:7571   */\n      tag_373\n      tag_251\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7454:7573   */\n    tag_372:\n        /* \"#utility.yul\":7612:7613   */\n      0x00\n        /* \"#utility.yul\":7637:7690   */\n      tag_374\n        /* \"#utility.yul\":7682:7689   */\n      dup6\n        /* \"#utility.yul\":7673:7679   */\n      dup3\n        /* \"#utility.yul\":7662:7671   */\n      dup7\n        /* \"#utility.yul\":7658:7680   */\n      add\n        /* \"#utility.yul\":7637:7690   */\n      tag_266\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7627:7690   */\n      swap3\n      pop\n        /* \"#utility.yul\":7583:7700   */\n      pop\n        /* \"#utility.yul\":7739:7741   */\n      0x20\n        /* \"#utility.yul\":7765:7818   */\n      tag_375\n        /* \"#utility.yul\":7810:7817   */\n      dup6\n        /* \"#utility.yul\":7801:7807   */\n      dup3\n        /* \"#utility.yul\":7790:7799   */\n      dup7\n        /* \"#utility.yul\":7786:7808   */\n      add\n        /* \"#utility.yul\":7765:7818   */\n      tag_266\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7755:7818   */\n      swap2\n      pop\n        /* \"#utility.yul\":7710:7828   */\n      pop\n        /* \"#utility.yul\":7361:7835   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7841:8021   */\n    tag_277:\n        /* \"#utility.yul\":7889:7966   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7886:7887   */\n      0x00\n        /* \"#utility.yul\":7879:7967   */\n      mstore\n        /* \"#utility.yul\":7986:7990   */\n      0x22\n        /* \"#utility.yul\":7983:7984   */\n      0x04\n        /* \"#utility.yul\":7976:7991   */\n      mstore\n        /* \"#utility.yul\":8010:8014   */\n      0x24\n        /* \"#utility.yul\":8007:8008   */\n      0x00\n        /* \"#utility.yul\":8000:8015   */\n      revert\n        /* \"#utility.yul\":8027:8347   */\n    tag_117:\n        /* \"#utility.yul\":8071:8077   */\n      0x00\n        /* \"#utility.yul\":8108:8109   */\n      0x02\n        /* \"#utility.yul\":8102:8106   */\n      dup3\n        /* \"#utility.yul\":8098:8110   */\n      div\n        /* \"#utility.yul\":8088:8110   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8156   */\n      0x01\n        /* \"#utility.yul\":8149:8153   */\n      dup3\n        /* \"#utility.yul\":8145:8157   */\n      and\n        /* \"#utility.yul\":8176:8194   */\n      dup1\n        /* \"#utility.yul\":8166:8247   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":8232:8236   */\n      0x7f\n        /* \"#utility.yul\":8224:8230   */\n      dup3\n        /* \"#utility.yul\":8220:8237   */\n      and\n        /* \"#utility.yul\":8210:8237   */\n      swap2\n      pop\n        /* \"#utility.yul\":8166:8247   */\n    tag_378:\n        /* \"#utility.yul\":8294:8296   */\n      0x20\n        /* \"#utility.yul\":8286:8292   */\n      dup3\n        /* \"#utility.yul\":8283:8297   */\n      lt\n        /* \"#utility.yul\":8263:8281   */\n      dup2\n        /* \"#utility.yul\":8260:8298   */\n      sub\n        /* \"#utility.yul\":8257:8341   */\n      tag_379\n      jumpi\n        /* \"#utility.yul\":8313:8331   */\n      tag_380\n      tag_277\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":8257:8341   */\n    tag_379:\n        /* \"#utility.yul\":8078:8347   */\n      pop\n        /* \"#utility.yul\":8027:8347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8353:8583   */\n    tag_278:\n        /* \"#utility.yul\":8493:8527   */\n      0x44414f546f6b656e3a2063616e6e6f74206c6f636b206d6f7265207468616e20\n        /* \"#utility.yul\":8489:8490   */\n      0x00\n        /* \"#utility.yul\":8481:8487   */\n      dup3\n        /* \"#utility.yul\":8477:8491   */\n      add\n        /* \"#utility.yul\":8470:8528   */\n      mstore\n        /* \"#utility.yul\":8562:8575   */\n      0x7468652062616c616e6365000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8557:8559   */\n      0x20\n        /* \"#utility.yul\":8549:8555   */\n      dup3\n        /* \"#utility.yul\":8545:8560   */\n      add\n        /* \"#utility.yul\":8538:8576   */\n      mstore\n        /* \"#utility.yul\":8353:8583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8589:8955   */\n    tag_279:\n        /* \"#utility.yul\":8731:8734   */\n      0x00\n        /* \"#utility.yul\":8752:8819   */\n      tag_383\n        /* \"#utility.yul\":8816:8818   */\n      0x2b\n        /* \"#utility.yul\":8811:8814   */\n      dup4\n        /* \"#utility.yul\":8752:8819   */\n      tag_259\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8745:8819   */\n      swap2\n      pop\n        /* \"#utility.yul\":8828:8921   */\n      tag_384\n        /* \"#utility.yul\":8917:8920   */\n      dup3\n        /* \"#utility.yul\":8828:8921   */\n      tag_278\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8946:8948   */\n      0x40\n        /* \"#utility.yul\":8941:8944   */\n      dup3\n        /* \"#utility.yul\":8937:8949   */\n      add\n        /* \"#utility.yul\":8930:8949   */\n      swap1\n      pop\n        /* \"#utility.yul\":8589:8955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8961:9380   */\n    tag_134:\n        /* \"#utility.yul\":9127:9131   */\n      0x00\n        /* \"#utility.yul\":9165:9167   */\n      0x20\n        /* \"#utility.yul\":9154:9163   */\n      dup3\n        /* \"#utility.yul\":9150:9168   */\n      add\n        /* \"#utility.yul\":9142:9168   */\n      swap1\n      pop\n        /* \"#utility.yul\":9214:9223   */\n      dup2\n        /* \"#utility.yul\":9208:9212   */\n      dup2\n        /* \"#utility.yul\":9204:9224   */\n      sub\n        /* \"#utility.yul\":9200:9201   */\n      0x00\n        /* \"#utility.yul\":9189:9198   */\n      dup4\n        /* \"#utility.yul\":9185:9202   */\n      add\n        /* \"#utility.yul\":9178:9225   */\n      mstore\n        /* \"#utility.yul\":9242:9373   */\n      tag_386\n        /* \"#utility.yul\":9368:9372   */\n      dup2\n        /* \"#utility.yul\":9242:9373   */\n      tag_279\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":9234:9373   */\n      swap1\n      pop\n        /* \"#utility.yul\":8961:9380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9386:9624   */\n    tag_280:\n        /* \"#utility.yul\":9526:9560   */\n      0x44414f546f6b656e3a2063616e6e6f7420756e6c6f636b206d6f726520746f6b\n        /* \"#utility.yul\":9522:9523   */\n      0x00\n        /* \"#utility.yul\":9514:9520   */\n      dup3\n        /* \"#utility.yul\":9510:9524   */\n      add\n        /* \"#utility.yul\":9503:9561   */\n      mstore\n        /* \"#utility.yul\":9595:9616   */\n      0x656e73207468616e20617265206c6f636b656400000000000000000000000000\n        /* \"#utility.yul\":9590:9592   */\n      0x20\n        /* \"#utility.yul\":9582:9588   */\n      dup3\n        /* \"#utility.yul\":9578:9593   */\n      add\n        /* \"#utility.yul\":9571:9617   */\n      mstore\n        /* \"#utility.yul\":9386:9624   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9630:9996   */\n    tag_281:\n        /* \"#utility.yul\":9772:9775   */\n      0x00\n        /* \"#utility.yul\":9793:9860   */\n      tag_389\n        /* \"#utility.yul\":9857:9859   */\n      0x33\n        /* \"#utility.yul\":9852:9855   */\n      dup4\n        /* \"#utility.yul\":9793:9860   */\n      tag_259\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9786:9860   */\n      swap2\n      pop\n        /* \"#utility.yul\":9869:9962   */\n      tag_390\n        /* \"#utility.yul\":9958:9961   */\n      dup3\n        /* \"#utility.yul\":9869:9962   */\n      tag_280\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":9987:9989   */\n      0x40\n        /* \"#utility.yul\":9982:9985   */\n      dup3\n        /* \"#utility.yul\":9978:9990   */\n      add\n        /* \"#utility.yul\":9971:9990   */\n      swap1\n      pop\n        /* \"#utility.yul\":9630:9996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10002:10421   */\n    tag_162:\n        /* \"#utility.yul\":10168:10172   */\n      0x00\n        /* \"#utility.yul\":10206:10208   */\n      0x20\n        /* \"#utility.yul\":10195:10204   */\n      dup3\n        /* \"#utility.yul\":10191:10209   */\n      add\n        /* \"#utility.yul\":10183:10209   */\n      swap1\n      pop\n        /* \"#utility.yul\":10255:10264   */\n      dup2\n        /* \"#utility.yul\":10249:10253   */\n      dup2\n        /* \"#utility.yul\":10245:10265   */\n      sub\n        /* \"#utility.yul\":10241:10242   */\n      0x00\n        /* \"#utility.yul\":10230:10239   */\n      dup4\n        /* \"#utility.yul\":10226:10243   */\n      add\n        /* \"#utility.yul\":10219:10266   */\n      mstore\n        /* \"#utility.yul\":10283:10414   */\n      tag_392\n        /* \"#utility.yul\":10409:10413   */\n      dup2\n        /* \"#utility.yul\":10283:10414   */\n      tag_281\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":10275:10414   */\n      swap1\n      pop\n        /* \"#utility.yul\":10002:10421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10427:10607   */\n    tag_282:\n        /* \"#utility.yul\":10475:10552   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10472:10473   */\n      0x00\n        /* \"#utility.yul\":10465:10553   */\n      mstore\n        /* \"#utility.yul\":10572:10576   */\n      0x11\n        /* \"#utility.yul\":10569:10570   */\n      0x04\n        /* \"#utility.yul\":10562:10577   */\n      mstore\n        /* \"#utility.yul\":10596:10600   */\n      0x24\n        /* \"#utility.yul\":10593:10594   */\n      0x00\n        /* \"#utility.yul\":10586:10601   */\n      revert\n        /* \"#utility.yul\":10613:10804   */\n    tag_200:\n        /* \"#utility.yul\":10653:10656   */\n      0x00\n        /* \"#utility.yul\":10672:10692   */\n      tag_395\n        /* \"#utility.yul\":10690:10691   */\n      dup3\n        /* \"#utility.yul\":10672:10692   */\n      tag_267\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":10667:10692   */\n      swap2\n      pop\n        /* \"#utility.yul\":10706:10726   */\n      tag_396\n        /* \"#utility.yul\":10724:10725   */\n      dup4\n        /* \"#utility.yul\":10706:10726   */\n      tag_267\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":10701:10726   */\n      swap3\n      pop\n        /* \"#utility.yul\":10749:10750   */\n      dup3\n        /* \"#utility.yul\":10746:10747   */\n      dup3\n        /* \"#utility.yul\":10742:10751   */\n      add\n        /* \"#utility.yul\":10735:10751   */\n      swap1\n      pop\n        /* \"#utility.yul\":10770:10773   */\n      dup1\n        /* \"#utility.yul\":10767:10768   */\n      dup3\n        /* \"#utility.yul\":10764:10774   */\n      gt\n        /* \"#utility.yul\":10761:10797   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":10777:10795   */\n      tag_398\n      tag_282\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":10761:10797   */\n    tag_397:\n        /* \"#utility.yul\":10613:10804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10810:10928   */\n    tag_283:\n        /* \"#utility.yul\":10897:10921   */\n      tag_400\n        /* \"#utility.yul\":10915:10920   */\n      dup2\n        /* \"#utility.yul\":10897:10921   */\n      tag_264\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":10892:10895   */\n      dup3\n        /* \"#utility.yul\":10885:10922   */\n      mstore\n        /* \"#utility.yul\":10810:10928   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10934:11156   */\n    tag_204:\n        /* \"#utility.yul\":11027:11031   */\n      0x00\n        /* \"#utility.yul\":11065:11067   */\n      0x20\n        /* \"#utility.yul\":11054:11063   */\n      dup3\n        /* \"#utility.yul\":11050:11068   */\n      add\n        /* \"#utility.yul\":11042:11068   */\n      swap1\n      pop\n        /* \"#utility.yul\":11078:11149   */\n      tag_402\n        /* \"#utility.yul\":11146:11147   */\n      0x00\n        /* \"#utility.yul\":11135:11144   */\n      dup4\n        /* \"#utility.yul\":11131:11148   */\n      add\n        /* \"#utility.yul\":11122:11128   */\n      dup5\n        /* \"#utility.yul\":11078:11149   */\n      tag_283\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10934:11156   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11162:11604   */\n    tag_214:\n        /* \"#utility.yul\":11311:11315   */\n      0x00\n        /* \"#utility.yul\":11349:11351   */\n      0x60\n        /* \"#utility.yul\":11338:11347   */\n      dup3\n        /* \"#utility.yul\":11334:11352   */\n      add\n        /* \"#utility.yul\":11326:11352   */\n      swap1\n      pop\n        /* \"#utility.yul\":11362:11433   */\n      tag_404\n        /* \"#utility.yul\":11430:11431   */\n      0x00\n        /* \"#utility.yul\":11419:11428   */\n      dup4\n        /* \"#utility.yul\":11415:11432   */\n      add\n        /* \"#utility.yul\":11406:11412   */\n      dup7\n        /* \"#utility.yul\":11362:11433   */\n      tag_283\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":11443:11515   */\n      tag_405\n        /* \"#utility.yul\":11511:11513   */\n      0x20\n        /* \"#utility.yul\":11500:11509   */\n      dup4\n        /* \"#utility.yul\":11496:11514   */\n      add\n        /* \"#utility.yul\":11487:11493   */\n      dup6\n        /* \"#utility.yul\":11443:11515   */\n      tag_270\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":11525:11597   */\n      tag_406\n        /* \"#utility.yul\":11593:11595   */\n      0x40\n        /* \"#utility.yul\":11582:11591   */\n      dup4\n        /* \"#utility.yul\":11578:11596   */\n      add\n        /* \"#utility.yul\":11569:11575   */\n      dup5\n        /* \"#utility.yul\":11525:11597   */\n      tag_270\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11162:11604   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11610:11804   */\n    tag_223:\n        /* \"#utility.yul\":11650:11654   */\n      0x00\n        /* \"#utility.yul\":11670:11690   */\n      tag_408\n        /* \"#utility.yul\":11688:11689   */\n      dup3\n        /* \"#utility.yul\":11670:11690   */\n      tag_267\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":11665:11690   */\n      swap2\n      pop\n        /* \"#utility.yul\":11704:11724   */\n      tag_409\n        /* \"#utility.yul\":11722:11723   */\n      dup4\n        /* \"#utility.yul\":11704:11724   */\n      tag_267\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":11699:11724   */\n      swap3\n      pop\n        /* \"#utility.yul\":11748:11749   */\n      dup3\n        /* \"#utility.yul\":11745:11746   */\n      dup3\n        /* \"#utility.yul\":11741:11750   */\n      sub\n        /* \"#utility.yul\":11733:11750   */\n      swap1\n      pop\n        /* \"#utility.yul\":11772:11773   */\n      dup2\n        /* \"#utility.yul\":11766:11770   */\n      dup2\n        /* \"#utility.yul\":11763:11774   */\n      gt\n        /* \"#utility.yul\":11760:11797   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":11777:11795   */\n      tag_411\n      tag_282\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11760:11797   */\n    tag_410:\n        /* \"#utility.yul\":11610:11804   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11810:12142   */\n    tag_240:\n        /* \"#utility.yul\":11931:11935   */\n      0x00\n        /* \"#utility.yul\":11969:11971   */\n      0x40\n        /* \"#utility.yul\":11958:11967   */\n      dup3\n        /* \"#utility.yul\":11954:11972   */\n      add\n        /* \"#utility.yul\":11946:11972   */\n      swap1\n      pop\n        /* \"#utility.yul\":11982:12053   */\n      tag_413\n        /* \"#utility.yul\":12050:12051   */\n      0x00\n        /* \"#utility.yul\":12039:12048   */\n      dup4\n        /* \"#utility.yul\":12035:12052   */\n      add\n        /* \"#utility.yul\":12026:12032   */\n      dup6\n        /* \"#utility.yul\":11982:12053   */\n      tag_283\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":12063:12135   */\n      tag_414\n        /* \"#utility.yul\":12131:12133   */\n      0x20\n        /* \"#utility.yul\":12120:12129   */\n      dup4\n        /* \"#utility.yul\":12116:12134   */\n      add\n        /* \"#utility.yul\":12107:12113   */\n      dup5\n        /* \"#utility.yul\":12063:12135   */\n      tag_274\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":11810:12142   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207fd0f1d3f94716d2869e9ef8291d47e53845937e12e500af498a2471b773903964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1559": {
									"entryPoint": null,
									"id": 1559,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 261,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 128,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1146": {
									"entryPoint": 1144,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_837": {
									"entryPoint": 507,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1044,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1374,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 1535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2593,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2050,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2482,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1992,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1493,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10669:11",
										"nodeType": "YulBlock",
										"src": "0:10669:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "423:28:11",
													"nodeType": "YulBlock",
													"src": "423:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:11",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:11",
																		"nodeType": "YulLiteral",
																		"src": "443:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nativeSrc": "433:12:11",
																"nodeType": "YulFunctionCall",
																"src": "433:12:11"
															},
															"nativeSrc": "433:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:11"
											},
											{
												"body": {
													"nativeSrc": "546:28:11",
													"nodeType": "YulBlock",
													"src": "546:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:11",
																		"nodeType": "YulLiteral",
																		"src": "563:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:11",
																		"nodeType": "YulLiteral",
																		"src": "566:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:11"
																},
																"nativeSrc": "556:12:11",
																"nodeType": "YulFunctionCall",
																"src": "556:12:11"
															},
															"nativeSrc": "556:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:11"
											},
											{
												"body": {
													"nativeSrc": "628:54:11",
													"nodeType": "YulBlock",
													"src": "628:54:11",
													"statements": [
														{
															"nativeSrc": "638:38:11",
															"nodeType": "YulAssignment",
															"src": "638:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:11",
																				"nodeType": "YulLiteral",
																				"src": "663:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:11"
																		},
																		"nativeSrc": "652:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:11",
																				"nodeType": "YulLiteral",
																				"src": "672:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:11"
																		},
																		"nativeSrc": "668:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:11"
																},
																"nativeSrc": "648:28:11",
																"nodeType": "YulFunctionCall",
																"src": "648:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:11",
														"nodeType": "YulTypedName",
														"src": "611:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:11",
														"nodeType": "YulTypedName",
														"src": "621:6:11",
														"type": ""
													}
												],
												"src": "580:102:11"
											},
											{
												"body": {
													"nativeSrc": "716:152:11",
													"nodeType": "YulBlock",
													"src": "716:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:11",
																		"nodeType": "YulLiteral",
																		"src": "733:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:11",
																		"nodeType": "YulLiteral",
																		"src": "736:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:11"
																},
																"nativeSrc": "726:88:11",
																"nodeType": "YulFunctionCall",
																"src": "726:88:11"
															},
															"nativeSrc": "726:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:11",
																		"nodeType": "YulLiteral",
																		"src": "830:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:11",
																		"nodeType": "YulLiteral",
																		"src": "833:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:11"
																},
																"nativeSrc": "823:15:11",
																"nodeType": "YulFunctionCall",
																"src": "823:15:11"
															},
															"nativeSrc": "823:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:11",
																		"nodeType": "YulLiteral",
																		"src": "854:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:11",
																		"nodeType": "YulLiteral",
																		"src": "857:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:11"
																},
																"nativeSrc": "847:15:11",
																"nodeType": "YulFunctionCall",
																"src": "847:15:11"
															},
															"nativeSrc": "847:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:11"
											},
											{
												"body": {
													"nativeSrc": "917:238:11",
													"nodeType": "YulBlock",
													"src": "917:238:11",
													"statements": [
														{
															"nativeSrc": "927:58:11",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:11"
																		},
																		"nativeSrc": "957:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:11"
																},
																"nativeSrc": "945:40:11",
																"nodeType": "YulFunctionCall",
																"src": "945:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:11",
																	"nodeType": "YulTypedName",
																	"src": "931:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:11",
																"nodeType": "YulBlock",
																"src": "1096:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:11"
																			},
																			"nativeSrc": "1098:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:11"
																		},
																		"nativeSrc": "1098:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:11",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:11"
																		},
																		"nativeSrc": "1036:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:11",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:11"
																		},
																		"nativeSrc": "1072:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:11"
																},
																"nativeSrc": "1033:62:11",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:11"
															},
															"nativeSrc": "1030:88:11",
															"nodeType": "YulIf",
															"src": "1030:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:11"
																},
																"nativeSrc": "1127:22:11",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:11"
															},
															"nativeSrc": "1127:22:11",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:11",
														"nodeType": "YulTypedName",
														"src": "903:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:11",
														"nodeType": "YulTypedName",
														"src": "911:4:11",
														"type": ""
													}
												],
												"src": "874:281:11"
											},
											{
												"body": {
													"nativeSrc": "1202:88:11",
													"nodeType": "YulBlock",
													"src": "1202:88:11",
													"statements": [
														{
															"nativeSrc": "1212:30:11",
															"nodeType": "YulAssignment",
															"src": "1212:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:11"
																},
																"nativeSrc": "1222:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:11"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:11",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:11"
																},
																"nativeSrc": "1251:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:11"
															},
															"nativeSrc": "1251:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:11",
														"nodeType": "YulTypedName",
														"src": "1186:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:11",
														"nodeType": "YulTypedName",
														"src": "1195:6:11",
														"type": ""
													}
												],
												"src": "1161:129:11"
											},
											{
												"body": {
													"nativeSrc": "1363:241:11",
													"nodeType": "YulBlock",
													"src": "1363:241:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:11",
																"nodeType": "YulBlock",
																"src": "1468:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:11"
																			},
																			"nativeSrc": "1470:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:11"
																		},
																		"nativeSrc": "1470:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:11",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:11"
																},
																"nativeSrc": "1437:30:11",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:11"
															},
															"nativeSrc": "1434:56:11",
															"nodeType": "YulIf",
															"src": "1434:56:11"
														},
														{
															"nativeSrc": "1500:37:11",
															"nodeType": "YulAssignment",
															"src": "1500:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:11",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:11"
																},
																"nativeSrc": "1508:29:11",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:11"
																}
															]
														},
														{
															"nativeSrc": "1574:23:11",
															"nodeType": "YulAssignment",
															"src": "1574:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:11"
																},
																"nativeSrc": "1582:15:11",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:11",
														"nodeType": "YulTypedName",
														"src": "1347:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:11",
														"nodeType": "YulTypedName",
														"src": "1358:4:11",
														"type": ""
													}
												],
												"src": "1296:308:11"
											},
											{
												"body": {
													"nativeSrc": "1672:77:11",
													"nodeType": "YulBlock",
													"src": "1672:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:11"
																},
																"nativeSrc": "1683:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:11"
															},
															"nativeSrc": "1683:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:11"
																		},
																		"nativeSrc": "1722:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:11"
																},
																"nativeSrc": "1715:27:11",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:11"
															},
															"nativeSrc": "1715:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:11",
														"nodeType": "YulTypedName",
														"src": "1654:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:11",
														"nodeType": "YulTypedName",
														"src": "1659:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:11",
														"nodeType": "YulTypedName",
														"src": "1664:6:11",
														"type": ""
													}
												],
												"src": "1610:139:11"
											},
											{
												"body": {
													"nativeSrc": "1850:339:11",
													"nodeType": "YulBlock",
													"src": "1850:339:11",
													"statements": [
														{
															"nativeSrc": "1860:75:11",
															"nodeType": "YulAssignment",
															"src": "1860:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:11"
																		},
																		"nativeSrc": "1885:49:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:11",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:11"
																},
																"nativeSrc": "1869:66:11",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:11"
																},
																"nativeSrc": "1944:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:11"
															},
															"nativeSrc": "1944:21:11",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:11"
														},
														{
															"nativeSrc": "1974:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:11"
																},
																"nativeSrc": "1985:16:11",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:11",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:11",
																"nodeType": "YulBlock",
																"src": "2039:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:11"
																			},
																			"nativeSrc": "2041:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:11"
																		},
																		"nativeSrc": "2041:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:11"
																		},
																		"nativeSrc": "2016:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:11"
																},
																"nativeSrc": "2013:25:11",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:11"
															},
															"nativeSrc": "2010:112:11",
															"nodeType": "YulIf",
															"src": "2010:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:11"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:11"
																},
																"nativeSrc": "2131:52:11",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:11"
															},
															"nativeSrc": "2131:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:11",
														"nodeType": "YulTypedName",
														"src": "1823:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:11",
														"nodeType": "YulTypedName",
														"src": "1828:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:11",
														"nodeType": "YulTypedName",
														"src": "1836:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:11",
														"nodeType": "YulTypedName",
														"src": "1844:5:11",
														"type": ""
													}
												],
												"src": "1755:434:11"
											},
											{
												"body": {
													"nativeSrc": "2282:282:11",
													"nodeType": "YulBlock",
													"src": "2282:282:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:11",
																"nodeType": "YulBlock",
																"src": "2331:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:11"
																			},
																			"nativeSrc": "2333:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:11"
																		},
																		"nativeSrc": "2333:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:11",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:11"
																				},
																				"nativeSrc": "2306:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:11"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:11"
																		},
																		"nativeSrc": "2302:27:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:11"
																},
																"nativeSrc": "2295:35:11",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:11"
															},
															"nativeSrc": "2292:122:11",
															"nodeType": "YulIf",
															"src": "2292:122:11"
														},
														{
															"nativeSrc": "2423:27:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:11"
																},
																"nativeSrc": "2437:13:11",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:11",
															"nodeType": "YulAssignment",
															"src": "2459:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:11"
																		},
																		"nativeSrc": "2527:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:11"
																},
																"nativeSrc": "2468:90:11",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:11",
														"nodeType": "YulTypedName",
														"src": "2260:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:11",
														"nodeType": "YulTypedName",
														"src": "2268:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:11",
														"nodeType": "YulTypedName",
														"src": "2276:5:11",
														"type": ""
													}
												],
												"src": "2209:355:11"
											},
											{
												"body": {
													"nativeSrc": "2615:32:11",
													"nodeType": "YulBlock",
													"src": "2615:32:11",
													"statements": [
														{
															"nativeSrc": "2625:16:11",
															"nodeType": "YulAssignment",
															"src": "2625:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "2636:5:11",
																"nodeType": "YulIdentifier",
																"src": "2636:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2625:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2625:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2570:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2597:5:11",
														"nodeType": "YulTypedName",
														"src": "2597:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2607:7:11",
														"nodeType": "YulTypedName",
														"src": "2607:7:11",
														"type": ""
													}
												],
												"src": "2570:77:11"
											},
											{
												"body": {
													"nativeSrc": "2696:79:11",
													"nodeType": "YulBlock",
													"src": "2696:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:11",
																"nodeType": "YulBlock",
																"src": "2753:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:11"
																			},
																			"nativeSrc": "2755:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:11"
																		},
																		"nativeSrc": "2755:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2719:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2719:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2744:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2744:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2726:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2726:17:11"
																				},
																				"nativeSrc": "2726:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2716:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2716:2:11"
																		},
																		"nativeSrc": "2716:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2716:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2709:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2709:6:11"
																},
																"nativeSrc": "2709:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2709:43:11"
															},
															"nativeSrc": "2706:63:11",
															"nodeType": "YulIf",
															"src": "2706:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2653:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2689:5:11",
														"nodeType": "YulTypedName",
														"src": "2689:5:11",
														"type": ""
													}
												],
												"src": "2653:122:11"
											},
											{
												"body": {
													"nativeSrc": "2844:80:11",
													"nodeType": "YulBlock",
													"src": "2844:80:11",
													"statements": [
														{
															"nativeSrc": "2854:22:11",
															"nodeType": "YulAssignment",
															"src": "2854:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2869:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2869:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2863:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:11"
																},
																"nativeSrc": "2863:13:11",
																"nodeType": "YulFunctionCall",
																"src": "2863:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2854:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2854:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2912:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2912:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2885:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2885:26:11"
																},
																"nativeSrc": "2885:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2885:33:11"
															},
															"nativeSrc": "2885:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2885:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2781:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2822:6:11",
														"nodeType": "YulTypedName",
														"src": "2822:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2830:3:11",
														"nodeType": "YulTypedName",
														"src": "2830:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2838:5:11",
														"nodeType": "YulTypedName",
														"src": "2838:5:11",
														"type": ""
													}
												],
												"src": "2781:143:11"
											},
											{
												"body": {
													"nativeSrc": "3061:878:11",
													"nodeType": "YulBlock",
													"src": "3061:878:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3107:83:11",
																"nodeType": "YulBlock",
																"src": "3107:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3109:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3109:77:11"
																			},
																			"nativeSrc": "3109:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3109:79:11"
																		},
																		"nativeSrc": "3109:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3109:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3082:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3082:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3091:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3078:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:11"
																		},
																		"nativeSrc": "3078:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3103:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3103:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3074:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:11"
																},
																"nativeSrc": "3074:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3074:32:11"
															},
															"nativeSrc": "3071:119:11",
															"nodeType": "YulIf",
															"src": "3071:119:11"
														},
														{
															"nativeSrc": "3200:291:11",
															"nodeType": "YulBlock",
															"src": "3200:291:11",
															"statements": [
																{
																	"nativeSrc": "3215:38:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3215:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3239:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3239:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3250:1:11",
																						"nodeType": "YulLiteral",
																						"src": "3250:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3235:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3235:3:11"
																				},
																				"nativeSrc": "3235:17:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3235:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3229:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3229:5:11"
																		},
																		"nativeSrc": "3229:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3229:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3219:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3219:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3300:83:11",
																		"nodeType": "YulBlock",
																		"src": "3300:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3302:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3302:77:11"
																					},
																					"nativeSrc": "3302:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3302:79:11"
																				},
																				"nativeSrc": "3302:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3302:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3272:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3272:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3280:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3280:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3269:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3269:2:11"
																		},
																		"nativeSrc": "3269:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:30:11"
																	},
																	"nativeSrc": "3266:117:11",
																	"nodeType": "YulIf",
																	"src": "3266:117:11"
																},
																{
																	"nativeSrc": "3397:84:11",
																	"nodeType": "YulAssignment",
																	"src": "3397:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3453:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3453:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3464:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3464:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3449:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3449:3:11"
																				},
																				"nativeSrc": "3449:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3449:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3473:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3473:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3407:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "3407:41:11"
																		},
																		"nativeSrc": "3407:74:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3407:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3397:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3397:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3501:292:11",
															"nodeType": "YulBlock",
															"src": "3501:292:11",
															"statements": [
																{
																	"nativeSrc": "3516:39:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3516:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3540:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3540:9:11"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3551:2:11",
																						"nodeType": "YulLiteral",
																						"src": "3551:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3536:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3536:3:11"
																				},
																				"nativeSrc": "3536:18:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3536:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3530:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "3530:5:11"
																		},
																		"nativeSrc": "3530:25:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3530:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3520:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3520:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3602:83:11",
																		"nodeType": "YulBlock",
																		"src": "3602:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3604:77:11",
																						"nodeType": "YulIdentifier",
																						"src": "3604:77:11"
																					},
																					"nativeSrc": "3604:79:11",
																					"nodeType": "YulFunctionCall",
																					"src": "3604:79:11"
																				},
																				"nativeSrc": "3604:79:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "3604:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3574:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3574:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3582:18:11",
																				"nodeType": "YulLiteral",
																				"src": "3582:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3571:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3571:2:11"
																		},
																		"nativeSrc": "3571:30:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3571:30:11"
																	},
																	"nativeSrc": "3568:117:11",
																	"nodeType": "YulIf",
																	"src": "3568:117:11"
																},
																{
																	"nativeSrc": "3699:84:11",
																	"nodeType": "YulAssignment",
																	"src": "3699:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3755:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3755:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3766:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3766:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3751:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3751:3:11"
																				},
																				"nativeSrc": "3751:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3751:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3775:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3775:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3709:41:11",
																			"nodeType": "YulIdentifier",
																			"src": "3709:41:11"
																		},
																		"nativeSrc": "3709:74:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3709:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3699:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3699:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3803:129:11",
															"nodeType": "YulBlock",
															"src": "3803:129:11",
															"statements": [
																{
																	"nativeSrc": "3818:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3818:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3832:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3832:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3822:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3822:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3848:74:11",
																	"nodeType": "YulAssignment",
																	"src": "3848:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3894:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3894:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3905:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3905:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3890:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3890:3:11"
																				},
																				"nativeSrc": "3890:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3890:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3914:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3914:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3858:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "3858:31:11"
																		},
																		"nativeSrc": "3858:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3858:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3848:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3848:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "2930:1009:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3015:9:11",
														"nodeType": "YulTypedName",
														"src": "3015:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3026:7:11",
														"nodeType": "YulTypedName",
														"src": "3026:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3038:6:11",
														"nodeType": "YulTypedName",
														"src": "3038:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3046:6:11",
														"nodeType": "YulTypedName",
														"src": "3046:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3054:6:11",
														"nodeType": "YulTypedName",
														"src": "3054:6:11",
														"type": ""
													}
												],
												"src": "2930:1009:11"
											},
											{
												"body": {
													"nativeSrc": "4004:40:11",
													"nodeType": "YulBlock",
													"src": "4004:40:11",
													"statements": [
														{
															"nativeSrc": "4015:22:11",
															"nodeType": "YulAssignment",
															"src": "4015:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4031:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4031:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4025:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "4025:5:11"
																},
																"nativeSrc": "4025:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4025:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4015:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4015:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3945:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3987:5:11",
														"nodeType": "YulTypedName",
														"src": "3987:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3997:6:11",
														"nodeType": "YulTypedName",
														"src": "3997:6:11",
														"type": ""
													}
												],
												"src": "3945:99:11"
											},
											{
												"body": {
													"nativeSrc": "4078:152:11",
													"nodeType": "YulBlock",
													"src": "4078:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4095:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4095:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4098:77:11",
																		"nodeType": "YulLiteral",
																		"src": "4098:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4088:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:11"
																},
																"nativeSrc": "4088:88:11",
																"nodeType": "YulFunctionCall",
																"src": "4088:88:11"
															},
															"nativeSrc": "4088:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "4088:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4192:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4192:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4195:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4195:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4185:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4185:6:11"
																},
																"nativeSrc": "4185:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4185:15:11"
															},
															"nativeSrc": "4185:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4185:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4216:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4216:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4219:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4219:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4209:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4209:6:11"
																},
																"nativeSrc": "4209:15:11",
																"nodeType": "YulFunctionCall",
																"src": "4209:15:11"
															},
															"nativeSrc": "4209:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "4209:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4050:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "4050:180:11"
											},
											{
												"body": {
													"nativeSrc": "4287:269:11",
													"nodeType": "YulBlock",
													"src": "4287:269:11",
													"statements": [
														{
															"nativeSrc": "4297:22:11",
															"nodeType": "YulAssignment",
															"src": "4297:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4311:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4311:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4317:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4307:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4307:3:11"
																},
																"nativeSrc": "4307:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4307:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4297:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4297:6:11"
																}
															]
														},
														{
															"nativeSrc": "4328:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "4328:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4358:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4358:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4364:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4364:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4354:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4354:3:11"
																},
																"nativeSrc": "4354:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4354:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4332:18:11",
																	"nodeType": "YulTypedName",
																	"src": "4332:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4405:51:11",
																"nodeType": "YulBlock",
																"src": "4405:51:11",
																"statements": [
																	{
																		"nativeSrc": "4419:27:11",
																		"nodeType": "YulAssignment",
																		"src": "4419:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4433:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "4433:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4441:4:11",
																					"nodeType": "YulLiteral",
																					"src": "4441:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4429:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "4429:3:11"
																			},
																			"nativeSrc": "4429:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4429:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4419:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4419:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4385:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "4385:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4378:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4378:6:11"
																},
																"nativeSrc": "4378:26:11",
																"nodeType": "YulFunctionCall",
																"src": "4378:26:11"
															},
															"nativeSrc": "4375:81:11",
															"nodeType": "YulIf",
															"src": "4375:81:11"
														},
														{
															"body": {
																"nativeSrc": "4508:42:11",
																"nodeType": "YulBlock",
																"src": "4508:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4522:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "4522:16:11"
																			},
																			"nativeSrc": "4522:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4522:18:11"
																		},
																		"nativeSrc": "4522:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4522:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4472:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "4472:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4495:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4495:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4503:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4503:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4492:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "4492:2:11"
																		},
																		"nativeSrc": "4492:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4492:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4469:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "4469:2:11"
																},
																"nativeSrc": "4469:38:11",
																"nodeType": "YulFunctionCall",
																"src": "4469:38:11"
															},
															"nativeSrc": "4466:84:11",
															"nodeType": "YulIf",
															"src": "4466:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4236:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4271:4:11",
														"nodeType": "YulTypedName",
														"src": "4271:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4280:6:11",
														"nodeType": "YulTypedName",
														"src": "4280:6:11",
														"type": ""
													}
												],
												"src": "4236:320:11"
											},
											{
												"body": {
													"nativeSrc": "4616:87:11",
													"nodeType": "YulBlock",
													"src": "4616:87:11",
													"statements": [
														{
															"nativeSrc": "4626:11:11",
															"nodeType": "YulAssignment",
															"src": "4626:11:11",
															"value": {
																"name": "ptr",
																"nativeSrc": "4634:3:11",
																"nodeType": "YulIdentifier",
																"src": "4634:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4626:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4626:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4654:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4654:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4657:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4657:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4647:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4647:6:11"
																},
																"nativeSrc": "4647:14:11",
																"nodeType": "YulFunctionCall",
																"src": "4647:14:11"
															},
															"nativeSrc": "4647:14:11",
															"nodeType": "YulExpressionStatement",
															"src": "4647:14:11"
														},
														{
															"nativeSrc": "4670:26:11",
															"nodeType": "YulAssignment",
															"src": "4670:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4688:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4688:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4691:4:11",
																		"nodeType": "YulLiteral",
																		"src": "4691:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4678:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "4678:9:11"
																},
																"nativeSrc": "4678:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4678:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4670:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4670:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4562:141:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4603:3:11",
														"nodeType": "YulTypedName",
														"src": "4603:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4611:4:11",
														"nodeType": "YulTypedName",
														"src": "4611:4:11",
														"type": ""
													}
												],
												"src": "4562:141:11"
											},
											{
												"body": {
													"nativeSrc": "4753:49:11",
													"nodeType": "YulBlock",
													"src": "4753:49:11",
													"statements": [
														{
															"nativeSrc": "4763:33:11",
															"nodeType": "YulAssignment",
															"src": "4763:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4781:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4781:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4788:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4788:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4777:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4777:3:11"
																		},
																		"nativeSrc": "4777:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4777:14:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4793:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4793:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4773:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:11"
																},
																"nativeSrc": "4773:23:11",
																"nodeType": "YulFunctionCall",
																"src": "4773:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4763:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4709:93:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4736:5:11",
														"nodeType": "YulTypedName",
														"src": "4736:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4746:6:11",
														"nodeType": "YulTypedName",
														"src": "4746:6:11",
														"type": ""
													}
												],
												"src": "4709:93:11"
											},
											{
												"body": {
													"nativeSrc": "4861:54:11",
													"nodeType": "YulBlock",
													"src": "4861:54:11",
													"statements": [
														{
															"nativeSrc": "4871:37:11",
															"nodeType": "YulAssignment",
															"src": "4871:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4896:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "4896:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4902:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "4902:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4892:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4892:3:11"
																},
																"nativeSrc": "4892:16:11",
																"nodeType": "YulFunctionCall",
																"src": "4892:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4871:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "4871:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4808:107:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4836:4:11",
														"nodeType": "YulTypedName",
														"src": "4836:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4842:5:11",
														"nodeType": "YulTypedName",
														"src": "4842:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4852:8:11",
														"nodeType": "YulTypedName",
														"src": "4852:8:11",
														"type": ""
													}
												],
												"src": "4808:107:11"
											},
											{
												"body": {
													"nativeSrc": "4997:317:11",
													"nodeType": "YulBlock",
													"src": "4997:317:11",
													"statements": [
														{
															"nativeSrc": "5007:35:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5007:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5028:10:11",
																		"nodeType": "YulIdentifier",
																		"src": "5028:10:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5040:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5040:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5024:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5024:3:11"
																},
																"nativeSrc": "5024:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5024:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5011:9:11",
																	"nodeType": "YulTypedName",
																	"src": "5011:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5051:109:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5051:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5082:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5082:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5093:66:11",
																		"nodeType": "YulLiteral",
																		"src": "5093:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5063:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5063:18:11"
																},
																"nativeSrc": "5063:97:11",
																"nodeType": "YulFunctionCall",
																"src": "5063:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5055:4:11",
																	"nodeType": "YulTypedName",
																	"src": "5055:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5169:51:11",
															"nodeType": "YulAssignment",
															"src": "5169:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5200:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5200:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5211:8:11",
																		"nodeType": "YulIdentifier",
																		"src": "5211:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5181:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "5181:18:11"
																},
																"nativeSrc": "5181:39:11",
																"nodeType": "YulFunctionCall",
																"src": "5181:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5169:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "5169:8:11"
																}
															]
														},
														{
															"nativeSrc": "5229:30:11",
															"nodeType": "YulAssignment",
															"src": "5229:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5242:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5242:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5253:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5253:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5249:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5249:3:11"
																		},
																		"nativeSrc": "5249:9:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5249:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5238:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5238:3:11"
																},
																"nativeSrc": "5238:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5238:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5229:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5229:5:11"
																}
															]
														},
														{
															"nativeSrc": "5268:40:11",
															"nodeType": "YulAssignment",
															"src": "5268:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5281:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5281:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5292:8:11",
																				"nodeType": "YulIdentifier",
																				"src": "5292:8:11"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5302:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5302:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5288:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5288:3:11"
																		},
																		"nativeSrc": "5288:19:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5288:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5278:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "5278:2:11"
																},
																"nativeSrc": "5278:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5278:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5268:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4921:393:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4958:5:11",
														"nodeType": "YulTypedName",
														"src": "4958:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4965:10:11",
														"nodeType": "YulTypedName",
														"src": "4965:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4977:8:11",
														"nodeType": "YulTypedName",
														"src": "4977:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4990:6:11",
														"nodeType": "YulTypedName",
														"src": "4990:6:11",
														"type": ""
													}
												],
												"src": "4921:393:11"
											},
											{
												"body": {
													"nativeSrc": "5352:28:11",
													"nodeType": "YulBlock",
													"src": "5352:28:11",
													"statements": [
														{
															"nativeSrc": "5362:12:11",
															"nodeType": "YulAssignment",
															"src": "5362:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "5369:5:11",
																"nodeType": "YulIdentifier",
																"src": "5369:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5362:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5362:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5320:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5338:5:11",
														"nodeType": "YulTypedName",
														"src": "5338:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5348:3:11",
														"nodeType": "YulTypedName",
														"src": "5348:3:11",
														"type": ""
													}
												],
												"src": "5320:60:11"
											},
											{
												"body": {
													"nativeSrc": "5446:82:11",
													"nodeType": "YulBlock",
													"src": "5446:82:11",
													"statements": [
														{
															"nativeSrc": "5456:66:11",
															"nodeType": "YulAssignment",
															"src": "5456:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5514:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5514:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5496:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5496:17:11"
																				},
																				"nativeSrc": "5496:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5496:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5487:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "5487:8:11"
																		},
																		"nativeSrc": "5487:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5487:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5469:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "5469:17:11"
																},
																"nativeSrc": "5469:53:11",
																"nodeType": "YulFunctionCall",
																"src": "5469:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5456:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "5456:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5386:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5426:5:11",
														"nodeType": "YulTypedName",
														"src": "5426:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5436:9:11",
														"nodeType": "YulTypedName",
														"src": "5436:9:11",
														"type": ""
													}
												],
												"src": "5386:142:11"
											},
											{
												"body": {
													"nativeSrc": "5581:28:11",
													"nodeType": "YulBlock",
													"src": "5581:28:11",
													"statements": [
														{
															"nativeSrc": "5591:12:11",
															"nodeType": "YulAssignment",
															"src": "5591:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "5598:5:11",
																"nodeType": "YulIdentifier",
																"src": "5598:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5591:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5591:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5534:75:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5567:5:11",
														"nodeType": "YulTypedName",
														"src": "5567:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5577:3:11",
														"nodeType": "YulTypedName",
														"src": "5577:3:11",
														"type": ""
													}
												],
												"src": "5534:75:11"
											},
											{
												"body": {
													"nativeSrc": "5691:193:11",
													"nodeType": "YulBlock",
													"src": "5691:193:11",
													"statements": [
														{
															"nativeSrc": "5701:63:11",
															"nodeType": "YulVariableDeclaration",
															"src": "5701:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5756:7:11",
																		"nodeType": "YulIdentifier",
																		"src": "5756:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5725:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "5725:30:11"
																},
																"nativeSrc": "5725:39:11",
																"nodeType": "YulFunctionCall",
																"src": "5725:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5705:16:11",
																	"nodeType": "YulTypedName",
																	"src": "5705:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5780:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5780:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5820:4:11",
																						"nodeType": "YulIdentifier",
																						"src": "5820:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5814:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "5814:5:11"
																				},
																				"nativeSrc": "5814:11:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5814:11:11"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5827:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5827:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5859:16:11",
																						"nodeType": "YulIdentifier",
																						"src": "5859:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5835:23:11",
																					"nodeType": "YulIdentifier",
																					"src": "5835:23:11"
																				},
																				"nativeSrc": "5835:41:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5835:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5786:27:11",
																			"nodeType": "YulIdentifier",
																			"src": "5786:27:11"
																		},
																		"nativeSrc": "5786:91:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5786:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5773:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5773:6:11"
																},
																"nativeSrc": "5773:105:11",
																"nodeType": "YulFunctionCall",
																"src": "5773:105:11"
															},
															"nativeSrc": "5773:105:11",
															"nodeType": "YulExpressionStatement",
															"src": "5773:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5615:269:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5668:4:11",
														"nodeType": "YulTypedName",
														"src": "5668:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5674:6:11",
														"nodeType": "YulTypedName",
														"src": "5674:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5682:7:11",
														"nodeType": "YulTypedName",
														"src": "5682:7:11",
														"type": ""
													}
												],
												"src": "5615:269:11"
											},
											{
												"body": {
													"nativeSrc": "5939:24:11",
													"nodeType": "YulBlock",
													"src": "5939:24:11",
													"statements": [
														{
															"nativeSrc": "5949:8:11",
															"nodeType": "YulAssignment",
															"src": "5949:8:11",
															"value": {
																"kind": "number",
																"nativeSrc": "5956:1:11",
																"nodeType": "YulLiteral",
																"src": "5956:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5949:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5890:73:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5935:3:11",
														"nodeType": "YulTypedName",
														"src": "5935:3:11",
														"type": ""
													}
												],
												"src": "5890:73:11"
											},
											{
												"body": {
													"nativeSrc": "6022:136:11",
													"nodeType": "YulBlock",
													"src": "6022:136:11",
													"statements": [
														{
															"nativeSrc": "6032:46:11",
															"nodeType": "YulVariableDeclaration",
															"src": "6032:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6046:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "6046:30:11"
																},
																"nativeSrc": "6046:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6046:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6036:6:11",
																	"nodeType": "YulTypedName",
																	"src": "6036:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6131:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6131:4:11"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6137:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6137:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6145:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6145:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6087:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6087:43:11"
																},
																"nativeSrc": "6087:65:11",
																"nodeType": "YulFunctionCall",
																"src": "6087:65:11"
															},
															"nativeSrc": "6087:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "6087:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5969:189:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6008:4:11",
														"nodeType": "YulTypedName",
														"src": "6008:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6014:6:11",
														"nodeType": "YulTypedName",
														"src": "6014:6:11",
														"type": ""
													}
												],
												"src": "5969:189:11"
											},
											{
												"body": {
													"nativeSrc": "6214:136:11",
													"nodeType": "YulBlock",
													"src": "6214:136:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6281:63:11",
																"nodeType": "YulBlock",
																"src": "6281:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6325:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6325:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6332:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6332:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6295:29:11",
																				"nodeType": "YulIdentifier",
																				"src": "6295:29:11"
																			},
																			"nativeSrc": "6295:39:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6295:39:11"
																		},
																		"nativeSrc": "6295:39:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6295:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6234:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6234:5:11"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6241:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6231:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6231:2:11"
																},
																"nativeSrc": "6231:14:11",
																"nodeType": "YulFunctionCall",
																"src": "6231:14:11"
															},
															"nativeSrc": "6224:120:11",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6246:26:11",
																"nodeType": "YulBlock",
																"src": "6246:26:11",
																"statements": [
																	{
																		"nativeSrc": "6248:22:11",
																		"nodeType": "YulAssignment",
																		"src": "6248:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6261:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6261:5:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6268:1:11",
																					"nodeType": "YulLiteral",
																					"src": "6268:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6257:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6257:3:11"
																			},
																			"nativeSrc": "6257:13:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6257:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6248:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6248:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6228:2:11",
																"nodeType": "YulBlock",
																"src": "6228:2:11",
																"statements": []
															},
															"src": "6224:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6164:186:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6202:5:11",
														"nodeType": "YulTypedName",
														"src": "6202:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6209:3:11",
														"nodeType": "YulTypedName",
														"src": "6209:3:11",
														"type": ""
													}
												],
												"src": "6164:186:11"
											},
											{
												"body": {
													"nativeSrc": "6435:464:11",
													"nodeType": "YulBlock",
													"src": "6435:464:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6461:431:11",
																"nodeType": "YulBlock",
																"src": "6461:431:11",
																"statements": [
																	{
																		"nativeSrc": "6475:54:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6475:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6523:5:11",
																					"nodeType": "YulIdentifier",
																					"src": "6523:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6491:31:11",
																				"nodeType": "YulIdentifier",
																				"src": "6491:31:11"
																			},
																			"nativeSrc": "6491:38:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6491:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6479:8:11",
																				"nodeType": "YulTypedName",
																				"src": "6479:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6542:63:11",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6542:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6565:8:11",
																					"nodeType": "YulIdentifier",
																					"src": "6565:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6593:10:11",
																							"nodeType": "YulIdentifier",
																							"src": "6593:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6575:17:11",
																						"nodeType": "YulIdentifier",
																						"src": "6575:17:11"
																					},
																					"nativeSrc": "6575:29:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6575:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6561:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "6561:3:11"
																			},
																			"nativeSrc": "6561:44:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6561:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6546:11:11",
																				"nodeType": "YulTypedName",
																				"src": "6546:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6762:27:11",
																			"nodeType": "YulBlock",
																			"src": "6762:27:11",
																			"statements": [
																				{
																					"nativeSrc": "6764:23:11",
																					"nodeType": "YulAssignment",
																					"src": "6764:23:11",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6779:8:11",
																						"nodeType": "YulIdentifier",
																						"src": "6779:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6764:11:11",
																							"nodeType": "YulIdentifier",
																							"src": "6764:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6746:10:11",
																					"nodeType": "YulIdentifier",
																					"src": "6746:10:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6758:2:11",
																					"nodeType": "YulLiteral",
																					"src": "6758:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6743:2:11",
																				"nodeType": "YulIdentifier",
																				"src": "6743:2:11"
																			},
																			"nativeSrc": "6743:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6743:18:11"
																		},
																		"nativeSrc": "6740:49:11",
																		"nodeType": "YulIf",
																		"src": "6740:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6831:11:11",
																					"nodeType": "YulIdentifier",
																					"src": "6831:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6848:8:11",
																							"nodeType": "YulIdentifier",
																							"src": "6848:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6876:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "6876:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6858:17:11",
																								"nodeType": "YulIdentifier",
																								"src": "6858:17:11"
																							},
																							"nativeSrc": "6858:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "6858:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6844:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "6844:3:11"
																					},
																					"nativeSrc": "6844:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "6844:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6802:28:11",
																				"nodeType": "YulIdentifier",
																				"src": "6802:28:11"
																			},
																			"nativeSrc": "6802:80:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6802:80:11"
																		},
																		"nativeSrc": "6802:80:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6802:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6452:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6452:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6457:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6457:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6449:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6449:2:11"
																},
																"nativeSrc": "6449:11:11",
																"nodeType": "YulFunctionCall",
																"src": "6449:11:11"
															},
															"nativeSrc": "6446:446:11",
															"nodeType": "YulIf",
															"src": "6446:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6356:543:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6411:5:11",
														"nodeType": "YulTypedName",
														"src": "6411:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6418:3:11",
														"nodeType": "YulTypedName",
														"src": "6418:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6423:10:11",
														"nodeType": "YulTypedName",
														"src": "6423:10:11",
														"type": ""
													}
												],
												"src": "6356:543:11"
											},
											{
												"body": {
													"nativeSrc": "6968:54:11",
													"nodeType": "YulBlock",
													"src": "6968:54:11",
													"statements": [
														{
															"nativeSrc": "6978:37:11",
															"nodeType": "YulAssignment",
															"src": "6978:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7003:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7003:4:11"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7009:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "7009:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6999:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6999:3:11"
																},
																"nativeSrc": "6999:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6999:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6978:8:11",
																	"nodeType": "YulIdentifier",
																	"src": "6978:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6905:117:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6943:4:11",
														"nodeType": "YulTypedName",
														"src": "6943:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6949:5:11",
														"nodeType": "YulTypedName",
														"src": "6949:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6959:8:11",
														"nodeType": "YulTypedName",
														"src": "6959:8:11",
														"type": ""
													}
												],
												"src": "6905:117:11"
											},
											{
												"body": {
													"nativeSrc": "7079:118:11",
													"nodeType": "YulBlock",
													"src": "7079:118:11",
													"statements": [
														{
															"nativeSrc": "7089:68:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7089:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7138:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7138:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7141:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "7141:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7134:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7134:3:11"
																				},
																				"nativeSrc": "7134:13:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7134:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7153:1:11",
																						"nodeType": "YulLiteral",
																						"src": "7153:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7149:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7149:3:11"
																				},
																				"nativeSrc": "7149:6:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7149:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7105:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "7105:28:11"
																		},
																		"nativeSrc": "7105:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7105:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7101:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7101:3:11"
																},
																"nativeSrc": "7101:56:11",
																"nodeType": "YulFunctionCall",
																"src": "7101:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7093:4:11",
																	"nodeType": "YulTypedName",
																	"src": "7093:4:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7166:25:11",
															"nodeType": "YulAssignment",
															"src": "7166:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7180:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7180:4:11"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7186:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7186:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7176:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7176:3:11"
																},
																"nativeSrc": "7176:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7176:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7166:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7166:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7028:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7056:4:11",
														"nodeType": "YulTypedName",
														"src": "7056:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7062:5:11",
														"nodeType": "YulTypedName",
														"src": "7062:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7072:6:11",
														"nodeType": "YulTypedName",
														"src": "7072:6:11",
														"type": ""
													}
												],
												"src": "7028:169:11"
											},
											{
												"body": {
													"nativeSrc": "7283:214:11",
													"nodeType": "YulBlock",
													"src": "7283:214:11",
													"statements": [
														{
															"nativeSrc": "7416:37:11",
															"nodeType": "YulAssignment",
															"src": "7416:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7443:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7443:4:11"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7449:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7449:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7424:18:11",
																	"nodeType": "YulIdentifier",
																	"src": "7424:18:11"
																},
																"nativeSrc": "7424:29:11",
																"nodeType": "YulFunctionCall",
																"src": "7424:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7416:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7416:4:11"
																}
															]
														},
														{
															"nativeSrc": "7462:29:11",
															"nodeType": "YulAssignment",
															"src": "7462:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7473:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7473:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7483:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7483:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7486:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "7486:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7479:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:11"
																		},
																		"nativeSrc": "7479:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7479:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7470:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7470:2:11"
																},
																"nativeSrc": "7470:21:11",
																"nodeType": "YulFunctionCall",
																"src": "7470:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7462:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7462:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7202:295:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7264:4:11",
														"nodeType": "YulTypedName",
														"src": "7264:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7270:3:11",
														"nodeType": "YulTypedName",
														"src": "7270:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7278:4:11",
														"nodeType": "YulTypedName",
														"src": "7278:4:11",
														"type": ""
													}
												],
												"src": "7202:295:11"
											},
											{
												"body": {
													"nativeSrc": "7594:1303:11",
													"nodeType": "YulBlock",
													"src": "7594:1303:11",
													"statements": [
														{
															"nativeSrc": "7605:51:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7605:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7652:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7652:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7619:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "7619:32:11"
																},
																"nativeSrc": "7619:37:11",
																"nodeType": "YulFunctionCall",
																"src": "7619:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7609:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7609:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7741:22:11",
																"nodeType": "YulBlock",
																"src": "7741:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7743:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7743:16:11"
																			},
																			"nativeSrc": "7743:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7743:18:11"
																		},
																		"nativeSrc": "7743:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7743:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7713:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7713:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7721:18:11",
																		"nodeType": "YulLiteral",
																		"src": "7721:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7710:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "7710:2:11"
																},
																"nativeSrc": "7710:30:11",
																"nodeType": "YulFunctionCall",
																"src": "7710:30:11"
															},
															"nativeSrc": "7707:56:11",
															"nodeType": "YulIf",
															"src": "7707:56:11"
														},
														{
															"nativeSrc": "7773:52:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7773:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7819:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7819:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7813:5:11",
																			"nodeType": "YulIdentifier",
																			"src": "7813:5:11"
																		},
																		"nativeSrc": "7813:11:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7813:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7787:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "7787:25:11"
																},
																"nativeSrc": "7787:38:11",
																"nodeType": "YulFunctionCall",
																"src": "7787:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7777:6:11",
																	"nodeType": "YulTypedName",
																	"src": "7777:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7918:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7918:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7924:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:11"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7932:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7932:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7872:45:11",
																	"nodeType": "YulIdentifier",
																	"src": "7872:45:11"
																},
																"nativeSrc": "7872:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7872:67:11"
															},
															"nativeSrc": "7872:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "7872:67:11"
														},
														{
															"nativeSrc": "7949:18:11",
															"nodeType": "YulVariableDeclaration",
															"src": "7949:18:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7966:1:11",
																"nodeType": "YulLiteral",
																"src": "7966:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7953:9:11",
																	"nodeType": "YulTypedName",
																	"src": "7953:9:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7977:17:11",
															"nodeType": "YulAssignment",
															"src": "7977:17:11",
															"value": {
																"kind": "number",
																"nativeSrc": "7990:4:11",
																"nodeType": "YulLiteral",
																"src": "7990:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7977:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "7977:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8041:611:11",
																		"nodeType": "YulBlock",
																		"src": "8041:611:11",
																		"statements": [
																			{
																				"nativeSrc": "8055:37:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8055:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8074:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "8074:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8086:4:11",
																									"nodeType": "YulLiteral",
																									"src": "8086:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8082:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "8082:3:11"
																							},
																							"nativeSrc": "8082:9:11",
																							"nodeType": "YulFunctionCall",
																							"src": "8082:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8070:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "8070:3:11"
																					},
																					"nativeSrc": "8070:22:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8070:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8059:7:11",
																						"nodeType": "YulTypedName",
																						"src": "8059:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8106:51:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8106:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8152:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "8152:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8120:31:11",
																						"nodeType": "YulIdentifier",
																						"src": "8120:31:11"
																					},
																					"nativeSrc": "8120:37:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8120:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8110:6:11",
																						"nodeType": "YulTypedName",
																						"src": "8110:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8170:10:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8170:10:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8179:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8179:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8174:1:11",
																						"nodeType": "YulTypedName",
																						"src": "8174:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8238:163:11",
																					"nodeType": "YulBlock",
																					"src": "8238:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8263:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8263:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8281:3:11",
																														"nodeType": "YulIdentifier",
																														"src": "8281:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8286:9:11",
																														"nodeType": "YulIdentifier",
																														"src": "8286:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8277:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "8277:3:11"
																												},
																												"nativeSrc": "8277:19:11",
																												"nodeType": "YulFunctionCall",
																												"src": "8277:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8271:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "8271:5:11"
																										},
																										"nativeSrc": "8271:26:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8271:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8256:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8256:6:11"
																								},
																								"nativeSrc": "8256:42:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8256:42:11"
																							},
																							"nativeSrc": "8256:42:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "8256:42:11"
																						},
																						{
																							"nativeSrc": "8315:24:11",
																							"nodeType": "YulAssignment",
																							"src": "8315:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8329:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8329:6:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8337:1:11",
																										"nodeType": "YulLiteral",
																										"src": "8337:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8325:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8325:3:11"
																								},
																								"nativeSrc": "8325:14:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8325:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8315:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8315:6:11"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8356:31:11",
																							"nodeType": "YulAssignment",
																							"src": "8356:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8373:9:11",
																										"nodeType": "YulIdentifier",
																										"src": "8373:9:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8384:2:11",
																										"nodeType": "YulLiteral",
																										"src": "8384:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8369:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8369:3:11"
																								},
																								"nativeSrc": "8369:18:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8369:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8356:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "8356:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8204:1:11",
																							"nodeType": "YulIdentifier",
																							"src": "8204:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8207:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "8207:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8201:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "8201:2:11"
																					},
																					"nativeSrc": "8201:14:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8201:14:11"
																				},
																				"nativeSrc": "8193:208:11",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8216:21:11",
																					"nodeType": "YulBlock",
																					"src": "8216:21:11",
																					"statements": [
																						{
																							"nativeSrc": "8218:17:11",
																							"nodeType": "YulAssignment",
																							"src": "8218:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8227:1:11",
																										"nodeType": "YulIdentifier",
																										"src": "8227:1:11"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8230:4:11",
																										"nodeType": "YulLiteral",
																										"src": "8230:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8223:3:11",
																									"nodeType": "YulIdentifier",
																									"src": "8223:3:11"
																								},
																								"nativeSrc": "8223:12:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8223:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8218:1:11",
																									"nodeType": "YulIdentifier",
																									"src": "8218:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8197:3:11",
																					"nodeType": "YulBlock",
																					"src": "8197:3:11",
																					"statements": []
																				},
																				"src": "8193:208:11"
																			},
																			{
																				"body": {
																					"nativeSrc": "8437:156:11",
																					"nodeType": "YulBlock",
																					"src": "8437:156:11",
																					"statements": [
																						{
																							"nativeSrc": "8455:43:11",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8455:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8482:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "8482:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8487:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "8487:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8478:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "8478:3:11"
																										},
																										"nativeSrc": "8478:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8478:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8472:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "8472:5:11"
																								},
																								"nativeSrc": "8472:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8472:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8459:9:11",
																									"nodeType": "YulTypedName",
																									"src": "8459:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8522:6:11",
																										"nodeType": "YulIdentifier",
																										"src": "8522:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8549:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "8549:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8564:6:11",
																														"nodeType": "YulIdentifier",
																														"src": "8564:6:11"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8572:4:11",
																														"nodeType": "YulLiteral",
																														"src": "8572:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8560:3:11",
																													"nodeType": "YulIdentifier",
																													"src": "8560:3:11"
																												},
																												"nativeSrc": "8560:17:11",
																												"nodeType": "YulFunctionCall",
																												"src": "8560:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8530:18:11",
																											"nodeType": "YulIdentifier",
																											"src": "8530:18:11"
																										},
																										"nativeSrc": "8530:48:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8530:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8515:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8515:6:11"
																								},
																								"nativeSrc": "8515:64:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8515:64:11"
																							},
																							"nativeSrc": "8515:64:11",
																							"nodeType": "YulExpressionStatement",
																							"src": "8515:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8420:7:11",
																							"nodeType": "YulIdentifier",
																							"src": "8420:7:11"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8429:6:11",
																							"nodeType": "YulIdentifier",
																							"src": "8429:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8417:2:11",
																						"nodeType": "YulIdentifier",
																						"src": "8417:2:11"
																					},
																					"nativeSrc": "8417:19:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8417:19:11"
																				},
																				"nativeSrc": "8414:179:11",
																				"nodeType": "YulIf",
																				"src": "8414:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8613:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "8613:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8627:6:11",
																											"nodeType": "YulIdentifier",
																											"src": "8627:6:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8635:1:11",
																											"nodeType": "YulLiteral",
																											"src": "8635:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8623:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "8623:3:11"
																									},
																									"nativeSrc": "8623:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "8623:14:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8639:1:11",
																									"nodeType": "YulLiteral",
																									"src": "8639:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8619:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "8619:3:11"
																							},
																							"nativeSrc": "8619:22:11",
																							"nodeType": "YulFunctionCall",
																							"src": "8619:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8606:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8606:6:11"
																					},
																					"nativeSrc": "8606:36:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8606:36:11"
																				},
																				"nativeSrc": "8606:36:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "8606:36:11"
																			}
																		]
																	},
																	"nativeSrc": "8034:618:11",
																	"nodeType": "YulCase",
																	"src": "8034:618:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8039:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8039:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8669:222:11",
																		"nodeType": "YulBlock",
																		"src": "8669:222:11",
																		"statements": [
																			{
																				"nativeSrc": "8683:14:11",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8683:14:11",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8696:1:11",
																					"nodeType": "YulLiteral",
																					"src": "8696:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8687:5:11",
																						"nodeType": "YulTypedName",
																						"src": "8687:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8720:67:11",
																					"nodeType": "YulBlock",
																					"src": "8720:67:11",
																					"statements": [
																						{
																							"nativeSrc": "8738:35:11",
																							"nodeType": "YulAssignment",
																							"src": "8738:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8757:3:11",
																												"nodeType": "YulIdentifier",
																												"src": "8757:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8762:9:11",
																												"nodeType": "YulIdentifier",
																												"src": "8762:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8753:3:11",
																											"nodeType": "YulIdentifier",
																											"src": "8753:3:11"
																										},
																										"nativeSrc": "8753:19:11",
																										"nodeType": "YulFunctionCall",
																										"src": "8753:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8747:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "8747:5:11"
																								},
																								"nativeSrc": "8747:26:11",
																								"nodeType": "YulFunctionCall",
																								"src": "8747:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8738:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "8738:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8713:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "8713:6:11"
																				},
																				"nativeSrc": "8710:77:11",
																				"nodeType": "YulIf",
																				"src": "8710:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8807:4:11",
																							"nodeType": "YulIdentifier",
																							"src": "8807:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8866:5:11",
																									"nodeType": "YulIdentifier",
																									"src": "8866:5:11"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8873:6:11",
																									"nodeType": "YulIdentifier",
																									"src": "8873:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8813:52:11",
																								"nodeType": "YulIdentifier",
																								"src": "8813:52:11"
																							},
																							"nativeSrc": "8813:67:11",
																							"nodeType": "YulFunctionCall",
																							"src": "8813:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8800:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "8800:6:11"
																					},
																					"nativeSrc": "8800:81:11",
																					"nodeType": "YulFunctionCall",
																					"src": "8800:81:11"
																				},
																				"nativeSrc": "8800:81:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "8800:81:11"
																			}
																		]
																	},
																	"nativeSrc": "8661:230:11",
																	"nodeType": "YulCase",
																	"src": "8661:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8014:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "8014:6:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8022:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8022:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8011:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8011:2:11"
																},
																"nativeSrc": "8011:14:11",
																"nodeType": "YulFunctionCall",
																"src": "8011:14:11"
															},
															"nativeSrc": "8004:887:11",
															"nodeType": "YulSwitch",
															"src": "8004:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7502:1395:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7583:4:11",
														"nodeType": "YulTypedName",
														"src": "7583:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7589:3:11",
														"nodeType": "YulTypedName",
														"src": "7589:3:11",
														"type": ""
													}
												],
												"src": "7502:1395:11"
											},
											{
												"body": {
													"nativeSrc": "8948:81:11",
													"nodeType": "YulBlock",
													"src": "8948:81:11",
													"statements": [
														{
															"nativeSrc": "8958:65:11",
															"nodeType": "YulAssignment",
															"src": "8958:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8973:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "8973:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8980:42:11",
																		"nodeType": "YulLiteral",
																		"src": "8980:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8969:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8969:3:11"
																},
																"nativeSrc": "8969:54:11",
																"nodeType": "YulFunctionCall",
																"src": "8969:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8958:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "8958:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "8903:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8930:5:11",
														"nodeType": "YulTypedName",
														"src": "8930:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8940:7:11",
														"nodeType": "YulTypedName",
														"src": "8940:7:11",
														"type": ""
													}
												],
												"src": "8903:126:11"
											},
											{
												"body": {
													"nativeSrc": "9080:51:11",
													"nodeType": "YulBlock",
													"src": "9080:51:11",
													"statements": [
														{
															"nativeSrc": "9090:35:11",
															"nodeType": "YulAssignment",
															"src": "9090:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9119:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "9119:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9101:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9101:17:11"
																},
																"nativeSrc": "9101:24:11",
																"nodeType": "YulFunctionCall",
																"src": "9101:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9090:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "9090:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "9035:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9062:5:11",
														"nodeType": "YulTypedName",
														"src": "9062:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9072:7:11",
														"nodeType": "YulTypedName",
														"src": "9072:7:11",
														"type": ""
													}
												],
												"src": "9035:96:11"
											},
											{
												"body": {
													"nativeSrc": "9202:53:11",
													"nodeType": "YulBlock",
													"src": "9202:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9219:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9219:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9242:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9242:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "9224:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "9224:17:11"
																		},
																		"nativeSrc": "9224:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9224:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9212:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9212:6:11"
																},
																"nativeSrc": "9212:37:11",
																"nodeType": "YulFunctionCall",
																"src": "9212:37:11"
															},
															"nativeSrc": "9212:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "9212:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "9137:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9190:5:11",
														"nodeType": "YulTypedName",
														"src": "9190:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9197:3:11",
														"nodeType": "YulTypedName",
														"src": "9197:3:11",
														"type": ""
													}
												],
												"src": "9137:118:11"
											},
											{
												"body": {
													"nativeSrc": "9359:124:11",
													"nodeType": "YulBlock",
													"src": "9359:124:11",
													"statements": [
														{
															"nativeSrc": "9369:26:11",
															"nodeType": "YulAssignment",
															"src": "9369:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9381:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9381:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9392:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9392:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9377:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9377:3:11"
																},
																"nativeSrc": "9377:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9377:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9369:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9369:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9449:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9449:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9462:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9462:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9473:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9473:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9458:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9458:3:11"
																		},
																		"nativeSrc": "9458:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9458:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9405:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9405:43:11"
																},
																"nativeSrc": "9405:71:11",
																"nodeType": "YulFunctionCall",
																"src": "9405:71:11"
															},
															"nativeSrc": "9405:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "9405:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9261:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9331:9:11",
														"nodeType": "YulTypedName",
														"src": "9331:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9343:6:11",
														"nodeType": "YulTypedName",
														"src": "9343:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9354:4:11",
														"nodeType": "YulTypedName",
														"src": "9354:4:11",
														"type": ""
													}
												],
												"src": "9261:222:11"
											},
											{
												"body": {
													"nativeSrc": "9517:152:11",
													"nodeType": "YulBlock",
													"src": "9517:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9534:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9534:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9537:77:11",
																		"nodeType": "YulLiteral",
																		"src": "9537:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9527:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9527:6:11"
																},
																"nativeSrc": "9527:88:11",
																"nodeType": "YulFunctionCall",
																"src": "9527:88:11"
															},
															"nativeSrc": "9527:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "9527:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9631:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9631:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9634:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9634:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9624:6:11"
																},
																"nativeSrc": "9624:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9624:15:11"
															},
															"nativeSrc": "9624:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9624:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9655:1:11",
																		"nodeType": "YulLiteral",
																		"src": "9655:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9658:4:11",
																		"nodeType": "YulLiteral",
																		"src": "9658:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9648:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9648:6:11"
																},
																"nativeSrc": "9648:15:11",
																"nodeType": "YulFunctionCall",
																"src": "9648:15:11"
															},
															"nativeSrc": "9648:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "9648:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9489:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "9489:180:11"
											},
											{
												"body": {
													"nativeSrc": "9719:147:11",
													"nodeType": "YulBlock",
													"src": "9719:147:11",
													"statements": [
														{
															"nativeSrc": "9729:25:11",
															"nodeType": "YulAssignment",
															"src": "9729:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9752:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9752:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9734:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9734:17:11"
																},
																"nativeSrc": "9734:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9734:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9729:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9729:1:11"
																}
															]
														},
														{
															"nativeSrc": "9763:25:11",
															"nodeType": "YulAssignment",
															"src": "9763:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9786:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9786:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9768:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "9768:17:11"
																},
																"nativeSrc": "9768:20:11",
																"nodeType": "YulFunctionCall",
																"src": "9768:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9763:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "9763:1:11"
																}
															]
														},
														{
															"nativeSrc": "9797:16:11",
															"nodeType": "YulAssignment",
															"src": "9797:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9808:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9808:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9811:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9811:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9804:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9804:3:11"
																},
																"nativeSrc": "9804:9:11",
																"nodeType": "YulFunctionCall",
																"src": "9804:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9797:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9797:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9837:22:11",
																"nodeType": "YulBlock",
																"src": "9837:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9839:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "9839:16:11"
																			},
																			"nativeSrc": "9839:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "9839:18:11"
																		},
																		"nativeSrc": "9839:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "9839:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9829:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "9829:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9832:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9832:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9826:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "9826:2:11"
																},
																"nativeSrc": "9826:10:11",
																"nodeType": "YulFunctionCall",
																"src": "9826:10:11"
															},
															"nativeSrc": "9823:36:11",
															"nodeType": "YulIf",
															"src": "9823:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9675:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9706:1:11",
														"nodeType": "YulTypedName",
														"src": "9706:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9709:1:11",
														"nodeType": "YulTypedName",
														"src": "9709:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9715:3:11",
														"nodeType": "YulTypedName",
														"src": "9715:3:11",
														"type": ""
													}
												],
												"src": "9675:191:11"
											},
											{
												"body": {
													"nativeSrc": "9937:53:11",
													"nodeType": "YulBlock",
													"src": "9937:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9954:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9954:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9977:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "9977:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "9959:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "9959:17:11"
																		},
																		"nativeSrc": "9959:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9959:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9947:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9947:6:11"
																},
																"nativeSrc": "9947:37:11",
																"nodeType": "YulFunctionCall",
																"src": "9947:37:11"
															},
															"nativeSrc": "9947:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "9947:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "9872:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9925:5:11",
														"nodeType": "YulTypedName",
														"src": "9925:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9932:3:11",
														"nodeType": "YulTypedName",
														"src": "9932:3:11",
														"type": ""
													}
												],
												"src": "9872:118:11"
											},
											{
												"body": {
													"nativeSrc": "10150:288:11",
													"nodeType": "YulBlock",
													"src": "10150:288:11",
													"statements": [
														{
															"nativeSrc": "10160:26:11",
															"nodeType": "YulAssignment",
															"src": "10160:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10172:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10172:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10183:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10183:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10168:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10168:3:11"
																},
																"nativeSrc": "10168:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10168:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10160:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10160:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10240:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10240:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10253:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10253:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10264:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10264:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10249:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10249:3:11"
																		},
																		"nativeSrc": "10249:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10249:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10196:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10196:43:11"
																},
																"nativeSrc": "10196:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10196:71:11"
															},
															"nativeSrc": "10196:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10196:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10321:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10321:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10334:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10334:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10345:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10345:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10330:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10330:3:11"
																		},
																		"nativeSrc": "10330:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10330:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10277:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10277:43:11"
																},
																"nativeSrc": "10277:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10277:72:11"
															},
															"nativeSrc": "10277:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10277:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10403:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10403:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10416:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10416:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10427:2:11",
																				"nodeType": "YulLiteral",
																				"src": "10427:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10412:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10412:3:11"
																		},
																		"nativeSrc": "10412:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10412:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10359:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10359:43:11"
																},
																"nativeSrc": "10359:72:11",
																"nodeType": "YulFunctionCall",
																"src": "10359:72:11"
															},
															"nativeSrc": "10359:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "10359:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9996:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10106:9:11",
														"nodeType": "YulTypedName",
														"src": "10106:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10118:6:11",
														"nodeType": "YulTypedName",
														"src": "10118:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10126:6:11",
														"nodeType": "YulTypedName",
														"src": "10126:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10134:6:11",
														"nodeType": "YulTypedName",
														"src": "10134:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10145:4:11",
														"nodeType": "YulTypedName",
														"src": "10145:4:11",
														"type": ""
													}
												],
												"src": "9996:442:11"
											},
											{
												"body": {
													"nativeSrc": "10542:124:11",
													"nodeType": "YulBlock",
													"src": "10542:124:11",
													"statements": [
														{
															"nativeSrc": "10552:26:11",
															"nodeType": "YulAssignment",
															"src": "10552:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10564:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10564:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10575:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10575:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10560:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10560:3:11"
																},
																"nativeSrc": "10560:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10560:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10552:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10552:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10632:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "10632:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10645:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10645:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10656:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10656:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10641:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10641:3:11"
																		},
																		"nativeSrc": "10641:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10641:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10588:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "10588:43:11"
																},
																"nativeSrc": "10588:71:11",
																"nodeType": "YulFunctionCall",
																"src": "10588:71:11"
															},
															"nativeSrc": "10588:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "10588:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10444:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10514:9:11",
														"nodeType": "YulTypedName",
														"src": "10514:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10526:6:11",
														"nodeType": "YulTypedName",
														"src": "10526:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10537:4:11",
														"nodeType": "YulTypedName",
														"src": "10537:4:11",
														"type": ""
													}
												],
												"src": "10444:222:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516124f43803806124f4833981810160405281019061003191906105ff565b82828160039081610042919061088b565b508060049081610052919061088b565b505050610065338261008060201b60201c565b6100775f801b3361010560201b60201c565b50505050610a6f565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100f0575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016100e79190610999565b60405180910390fd5b6101015f83836101fb60201b60201c565b5050565b5f610116838361041460201b60201c565b6101f157600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555061018e61047860201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600190506101f5565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361024b578060025f82825461023f91906109df565b92505081905550610319565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156102d4578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016102cb93929190610a21565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610360578060025f82825403925050819055506103aa565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104079190610a56565b60405180910390a3505050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6104de82610498565b810181811067ffffffffffffffff821117156104fd576104fc6104a8565b5b80604052505050565b5f61050f61047f565b905061051b82826104d5565b919050565b5f67ffffffffffffffff82111561053a576105396104a8565b5b61054382610498565b9050602081019050919050565b8281835e5f83830152505050565b5f61057061056b84610520565b610506565b90508281526020810184848401111561058c5761058b610494565b5b610597848285610550565b509392505050565b5f82601f8301126105b3576105b2610490565b5b81516105c384826020860161055e565b91505092915050565b5f819050919050565b6105de816105cc565b81146105e8575f80fd5b50565b5f815190506105f9816105d5565b92915050565b5f805f6060848603121561061657610615610488565b5b5f84015167ffffffffffffffff8111156106335761063261048c565b5b61063f8682870161059f565b935050602084015167ffffffffffffffff8111156106605761065f61048c565b5b61066c8682870161059f565b925050604061067d868287016105eb565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806106d557607f821691505b6020821081036106e8576106e7610691565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261074a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261070f565b610754868361070f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61078f61078a610785846105cc565b61076c565b6105cc565b9050919050565b5f819050919050565b6107a883610775565b6107bc6107b482610796565b84845461071b565b825550505050565b5f90565b6107d06107c4565b6107db81848461079f565b505050565b5b818110156107fe576107f35f826107c8565b6001810190506107e1565b5050565b601f82111561084357610814816106ee565b61081d84610700565b8101602085101561082c578190505b61084061083885610700565b8301826107e0565b50505b505050565b5f82821c905092915050565b5f6108635f1984600802610848565b1980831691505092915050565b5f61087b8383610854565b9150826002028217905092915050565b61089482610687565b67ffffffffffffffff8111156108ad576108ac6104a8565b5b6108b782546106be565b6108c2828285610802565b5f60209050601f8311600181146108f3575f84156108e1578287015190505b6108eb8582610870565b865550610952565b601f198416610901866106ee565b5f5b8281101561092857848901518255600182019150602085019450602081019050610903565b868310156109455784890151610941601f891682610854565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109838261095a565b9050919050565b61099381610979565b82525050565b5f6020820190506109ac5f83018461098a565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109e9826105cc565b91506109f4836105cc565b9250828201905080821115610a0c57610a0b6109b2565b5b92915050565b610a1b816105cc565b82525050565b5f606082019050610a345f83018661098a565b610a416020830185610a12565b610a4e6040830184610a12565b949350505050565b5f602082019050610a695f830184610a12565b92915050565b611a7880610a7c5f395ff3fe608060405234801561000f575f80fd5b5060043610610135575f3560e01c8063313ce567116100b657806391d148541161007a57806391d148541461035d57806395d89b411461038d578063a217fddf146103ab578063a9059cbb146103c9578063d547741f146103f9578063dd62ed3e1461041557610135565b8063313ce567146102a757806331e9e9c0146102c557806336568abe146102e15780636b2d95d4146102fd57806370a082311461032d57610135565b80631d4a8b2d116100fd5780631d4a8b2d146101f157806323b872dd1461020d578063248a9ca31461023d5780632f2ff15d1461026d5780632fe3abc71461028957610135565b806301ffc9a71461013957806306fdde0314610169578063095ea7b31461018757806317be3fa5146101b757806318160ddd146101d3575b5f80fd5b610153600480360381019061014e9190611420565b610445565b6040516101609190611465565b60405180910390f35b6101716104be565b60405161017e91906114ee565b60405180910390f35b6101a1600480360381019061019c919061159b565b61054e565b6040516101ae9190611465565b60405180910390f35b6101d160048036038101906101cc919061159b565b610570565b005b6101db610686565b6040516101e891906115e8565b60405180910390f35b61020b60048036038101906102069190611601565b61068f565b005b6102276004803603810190610222919061162c565b6106c9565b6040516102349190611465565b60405180910390f35b610257600480360381019061025291906116af565b6106f7565b60405161026491906116e9565b60405180910390f35b61028760048036038101906102829190611702565b610714565b005b610291610736565b60405161029e91906116e9565b60405180910390f35b6102af61075a565b6040516102bc919061175b565b60405180910390f35b6102df60048036038101906102da919061159b565b610762565b005b6102fb60048036038101906102f69190611702565b6108b2565b005b61031760048036038101906103129190611601565b61092d565b60405161032491906115e8565b60405180910390f35b61034760048036038101906103429190611601565b610973565b60405161035491906115e8565b60405180910390f35b61037760048036038101906103729190611702565b6109b8565b6040516103849190611465565b60405180910390f35b610395610a1c565b6040516103a291906114ee565b60405180910390f35b6103b3610aac565b6040516103c091906116e9565b60405180910390f35b6103e360048036038101906103de919061159b565b610ab2565b6040516103f09190611465565b60405180910390f35b610413600480360381019061040e9190611702565b610ad4565b005b61042f600480360381019061042a9190611774565b610af6565b60405161043c91906115e8565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104b757506104b682610b78565b5b9050919050565b6060600380546104cd906117df565b80601f01602080910402602001604051908101604052809291908181526020018280546104f9906117df565b80156105445780601f1061051b57610100808354040283529160200191610544565b820191905f5260205f20905b81548152906001019060200180831161052757829003601f168201915b5050505050905090565b5f80610558610be1565b9050610565818585610be8565b600191505092915050565b7fa0017d6d59dd228ae09b05f9ef75d0136b06c4284ca797e9b72b0a3a195e403f61059a81610bfa565b6105a383610973565b8211156105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc9061187f565b60405180910390fd5b6106358260065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610c0e90919063ffffffff16565b60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610681833084610c23565b505050565b5f600254905090565b5f801b61069b81610bfa565b6106c57fa0017d6d59dd228ae09b05f9ef75d0136b06c4284ca797e9b72b0a3a195e403f83610714565b5050565b5f806106d3610be1565b90506106e0858285610d13565b6106eb858585610c23565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b61071d826106f7565b61072681610bfa565b6107308383610da5565b50505050565b7fa0017d6d59dd228ae09b05f9ef75d0136b06c4284ca797e9b72b0a3a195e403f81565b5f6012905090565b7fa0017d6d59dd228ae09b05f9ef75d0136b06c4284ca797e9b72b0a3a195e403f61078c81610bfa565b5f60065f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905080831115610810576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108079061190d565b60405180910390fd5b6108608360065f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610e8f90919063ffffffff16565b60065f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055506108ac308585610c23565b50505050565b6108ba610be1565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461091e576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109288282610ea4565b505050565b5f60065f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b606060048054610a2b906117df565b80601f0160208091040260200160405190810160405280929190818152602001828054610a57906117df565b8015610aa25780601f10610a7957610100808354040283529160200191610aa2565b820191905f5260205f20905b815481529060010190602001808311610a8557829003601f168201915b5050505050905090565b5f801b81565b5f80610abc610be1565b9050610ac9818585610c23565b600191505092915050565b610add826106f7565b610ae681610bfa565b610af08383610ea4565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b610bf58383836001610f8e565b505050565b610c0b81610c06610be1565b61115d565b50565b5f8183610c1b9190611958565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c93575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c8a919061199a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d03575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610cfa919061199a565b60405180910390fd5b610d0e8383836111ae565b505050565b5f610d1e8484610af6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d9f5781811015610d90578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610d87939291906119b3565b60405180910390fd5b610d9e84848484035f610f8e565b5b50505050565b5f610db083836109b8565b610e8557600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610e22610be1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610e89565b5f90505b92915050565b5f8183610e9c91906119e8565b905092915050565b5f610eaf83836109b8565b15610f84575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610f21610be1565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610f88565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ffe575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ff5919061199a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106e575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611065919061199a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611157578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161114e91906115e8565b60405180910390a35b50505050565b61116782826109b8565b6111aa5780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016111a1929190611a1b565b60405180910390fd5b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036111fe578060025f8282546111f29190611958565b925050819055506112cc565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611287578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161127e939291906119b3565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611313578060025f828254039250508190555061135d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113ba91906115e8565b60405180910390a3505050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113ff816113cb565b8114611409575f80fd5b50565b5f8135905061141a816113f6565b92915050565b5f60208284031215611435576114346113c7565b5b5f6114428482850161140c565b91505092915050565b5f8115159050919050565b61145f8161144b565b82525050565b5f6020820190506114785f830184611456565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6114c08261147e565b6114ca8185611488565b93506114da818560208601611498565b6114e3816114a6565b840191505092915050565b5f6020820190508181035f83015261150681846114b6565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6115378261150e565b9050919050565b6115478161152d565b8114611551575f80fd5b50565b5f813590506115628161153e565b92915050565b5f819050919050565b61157a81611568565b8114611584575f80fd5b50565b5f8135905061159581611571565b92915050565b5f80604083850312156115b1576115b06113c7565b5b5f6115be85828601611554565b92505060206115cf85828601611587565b9150509250929050565b6115e281611568565b82525050565b5f6020820190506115fb5f8301846115d9565b92915050565b5f60208284031215611616576116156113c7565b5b5f61162384828501611554565b91505092915050565b5f805f60608486031215611643576116426113c7565b5b5f61165086828701611554565b935050602061166186828701611554565b925050604061167286828701611587565b9150509250925092565b5f819050919050565b61168e8161167c565b8114611698575f80fd5b50565b5f813590506116a981611685565b92915050565b5f602082840312156116c4576116c36113c7565b5b5f6116d18482850161169b565b91505092915050565b6116e38161167c565b82525050565b5f6020820190506116fc5f8301846116da565b92915050565b5f8060408385031215611718576117176113c7565b5b5f6117258582860161169b565b925050602061173685828601611554565b9150509250929050565b5f60ff82169050919050565b61175581611740565b82525050565b5f60208201905061176e5f83018461174c565b92915050565b5f806040838503121561178a576117896113c7565b5b5f61179785828601611554565b92505060206117a885828601611554565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806117f657607f821691505b602082108103611809576118086117b2565b5b50919050565b7f44414f546f6b656e3a2063616e6e6f74206c6f636b206d6f7265207468616e205f8201527f7468652062616c616e6365000000000000000000000000000000000000000000602082015250565b5f611869602b83611488565b91506118748261180f565b604082019050919050565b5f6020820190508181035f8301526118968161185d565b9050919050565b7f44414f546f6b656e3a2063616e6e6f7420756e6c6f636b206d6f726520746f6b5f8201527f656e73207468616e20617265206c6f636b656400000000000000000000000000602082015250565b5f6118f7603383611488565b91506119028261189d565b604082019050919050565b5f6020820190508181035f830152611924816118eb565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61196282611568565b915061196d83611568565b92508282019050808211156119855761198461192b565b5b92915050565b6119948161152d565b82525050565b5f6020820190506119ad5f83018461198b565b92915050565b5f6060820190506119c65f83018661198b565b6119d360208301856115d9565b6119e060408301846115d9565b949350505050565b5f6119f282611568565b91506119fd83611568565b9250828203905081811115611a1557611a1461192b565b5b92915050565b5f604082019050611a2e5f83018561198b565b611a3b60208301846116da565b939250505056fea26469706673582212207fd0f1d3f94716d2869e9ef8291d47e53845937e12e500af498a2471b773903964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x24F4 CODESIZE SUB DUP1 PUSH2 0x24F4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x5FF JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x88B JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x52 SWAP2 SWAP1 PUSH2 0x88B JUMP JUMPDEST POP POP POP PUSH2 0x65 CALLER DUP3 PUSH2 0x80 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x77 PUSH0 DUP1 SHL CALLER PUSH2 0x105 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0xA6F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF0 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7 SWAP2 SWAP1 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x101 PUSH0 DUP4 DUP4 PUSH2 0x1FB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x116 DUP4 DUP4 PUSH2 0x414 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x1F1 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x18E PUSH2 0x478 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1F5 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x24B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x9DF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x319 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2D4 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2CB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x360 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3AA JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x407 SWAP2 SWAP1 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x4DE DUP3 PUSH2 0x498 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4FD JUMPI PUSH2 0x4FC PUSH2 0x4A8 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x50F PUSH2 0x47F JUMP JUMPDEST SWAP1 POP PUSH2 0x51B DUP3 DUP3 PUSH2 0x4D5 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x53A JUMPI PUSH2 0x539 PUSH2 0x4A8 JUMP JUMPDEST JUMPDEST PUSH2 0x543 DUP3 PUSH2 0x498 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x570 PUSH2 0x56B DUP5 PUSH2 0x520 JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x58C JUMPI PUSH2 0x58B PUSH2 0x494 JUMP JUMPDEST JUMPDEST PUSH2 0x597 DUP5 DUP3 DUP6 PUSH2 0x550 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5B3 JUMPI PUSH2 0x5B2 PUSH2 0x490 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x5C3 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x55E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5DE DUP2 PUSH2 0x5CC JUMP JUMPDEST DUP2 EQ PUSH2 0x5E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F9 DUP2 PUSH2 0x5D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x616 JUMPI PUSH2 0x615 PUSH2 0x488 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x633 JUMPI PUSH2 0x632 PUSH2 0x48C JUMP JUMPDEST JUMPDEST PUSH2 0x63F DUP7 DUP3 DUP8 ADD PUSH2 0x59F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x660 JUMPI PUSH2 0x65F PUSH2 0x48C JUMP JUMPDEST JUMPDEST PUSH2 0x66C DUP7 DUP3 DUP8 ADD PUSH2 0x59F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x67D DUP7 DUP3 DUP8 ADD PUSH2 0x5EB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6E8 JUMPI PUSH2 0x6E7 PUSH2 0x691 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x74A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x70F JUMP JUMPDEST PUSH2 0x754 DUP7 DUP4 PUSH2 0x70F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x78F PUSH2 0x78A PUSH2 0x785 DUP5 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x76C JUMP JUMPDEST PUSH2 0x5CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7A8 DUP4 PUSH2 0x775 JUMP JUMPDEST PUSH2 0x7BC PUSH2 0x7B4 DUP3 PUSH2 0x796 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x71B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x7D0 PUSH2 0x7C4 JUMP JUMPDEST PUSH2 0x7DB DUP2 DUP5 DUP5 PUSH2 0x79F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7FE JUMPI PUSH2 0x7F3 PUSH0 DUP3 PUSH2 0x7C8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7E1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x843 JUMPI PUSH2 0x814 DUP2 PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x81D DUP5 PUSH2 0x700 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x82C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x840 PUSH2 0x838 DUP6 PUSH2 0x700 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x7E0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x863 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x848 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x87B DUP4 DUP4 PUSH2 0x854 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x894 DUP3 PUSH2 0x687 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8AD JUMPI PUSH2 0x8AC PUSH2 0x4A8 JUMP JUMPDEST JUMPDEST PUSH2 0x8B7 DUP3 SLOAD PUSH2 0x6BE JUMP JUMPDEST PUSH2 0x8C2 DUP3 DUP3 DUP6 PUSH2 0x802 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x8F3 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x8E1 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x8EB DUP6 DUP3 PUSH2 0x870 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x952 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x901 DUP7 PUSH2 0x6EE JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x928 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x903 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x945 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x941 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x854 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x983 DUP3 PUSH2 0x95A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x993 DUP2 PUSH2 0x979 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9AC PUSH0 DUP4 ADD DUP5 PUSH2 0x98A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9E9 DUP3 PUSH2 0x5CC JUMP JUMPDEST SWAP2 POP PUSH2 0x9F4 DUP4 PUSH2 0x5CC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA0C JUMPI PUSH2 0xA0B PUSH2 0x9B2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA1B DUP2 PUSH2 0x5CC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA34 PUSH0 DUP4 ADD DUP7 PUSH2 0x98A JUMP JUMPDEST PUSH2 0xA41 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA12 JUMP JUMPDEST PUSH2 0xA4E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA12 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA69 PUSH0 DUP4 ADD DUP5 PUSH2 0xA12 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A78 DUP1 PUSH2 0xA7C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x415 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x31E9E9C0 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x6B2D95D4 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x32D JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1D4A8B2D GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x1D4A8B2D EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x2FE3ABC7 EQ PUSH2 0x289 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x17BE3FA5 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x162C JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x395 PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B3 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x1774 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4B7 JUMPI POP PUSH2 0x4B6 DUP3 PUSH2 0xB78 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CD SWAP1 PUSH2 0x17DF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F9 SWAP1 PUSH2 0x17DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x544 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x544 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x527 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x558 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x565 DUP2 DUP6 DUP6 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F PUSH2 0x59A DUP2 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x5A3 DUP4 PUSH2 0x973 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP1 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x635 DUP3 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xC0E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x681 DUP4 ADDRESS DUP5 PUSH2 0xC23 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x69B DUP2 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x6C5 PUSH32 0xA0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F DUP4 PUSH2 0x714 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6D3 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E0 DUP6 DUP3 DUP6 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x6EB DUP6 DUP6 DUP6 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71D DUP3 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x726 DUP2 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x730 DUP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xA0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xA0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F PUSH2 0x78C DUP2 PUSH2 0xBFA JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x860 DUP4 PUSH1 0x6 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xE8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8AC ADDRESS DUP6 DUP6 PUSH2 0xC23 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8BA PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x928 DUP3 DUP3 PUSH2 0xEA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA2B SWAP1 PUSH2 0x17DF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA57 SWAP1 PUSH2 0x17DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA79 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA85 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xABC PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH2 0xAC9 DUP2 DUP6 DUP6 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADD DUP3 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0xAE6 DUP2 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0xAF0 DUP4 DUP4 PUSH2 0xEA4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBF5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC0B DUP2 PUSH2 0xC06 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x115D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xC1B SWAP2 SWAP1 PUSH2 0x1958 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD03 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD0E DUP4 DUP4 DUP4 PUSH2 0x11AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD1E DUP5 DUP5 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD9F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD90 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD87 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF8E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDB0 DUP4 DUP4 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0xE85 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE22 PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xE89 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xE9C SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEAF DUP4 DUP4 PUSH2 0x9B8 JUMP JUMPDEST ISZERO PUSH2 0xF84 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF21 PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xF88 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFFE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1065 SWAP2 SWAP1 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1157 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x114E SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1167 DUP3 DUP3 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x11AA JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11F2 SWAP2 SWAP1 PUSH2 0x1958 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12CC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1287 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1313 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x135D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13BA SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13FF DUP2 PUSH2 0x13CB JUMP JUMPDEST DUP2 EQ PUSH2 0x1409 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x141A DUP2 PUSH2 0x13F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1435 JUMPI PUSH2 0x1434 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1442 DUP5 DUP3 DUP6 ADD PUSH2 0x140C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145F DUP2 PUSH2 0x144B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1478 PUSH0 DUP4 ADD DUP5 PUSH2 0x1456 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14C0 DUP3 PUSH2 0x147E JUMP JUMPDEST PUSH2 0x14CA DUP2 DUP6 PUSH2 0x1488 JUMP JUMPDEST SWAP4 POP PUSH2 0x14DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x14E3 DUP2 PUSH2 0x14A6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1506 DUP2 DUP5 PUSH2 0x14B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1537 DUP3 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1547 DUP2 PUSH2 0x152D JUMP JUMPDEST DUP2 EQ PUSH2 0x1551 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1562 DUP2 PUSH2 0x153E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157A DUP2 PUSH2 0x1568 JUMP JUMPDEST DUP2 EQ PUSH2 0x1584 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1595 DUP2 PUSH2 0x1571 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B1 JUMPI PUSH2 0x15B0 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15BE DUP6 DUP3 DUP7 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15CF DUP6 DUP3 DUP7 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E2 DUP2 PUSH2 0x1568 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15FB PUSH0 DUP4 ADD DUP5 PUSH2 0x15D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1616 JUMPI PUSH2 0x1615 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1623 DUP5 DUP3 DUP6 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1643 JUMPI PUSH2 0x1642 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1650 DUP7 DUP3 DUP8 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1661 DUP7 DUP3 DUP8 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1672 DUP7 DUP3 DUP8 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168E DUP2 PUSH2 0x167C JUMP JUMPDEST DUP2 EQ PUSH2 0x1698 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A9 DUP2 PUSH2 0x1685 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C4 JUMPI PUSH2 0x16C3 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D1 DUP5 DUP3 DUP6 ADD PUSH2 0x169B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E3 DUP2 PUSH2 0x167C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16FC PUSH0 DUP4 ADD DUP5 PUSH2 0x16DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1725 DUP6 DUP3 DUP7 ADD PUSH2 0x169B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1736 DUP6 DUP3 DUP7 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1755 DUP2 PUSH2 0x1740 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176E PUSH0 DUP4 ADD DUP5 PUSH2 0x174C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1797 DUP6 DUP3 DUP7 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17A8 DUP6 DUP3 DUP7 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1809 JUMPI PUSH2 0x1808 PUSH2 0x17B2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x44414F546F6B656E3A2063616E6E6F74206C6F636B206D6F7265207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468652062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1869 PUSH1 0x2B DUP4 PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP PUSH2 0x1874 DUP3 PUSH2 0x180F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1896 DUP2 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x44414F546F6B656E3A2063616E6E6F7420756E6C6F636B206D6F726520746F6B PUSH0 DUP3 ADD MSTORE PUSH32 0x656E73207468616E20617265206C6F636B656400000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18F7 PUSH1 0x33 DUP4 PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP PUSH2 0x1902 DUP3 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1924 DUP2 PUSH2 0x18EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1962 DUP3 PUSH2 0x1568 JUMP JUMPDEST SWAP2 POP PUSH2 0x196D DUP4 PUSH2 0x1568 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1985 JUMPI PUSH2 0x1984 PUSH2 0x192B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1994 DUP2 PUSH2 0x152D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19AD PUSH0 DUP4 ADD DUP5 PUSH2 0x198B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19C6 PUSH0 DUP4 ADD DUP7 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x19D3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x19E0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19F2 DUP3 PUSH2 0x1568 JUMP JUMPDEST SWAP2 POP PUSH2 0x19FD DUP4 PUSH2 0x1568 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A15 JUMPI PUSH2 0x1A14 PUSH2 0x192B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A2E PUSH0 DUP4 ADD DUP6 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x1A3B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xD0F1D3F94716D2869E9EF8291D47E53845937E12E500AF498A2471B773903964 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "231:1391:10:-:0;;;489:206;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;580:4;586:6;1970:5:3;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;604:32:10::1;610:10;622:13;604:5;;;:32;;:::i;:::-;646:42;2232:4:0;657:18:10::0;::::1;677:10;646;;;:42;;:::i;:::-;;489:206:::0;;;231:1391;;7721:208:3;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:77::-;2607:7;2636:5;2625:16;;2570:77;;;:::o;2653:122::-;2726:24;2744:5;2726:24;:::i;:::-;2719:5;2716:35;2706:63;;2765:1;2762;2755:12;2706:63;2653:122;:::o;2781:143::-;2838:5;2869:6;2863:13;2854:22;;2885:33;2912:5;2885:33;:::i;:::-;2781:143;;;;:::o;2930:1009::-;3038:6;3046;3054;3103:2;3091:9;3082:7;3078:23;3074:32;3071:119;;;3109:79;;:::i;:::-;3071:119;3250:1;3239:9;3235:17;3229:24;3280:18;3272:6;3269:30;3266:117;;;3302:79;;:::i;:::-;3266:117;3407:74;3473:7;3464:6;3453:9;3449:22;3407:74;:::i;:::-;3397:84;;3200:291;3551:2;3540:9;3536:18;3530:25;3582:18;3574:6;3571:30;3568:117;;;3604:79;;:::i;:::-;3568:117;3709:74;3775:7;3766:6;3755:9;3751:22;3709:74;:::i;:::-;3699:84;;3501:292;3832:2;3858:64;3914:7;3905:6;3894:9;3890:22;3858:64;:::i;:::-;3848:74;;3803:129;2930:1009;;;;;:::o;3945:99::-;3997:6;4031:5;4025:12;4015:22;;3945:99;;;:::o;4050:180::-;4098:77;4095:1;4088:88;4195:4;4192:1;4185:15;4219:4;4216:1;4209:15;4236:320;4280:6;4317:1;4311:4;4307:12;4297:22;;4364:1;4358:4;4354:12;4385:18;4375:81;;4441:4;4433:6;4429:17;4419:27;;4375:81;4503:2;4495:6;4492:14;4472:18;4469:38;4466:84;;4522:18;;:::i;:::-;4466:84;4287:269;4236:320;;;:::o;4562:141::-;4611:4;4634:3;4626:11;;4657:3;4654:1;4647:14;4691:4;4688:1;4678:18;4670:26;;4562:141;;;:::o;4709:93::-;4746:6;4793:2;4788;4781:5;4777:14;4773:23;4763:33;;4709:93;;;:::o;4808:107::-;4852:8;4902:5;4896:4;4892:16;4871:37;;4808:107;;;;:::o;4921:393::-;4990:6;5040:1;5028:10;5024:18;5063:97;5093:66;5082:9;5063:97;:::i;:::-;5181:39;5211:8;5200:9;5181:39;:::i;:::-;5169:51;;5253:4;5249:9;5242:5;5238:21;5229:30;;5302:4;5292:8;5288:19;5281:5;5278:30;5268:40;;4997:317;;4921:393;;;;;:::o;5320:60::-;5348:3;5369:5;5362:12;;5320:60;;;:::o;5386:142::-;5436:9;5469:53;5487:34;5496:24;5514:5;5496:24;:::i;:::-;5487:34;:::i;:::-;5469:53;:::i;:::-;5456:66;;5386:142;;;:::o;5534:75::-;5577:3;5598:5;5591:12;;5534:75;;;:::o;5615:269::-;5725:39;5756:7;5725:39;:::i;:::-;5786:91;5835:41;5859:16;5835:41;:::i;:::-;5827:6;5820:4;5814:11;5786:91;:::i;:::-;5780:4;5773:105;5691:193;5615:269;;;:::o;5890:73::-;5935:3;5890:73;:::o;5969:189::-;6046:32;;:::i;:::-;6087:65;6145:6;6137;6131:4;6087:65;:::i;:::-;6022:136;5969:189;;:::o;6164:186::-;6224:120;6241:3;6234:5;6231:14;6224:120;;;6295:39;6332:1;6325:5;6295:39;:::i;:::-;6268:1;6261:5;6257:13;6248:22;;6224:120;;;6164:186;;:::o;6356:543::-;6457:2;6452:3;6449:11;6446:446;;;6491:38;6523:5;6491:38;:::i;:::-;6575:29;6593:10;6575:29;:::i;:::-;6565:8;6561:44;6758:2;6746:10;6743:18;6740:49;;;6779:8;6764:23;;6740:49;6802:80;6858:22;6876:3;6858:22;:::i;:::-;6848:8;6844:37;6831:11;6802:80;:::i;:::-;6461:431;;6446:446;6356:543;;;:::o;6905:117::-;6959:8;7009:5;7003:4;6999:16;6978:37;;6905:117;;;;:::o;7028:169::-;7072:6;7105:51;7153:1;7149:6;7141:5;7138:1;7134:13;7105:51;:::i;:::-;7101:56;7186:4;7180;7176:15;7166:25;;7079:118;7028:169;;;;:::o;7202:295::-;7278:4;7424:29;7449:3;7443:4;7424:29;:::i;:::-;7416:37;;7486:3;7483:1;7479:11;7473:4;7470:21;7462:29;;7202:295;;;;:::o;7502:1395::-;7619:37;7652:3;7619:37;:::i;:::-;7721:18;7713:6;7710:30;7707:56;;;7743:18;;:::i;:::-;7707:56;7787:38;7819:4;7813:11;7787:38;:::i;:::-;7872:67;7932:6;7924;7918:4;7872:67;:::i;:::-;7966:1;7990:4;7977:17;;8022:2;8014:6;8011:14;8039:1;8034:618;;;;8696:1;8713:6;8710:77;;;8762:9;8757:3;8753:19;8747:26;8738:35;;8710:77;8813:67;8873:6;8866:5;8813:67;:::i;:::-;8807:4;8800:81;8669:222;8004:887;;8034:618;8086:4;8082:9;8074:6;8070:22;8120:37;8152:4;8120:37;:::i;:::-;8179:1;8193:208;8207:7;8204:1;8201:14;8193:208;;;8286:9;8281:3;8277:19;8271:26;8263:6;8256:42;8337:1;8329:6;8325:14;8315:24;;8384:2;8373:9;8369:18;8356:31;;8230:4;8227:1;8223:12;8218:17;;8193:208;;;8429:6;8420:7;8417:19;8414:179;;;8487:9;8482:3;8478:19;8472:26;8530:48;8572:4;8564:6;8560:17;8549:9;8530:48;:::i;:::-;8522:6;8515:64;8437:156;8414:179;8639:1;8635;8627:6;8623:14;8619:22;8613:4;8606:36;8041:611;;;8004:887;;7594:1303;;;7502:1395;;:::o;8903:126::-;8940:7;8980:42;8973:5;8969:54;8958:65;;8903:126;;;:::o;9035:96::-;9072:7;9101:24;9119:5;9101:24;:::i;:::-;9090:35;;9035:96;;;:::o;9137:118::-;9224:24;9242:5;9224:24;:::i;:::-;9219:3;9212:37;9137:118;;:::o;9261:222::-;9354:4;9392:2;9381:9;9377:18;9369:26;;9405:71;9473:1;9462:9;9458:17;9449:6;9405:71;:::i;:::-;9261:222;;;;:::o;9489:180::-;9537:77;9534:1;9527:88;9634:4;9631:1;9624:15;9658:4;9655:1;9648:15;9675:191;9715:3;9734:20;9752:1;9734:20;:::i;:::-;9729:25;;9768:20;9786:1;9768:20;:::i;:::-;9763:25;;9811:1;9808;9804:9;9797:16;;9832:3;9829:1;9826:10;9823:36;;;9839:18;;:::i;:::-;9823:36;9675:191;;;;:::o;9872:118::-;9959:24;9977:5;9959:24;:::i;:::-;9954:3;9947:37;9872:118;;:::o;9996:442::-;10145:4;10183:2;10172:9;10168:18;10160:26;;10196:71;10264:1;10253:9;10249:17;10240:6;10196:71;:::i;:::-;10277:72;10345:2;10334:9;10330:18;10321:6;10277:72;:::i;:::-;10359;10427:2;10416:9;10412:18;10403:6;10359:72;:::i;:::-;9996:442;;;;;;:::o;10444:222::-;10537:4;10575:2;10564:9;10560:18;10552:26;;10588:71;10656:1;10645:9;10641:17;10632:6;10588:71;:::i;:::-;10444:222;;;;:::o;231:1391:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CCUS_ROLE_1529": {
									"entryPoint": 1846,
									"id": 1529,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 2732,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_921": {
									"entryPoint": 3048,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_981": {
									"entryPoint": 3982,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 4445,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 3066,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 3493,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1146": {
									"entryPoint": 3041,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 3748,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1029": {
									"entryPoint": 3347,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_760": {
									"entryPoint": 3107,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 4526,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1376": {
									"entryPoint": 3086,
									"id": 1376,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_657": {
									"entryPoint": 2806,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_681": {
									"entryPoint": 1358,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_616": {
									"entryPoint": 2419,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_594": {
									"entryPoint": 1882,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLockedTokens_1655": {
									"entryPoint": 2349,
									"id": 1655,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1783,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantCCUSRole_1669": {
									"entryPoint": 1679,
									"id": 1669,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@grantRole_147": {
									"entryPoint": 1812,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 2488,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lockToken_1599": {
									"entryPoint": 1392,
									"id": 1599,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_576": {
									"entryPoint": 1214,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 2226,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2772,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_1391": {
									"entryPoint": 3727,
									"id": 1391,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@supportsInterface_1187": {
									"entryPoint": 2936,
									"id": 1187,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1093,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_585": {
									"entryPoint": 2588,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_603": {
									"entryPoint": 1670,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_713": {
									"entryPoint": 1737,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_640": {
									"entryPoint": 2738,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unlockToken_1643": {
									"entryPoint": 1890,
									"id": 1643,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5787,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 5132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6004,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5152,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6554,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 6683,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6579,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5979,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5195,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 5067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5390,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5272,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6443,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5063,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894": {
									"entryPoint": 6301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07": {
									"entryPoint": 6159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 5110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:12145:11",
										"nodeType": "YulBlock",
										"src": "0:12145:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "378:105:11",
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nativeSrc": "388:89:11",
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:11",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nativeSrc": "399:78:11",
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:11",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:11",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nativeSrc": "531:78:11",
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:11",
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:11",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:11",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nativeSrc": "589:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nativeSrc": "589:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:11",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nativeSrc": "561:23:11",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nativeSrc": "551:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nativeSrc": "544:42:11",
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nativeSrc": "541:62:11",
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:11",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nativeSrc": "666:86:11",
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nativeSrc": "676:29:11",
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nativeSrc": "685:20:11",
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:11",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nativeSrc": "714:32:11",
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nativeSrc": "714:32:11",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:11",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:11",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:11",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nativeSrc": "823:262:11",
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:11",
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nativeSrc": "871:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nativeSrc": "871:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nativeSrc": "840:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:11",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nativeSrc": "836:32:11",
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nativeSrc": "833:119:11",
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nativeSrc": "962:116:11",
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nativeSrc": "977:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:11",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:11",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:11",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nativeSrc": "1036:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:11",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nativeSrc": "1016:52:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:11",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:11",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:11",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nativeSrc": "1133:48:11",
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nativeSrc": "1143:32:11",
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nativeSrc": "1161:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nativeSrc": "1154:21:11",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:11",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:11",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nativeSrc": "1246:50:11",
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nativeSrc": "1268:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nativeSrc": "1256:34:11",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nativeSrc": "1256:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:11",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:11",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nativeSrc": "1394:118:11",
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nativeSrc": "1404:26:11",
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nativeSrc": "1412:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nativeSrc": "1487:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nativeSrc": "1440:65:11",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nativeSrc": "1440:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:11",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:11",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:11",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nativeSrc": "1577:40:11",
													"nodeType": "YulBlock",
													"src": "1577:40:11",
													"statements": [
														{
															"nativeSrc": "1588:22:11",
															"nodeType": "YulAssignment",
															"src": "1588:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:11"
																},
																"nativeSrc": "1598:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:11",
														"nodeType": "YulTypedName",
														"src": "1560:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:11",
														"nodeType": "YulTypedName",
														"src": "1570:6:11",
														"type": ""
													}
												],
												"src": "1518:99:11"
											},
											{
												"body": {
													"nativeSrc": "1719:73:11",
													"nodeType": "YulBlock",
													"src": "1719:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:11"
																},
																"nativeSrc": "1729:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:11"
															},
															"nativeSrc": "1729:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:11"
														},
														{
															"nativeSrc": "1757:29:11",
															"nodeType": "YulAssignment",
															"src": "1757:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:11",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:11"
																},
																"nativeSrc": "1772:14:11",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:11",
														"nodeType": "YulTypedName",
														"src": "1691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:11",
														"nodeType": "YulTypedName",
														"src": "1696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:11",
														"nodeType": "YulTypedName",
														"src": "1707:11:11",
														"type": ""
													}
												],
												"src": "1623:169:11"
											},
											{
												"body": {
													"nativeSrc": "1860:77:11",
													"nodeType": "YulBlock",
													"src": "1860:77:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:11"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:11"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:11"
																},
																"nativeSrc": "1871:23:11",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:11"
															},
															"nativeSrc": "1871:23:11",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:11"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:11"
																		},
																		"nativeSrc": "1910:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:11"
																},
																"nativeSrc": "1903:27:11",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:11"
															},
															"nativeSrc": "1903:27:11",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:11",
														"nodeType": "YulTypedName",
														"src": "1842:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:11",
														"nodeType": "YulTypedName",
														"src": "1847:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:11",
														"nodeType": "YulTypedName",
														"src": "1852:6:11",
														"type": ""
													}
												],
												"src": "1798:139:11"
											},
											{
												"body": {
													"nativeSrc": "1991:54:11",
													"nodeType": "YulBlock",
													"src": "1991:54:11",
													"statements": [
														{
															"nativeSrc": "2001:38:11",
															"nodeType": "YulAssignment",
															"src": "2001:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:11"
																		},
																		"nativeSrc": "2015:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:11",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:11"
																		},
																		"nativeSrc": "2031:7:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:11"
																},
																"nativeSrc": "2011:28:11",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:11",
														"nodeType": "YulTypedName",
														"src": "1974:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:11",
														"nodeType": "YulTypedName",
														"src": "1984:6:11",
														"type": ""
													}
												],
												"src": "1943:102:11"
											},
											{
												"body": {
													"nativeSrc": "2143:285:11",
													"nodeType": "YulBlock",
													"src": "2143:285:11",
													"statements": [
														{
															"nativeSrc": "2153:53:11",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:11",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:11"
																},
																"nativeSrc": "2167:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:11",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:11",
															"nodeType": "YulAssignment",
															"src": "2215:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:11"
																},
																"nativeSrc": "2222:71:11",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:11",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:11"
																		},
																		"nativeSrc": "2337:16:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:11"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:11",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:11"
																},
																"nativeSrc": "2302:65:11",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:11"
															},
															"nativeSrc": "2302:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:11"
														},
														{
															"nativeSrc": "2376:46:11",
															"nodeType": "YulAssignment",
															"src": "2376:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:11",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:11"
																		},
																		"nativeSrc": "2392:29:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:11"
																},
																"nativeSrc": "2383:39:11",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:11",
														"nodeType": "YulTypedName",
														"src": "2124:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:11",
														"nodeType": "YulTypedName",
														"src": "2131:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:11",
														"nodeType": "YulTypedName",
														"src": "2139:3:11",
														"type": ""
													}
												],
												"src": "2051:377:11"
											},
											{
												"body": {
													"nativeSrc": "2552:195:11",
													"nodeType": "YulBlock",
													"src": "2552:195:11",
													"statements": [
														{
															"nativeSrc": "2562:26:11",
															"nodeType": "YulAssignment",
															"src": "2562:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:11"
																},
																"nativeSrc": "2570:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:11"
																		},
																		"nativeSrc": "2605:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:11"
																		},
																		"nativeSrc": "2624:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:11"
																},
																"nativeSrc": "2598:47:11",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:11"
															},
															"nativeSrc": "2598:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:11"
														},
														{
															"nativeSrc": "2654:86:11",
															"nodeType": "YulAssignment",
															"src": "2654:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:11"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:11",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:11"
																},
																"nativeSrc": "2662:78:11",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:11",
														"nodeType": "YulTypedName",
														"src": "2524:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:11",
														"nodeType": "YulTypedName",
														"src": "2536:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:11",
														"nodeType": "YulTypedName",
														"src": "2547:4:11",
														"type": ""
													}
												],
												"src": "2434:313:11"
											},
											{
												"body": {
													"nativeSrc": "2798:81:11",
													"nodeType": "YulBlock",
													"src": "2798:81:11",
													"statements": [
														{
															"nativeSrc": "2808:65:11",
															"nodeType": "YulAssignment",
															"src": "2808:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2823:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2823:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:42:11",
																		"nodeType": "YulLiteral",
																		"src": "2830:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2819:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2819:3:11"
																},
																"nativeSrc": "2819:54:11",
																"nodeType": "YulFunctionCall",
																"src": "2819:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2753:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:11",
														"nodeType": "YulTypedName",
														"src": "2780:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:11",
														"nodeType": "YulTypedName",
														"src": "2790:7:11",
														"type": ""
													}
												],
												"src": "2753:126:11"
											},
											{
												"body": {
													"nativeSrc": "2930:51:11",
													"nodeType": "YulBlock",
													"src": "2930:51:11",
													"statements": [
														{
															"nativeSrc": "2940:35:11",
															"nodeType": "YulAssignment",
															"src": "2940:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2969:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2969:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2951:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2951:17:11"
																},
																"nativeSrc": "2951:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2951:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2940:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2885:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2912:5:11",
														"nodeType": "YulTypedName",
														"src": "2912:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2922:7:11",
														"nodeType": "YulTypedName",
														"src": "2922:7:11",
														"type": ""
													}
												],
												"src": "2885:96:11"
											},
											{
												"body": {
													"nativeSrc": "3030:79:11",
													"nodeType": "YulBlock",
													"src": "3030:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3087:16:11",
																"nodeType": "YulBlock",
																"src": "3087:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3096:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3096:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3099:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3099:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3089:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3089:6:11"
																			},
																			"nativeSrc": "3089:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3089:12:11"
																		},
																		"nativeSrc": "3089:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3089:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3053:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3053:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3078:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3078:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3060:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3060:17:11"
																				},
																				"nativeSrc": "3060:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3060:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3050:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3050:2:11"
																		},
																		"nativeSrc": "3050:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3050:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3043:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3043:6:11"
																},
																"nativeSrc": "3043:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3043:43:11"
															},
															"nativeSrc": "3040:63:11",
															"nodeType": "YulIf",
															"src": "3040:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2987:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3023:5:11",
														"nodeType": "YulTypedName",
														"src": "3023:5:11",
														"type": ""
													}
												],
												"src": "2987:122:11"
											},
											{
												"body": {
													"nativeSrc": "3167:87:11",
													"nodeType": "YulBlock",
													"src": "3167:87:11",
													"statements": [
														{
															"nativeSrc": "3177:29:11",
															"nodeType": "YulAssignment",
															"src": "3177:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3199:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3186:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3186:12:11"
																},
																"nativeSrc": "3186:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3186:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3177:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3177:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3242:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3242:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3215:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3215:26:11"
																},
																"nativeSrc": "3215:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3215:33:11"
															},
															"nativeSrc": "3215:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3215:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3115:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3145:6:11",
														"nodeType": "YulTypedName",
														"src": "3145:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3153:3:11",
														"nodeType": "YulTypedName",
														"src": "3153:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3161:5:11",
														"nodeType": "YulTypedName",
														"src": "3161:5:11",
														"type": ""
													}
												],
												"src": "3115:139:11"
											},
											{
												"body": {
													"nativeSrc": "3305:32:11",
													"nodeType": "YulBlock",
													"src": "3305:32:11",
													"statements": [
														{
															"nativeSrc": "3315:16:11",
															"nodeType": "YulAssignment",
															"src": "3315:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "3326:5:11",
																"nodeType": "YulIdentifier",
																"src": "3326:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3315:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "3315:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3260:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3287:5:11",
														"nodeType": "YulTypedName",
														"src": "3287:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3297:7:11",
														"nodeType": "YulTypedName",
														"src": "3297:7:11",
														"type": ""
													}
												],
												"src": "3260:77:11"
											},
											{
												"body": {
													"nativeSrc": "3386:79:11",
													"nodeType": "YulBlock",
													"src": "3386:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:16:11",
																"nodeType": "YulBlock",
																"src": "3443:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3452:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3452:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3455:1:11",
																					"nodeType": "YulLiteral",
																					"src": "3455:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3445:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "3445:6:11"
																			},
																			"nativeSrc": "3445:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:12:11"
																		},
																		"nativeSrc": "3445:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3409:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3409:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3434:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "3434:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3416:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "3416:17:11"
																				},
																				"nativeSrc": "3416:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3416:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3406:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "3406:2:11"
																		},
																		"nativeSrc": "3406:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3399:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3399:6:11"
																},
																"nativeSrc": "3399:43:11",
																"nodeType": "YulFunctionCall",
																"src": "3399:43:11"
															},
															"nativeSrc": "3396:63:11",
															"nodeType": "YulIf",
															"src": "3396:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3343:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3379:5:11",
														"nodeType": "YulTypedName",
														"src": "3379:5:11",
														"type": ""
													}
												],
												"src": "3343:122:11"
											},
											{
												"body": {
													"nativeSrc": "3523:87:11",
													"nodeType": "YulBlock",
													"src": "3523:87:11",
													"statements": [
														{
															"nativeSrc": "3533:29:11",
															"nodeType": "YulAssignment",
															"src": "3533:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3555:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3555:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3542:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3542:12:11"
																},
																"nativeSrc": "3542:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3542:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3533:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3533:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3598:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3598:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3571:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:26:11"
																},
																"nativeSrc": "3571:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3571:33:11"
															},
															"nativeSrc": "3571:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3571:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3471:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3501:6:11",
														"nodeType": "YulTypedName",
														"src": "3501:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3509:3:11",
														"nodeType": "YulTypedName",
														"src": "3509:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3517:5:11",
														"nodeType": "YulTypedName",
														"src": "3517:5:11",
														"type": ""
													}
												],
												"src": "3471:139:11"
											},
											{
												"body": {
													"nativeSrc": "3699:391:11",
													"nodeType": "YulBlock",
													"src": "3699:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3745:83:11",
																"nodeType": "YulBlock",
																"src": "3745:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3747:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3747:77:11"
																			},
																			"nativeSrc": "3747:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3747:79:11"
																		},
																		"nativeSrc": "3747:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3747:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3720:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3720:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3729:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3729:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3716:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3716:3:11"
																		},
																		"nativeSrc": "3716:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3716:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3741:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3741:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3712:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:11"
																},
																"nativeSrc": "3712:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3712:32:11"
															},
															"nativeSrc": "3709:119:11",
															"nodeType": "YulIf",
															"src": "3709:119:11"
														},
														{
															"nativeSrc": "3838:117:11",
															"nodeType": "YulBlock",
															"src": "3838:117:11",
															"statements": [
																{
																	"nativeSrc": "3853:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3853:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3867:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3867:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3857:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3857:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3882:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3882:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3917:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3917:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3928:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3928:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3913:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3913:3:11"
																				},
																				"nativeSrc": "3913:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3913:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3937:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3937:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3892:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3892:20:11"
																		},
																		"nativeSrc": "3892:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3892:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3882:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3882:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3965:118:11",
															"nodeType": "YulBlock",
															"src": "3965:118:11",
															"statements": [
																{
																	"nativeSrc": "3980:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3980:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3994:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3994:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3984:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3984:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4010:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4010:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4045:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4045:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4056:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4056:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4041:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4041:3:11"
																				},
																				"nativeSrc": "4041:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4041:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4065:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4065:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4020:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4020:20:11"
																		},
																		"nativeSrc": "4020:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4020:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4010:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4010:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3616:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3661:9:11",
														"nodeType": "YulTypedName",
														"src": "3661:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3672:7:11",
														"nodeType": "YulTypedName",
														"src": "3672:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3684:6:11",
														"nodeType": "YulTypedName",
														"src": "3684:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3692:6:11",
														"nodeType": "YulTypedName",
														"src": "3692:6:11",
														"type": ""
													}
												],
												"src": "3616:474:11"
											},
											{
												"body": {
													"nativeSrc": "4161:53:11",
													"nodeType": "YulBlock",
													"src": "4161:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4178:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4178:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4201:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4201:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4183:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "4183:17:11"
																		},
																		"nativeSrc": "4183:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4171:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4171:6:11"
																},
																"nativeSrc": "4171:37:11",
																"nodeType": "YulFunctionCall",
																"src": "4171:37:11"
															},
															"nativeSrc": "4171:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "4171:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4096:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4149:5:11",
														"nodeType": "YulTypedName",
														"src": "4149:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4156:3:11",
														"nodeType": "YulTypedName",
														"src": "4156:3:11",
														"type": ""
													}
												],
												"src": "4096:118:11"
											},
											{
												"body": {
													"nativeSrc": "4318:124:11",
													"nodeType": "YulBlock",
													"src": "4318:124:11",
													"statements": [
														{
															"nativeSrc": "4328:26:11",
															"nodeType": "YulAssignment",
															"src": "4328:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4340:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4340:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4351:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4351:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4336:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4336:3:11"
																},
																"nativeSrc": "4336:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4336:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4328:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4328:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4408:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4408:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4421:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4421:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4432:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4432:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4417:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4417:3:11"
																		},
																		"nativeSrc": "4417:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4417:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4364:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4364:43:11"
																},
																"nativeSrc": "4364:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4364:71:11"
															},
															"nativeSrc": "4364:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4364:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4220:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4290:9:11",
														"nodeType": "YulTypedName",
														"src": "4290:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4302:6:11",
														"nodeType": "YulTypedName",
														"src": "4302:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4313:4:11",
														"nodeType": "YulTypedName",
														"src": "4313:4:11",
														"type": ""
													}
												],
												"src": "4220:222:11"
											},
											{
												"body": {
													"nativeSrc": "4514:263:11",
													"nodeType": "YulBlock",
													"src": "4514:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4560:83:11",
																"nodeType": "YulBlock",
																"src": "4560:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4562:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4562:77:11"
																			},
																			"nativeSrc": "4562:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4562:79:11"
																		},
																		"nativeSrc": "4562:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4562:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4535:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4535:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4544:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4544:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4531:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4531:3:11"
																		},
																		"nativeSrc": "4531:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4531:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4556:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4556:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4527:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4527:3:11"
																},
																"nativeSrc": "4527:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4527:32:11"
															},
															"nativeSrc": "4524:119:11",
															"nodeType": "YulIf",
															"src": "4524:119:11"
														},
														{
															"nativeSrc": "4653:117:11",
															"nodeType": "YulBlock",
															"src": "4653:117:11",
															"statements": [
																{
																	"nativeSrc": "4668:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4668:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4682:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4682:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4672:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4672:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:11",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:11"
																				},
																				"nativeSrc": "4728:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4707:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:11"
																		},
																		"nativeSrc": "4707:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4697:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4448:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4484:9:11",
														"nodeType": "YulTypedName",
														"src": "4484:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4495:7:11",
														"nodeType": "YulTypedName",
														"src": "4495:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4507:6:11",
														"nodeType": "YulTypedName",
														"src": "4507:6:11",
														"type": ""
													}
												],
												"src": "4448:329:11"
											},
											{
												"body": {
													"nativeSrc": "4883:519:11",
													"nodeType": "YulBlock",
													"src": "4883:519:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "4929:83:11",
																"nodeType": "YulBlock",
																"src": "4929:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4931:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "4931:77:11"
																			},
																			"nativeSrc": "4931:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:79:11"
																		},
																		"nativeSrc": "4931:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "4931:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4904:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4904:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4913:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4913:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4900:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4900:3:11"
																		},
																		"nativeSrc": "4900:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4900:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4925:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4896:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4896:3:11"
																},
																"nativeSrc": "4896:32:11",
																"nodeType": "YulFunctionCall",
																"src": "4896:32:11"
															},
															"nativeSrc": "4893:119:11",
															"nodeType": "YulIf",
															"src": "4893:119:11"
														},
														{
															"nativeSrc": "5022:117:11",
															"nodeType": "YulBlock",
															"src": "5022:117:11",
															"statements": [
																{
																	"nativeSrc": "5037:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5037:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5051:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5051:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5041:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5041:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5066:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5066:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5101:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5101:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5112:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5112:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5097:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5097:3:11"
																				},
																				"nativeSrc": "5097:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5097:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5121:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5121:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5076:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5076:20:11"
																		},
																		"nativeSrc": "5076:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5076:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5066:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5066:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5149:118:11",
															"nodeType": "YulBlock",
															"src": "5149:118:11",
															"statements": [
																{
																	"nativeSrc": "5164:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5178:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5178:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5168:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5168:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5194:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5194:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5229:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5229:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5240:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5240:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5225:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5225:3:11"
																				},
																				"nativeSrc": "5225:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5225:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5249:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5249:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5204:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5204:20:11"
																		},
																		"nativeSrc": "5204:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5204:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5194:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5194:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5277:118:11",
															"nodeType": "YulBlock",
															"src": "5277:118:11",
															"statements": [
																{
																	"nativeSrc": "5292:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5292:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5306:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5306:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5296:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5296:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5322:63:11",
																	"nodeType": "YulAssignment",
																	"src": "5322:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5357:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "5357:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5368:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "5368:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5353:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "5353:3:11"
																				},
																				"nativeSrc": "5353:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5353:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5377:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5377:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5332:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "5332:20:11"
																		},
																		"nativeSrc": "5332:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5332:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5322:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5322:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4783:619:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4837:9:11",
														"nodeType": "YulTypedName",
														"src": "4837:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4848:7:11",
														"nodeType": "YulTypedName",
														"src": "4848:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4860:6:11",
														"nodeType": "YulTypedName",
														"src": "4860:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4868:6:11",
														"nodeType": "YulTypedName",
														"src": "4868:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4876:6:11",
														"nodeType": "YulTypedName",
														"src": "4876:6:11",
														"type": ""
													}
												],
												"src": "4783:619:11"
											},
											{
												"body": {
													"nativeSrc": "5453:32:11",
													"nodeType": "YulBlock",
													"src": "5453:32:11",
													"statements": [
														{
															"nativeSrc": "5463:16:11",
															"nodeType": "YulAssignment",
															"src": "5463:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "5474:5:11",
																"nodeType": "YulIdentifier",
																"src": "5474:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5463:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5463:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5408:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5435:5:11",
														"nodeType": "YulTypedName",
														"src": "5435:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5445:7:11",
														"nodeType": "YulTypedName",
														"src": "5445:7:11",
														"type": ""
													}
												],
												"src": "5408:77:11"
											},
											{
												"body": {
													"nativeSrc": "5534:79:11",
													"nodeType": "YulBlock",
													"src": "5534:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5591:16:11",
																"nodeType": "YulBlock",
																"src": "5591:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5600:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5600:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5603:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5603:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5593:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5593:6:11"
																			},
																			"nativeSrc": "5593:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5593:12:11"
																		},
																		"nativeSrc": "5593:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5593:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5557:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5557:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5582:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5582:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5564:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "5564:17:11"
																				},
																				"nativeSrc": "5564:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5564:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5554:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5554:2:11"
																		},
																		"nativeSrc": "5554:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5554:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5547:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5547:6:11"
																},
																"nativeSrc": "5547:43:11",
																"nodeType": "YulFunctionCall",
																"src": "5547:43:11"
															},
															"nativeSrc": "5544:63:11",
															"nodeType": "YulIf",
															"src": "5544:63:11"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5491:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5527:5:11",
														"nodeType": "YulTypedName",
														"src": "5527:5:11",
														"type": ""
													}
												],
												"src": "5491:122:11"
											},
											{
												"body": {
													"nativeSrc": "5671:87:11",
													"nodeType": "YulBlock",
													"src": "5671:87:11",
													"statements": [
														{
															"nativeSrc": "5681:29:11",
															"nodeType": "YulAssignment",
															"src": "5681:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5703:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5703:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5690:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "5690:12:11"
																},
																"nativeSrc": "5690:20:11",
																"nodeType": "YulFunctionCall",
																"src": "5690:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5681:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5681:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5746:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5746:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5719:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "5719:26:11"
																},
																"nativeSrc": "5719:33:11",
																"nodeType": "YulFunctionCall",
																"src": "5719:33:11"
															},
															"nativeSrc": "5719:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "5719:33:11"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5619:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5649:6:11",
														"nodeType": "YulTypedName",
														"src": "5649:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5657:3:11",
														"nodeType": "YulTypedName",
														"src": "5657:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5665:5:11",
														"nodeType": "YulTypedName",
														"src": "5665:5:11",
														"type": ""
													}
												],
												"src": "5619:139:11"
											},
											{
												"body": {
													"nativeSrc": "5830:263:11",
													"nodeType": "YulBlock",
													"src": "5830:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5876:83:11",
																"nodeType": "YulBlock",
																"src": "5876:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5878:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "5878:77:11"
																			},
																			"nativeSrc": "5878:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5878:79:11"
																		},
																		"nativeSrc": "5878:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5878:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5851:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5851:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5860:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5860:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5847:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5847:3:11"
																		},
																		"nativeSrc": "5847:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5847:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5872:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5872:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5843:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:11"
																},
																"nativeSrc": "5843:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5843:32:11"
															},
															"nativeSrc": "5840:119:11",
															"nodeType": "YulIf",
															"src": "5840:119:11"
														},
														{
															"nativeSrc": "5969:117:11",
															"nodeType": "YulBlock",
															"src": "5969:117:11",
															"statements": [
																{
																	"nativeSrc": "5984:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5984:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:11",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5988:6:11",
																			"nodeType": "YulTypedName",
																			"src": "5988:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6013:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6013:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6048:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6048:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6059:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6059:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6044:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6044:3:11"
																				},
																				"nativeSrc": "6044:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6044:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6068:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6068:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6023:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6023:20:11"
																		},
																		"nativeSrc": "6023:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6023:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6013:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6013:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5764:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5800:9:11",
														"nodeType": "YulTypedName",
														"src": "5800:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5811:7:11",
														"nodeType": "YulTypedName",
														"src": "5811:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5823:6:11",
														"nodeType": "YulTypedName",
														"src": "5823:6:11",
														"type": ""
													}
												],
												"src": "5764:329:11"
											},
											{
												"body": {
													"nativeSrc": "6164:53:11",
													"nodeType": "YulBlock",
													"src": "6164:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6181:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6181:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6204:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "6204:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "6186:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "6186:17:11"
																		},
																		"nativeSrc": "6186:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6174:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6174:6:11"
																},
																"nativeSrc": "6174:37:11",
																"nodeType": "YulFunctionCall",
																"src": "6174:37:11"
															},
															"nativeSrc": "6174:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "6174:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "6099:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6152:5:11",
														"nodeType": "YulTypedName",
														"src": "6152:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6159:3:11",
														"nodeType": "YulTypedName",
														"src": "6159:3:11",
														"type": ""
													}
												],
												"src": "6099:118:11"
											},
											{
												"body": {
													"nativeSrc": "6321:124:11",
													"nodeType": "YulBlock",
													"src": "6321:124:11",
													"statements": [
														{
															"nativeSrc": "6331:26:11",
															"nodeType": "YulAssignment",
															"src": "6331:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6343:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "6343:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6354:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6354:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6339:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:11"
																},
																"nativeSrc": "6339:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6339:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6331:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6331:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6411:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "6411:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6424:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6424:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6435:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6435:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6420:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6420:3:11"
																		},
																		"nativeSrc": "6420:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6420:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6367:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "6367:43:11"
																},
																"nativeSrc": "6367:71:11",
																"nodeType": "YulFunctionCall",
																"src": "6367:71:11"
															},
															"nativeSrc": "6367:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "6367:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "6223:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6293:9:11",
														"nodeType": "YulTypedName",
														"src": "6293:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6305:6:11",
														"nodeType": "YulTypedName",
														"src": "6305:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6316:4:11",
														"nodeType": "YulTypedName",
														"src": "6316:4:11",
														"type": ""
													}
												],
												"src": "6223:222:11"
											},
											{
												"body": {
													"nativeSrc": "6534:391:11",
													"nodeType": "YulBlock",
													"src": "6534:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6580:83:11",
																"nodeType": "YulBlock",
																"src": "6580:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6582:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6582:77:11"
																			},
																			"nativeSrc": "6582:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6582:79:11"
																		},
																		"nativeSrc": "6582:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6582:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6555:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6555:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6564:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6564:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6551:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6551:3:11"
																		},
																		"nativeSrc": "6551:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6551:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6576:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6576:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6547:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6547:3:11"
																},
																"nativeSrc": "6547:32:11",
																"nodeType": "YulFunctionCall",
																"src": "6547:32:11"
															},
															"nativeSrc": "6544:119:11",
															"nodeType": "YulIf",
															"src": "6544:119:11"
														},
														{
															"nativeSrc": "6673:117:11",
															"nodeType": "YulBlock",
															"src": "6673:117:11",
															"statements": [
																{
																	"nativeSrc": "6688:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6688:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6702:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6702:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6692:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6692:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6717:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6717:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6752:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6752:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6763:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6763:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6748:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6748:3:11"
																				},
																				"nativeSrc": "6748:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6748:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6772:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6772:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6727:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6727:20:11"
																		},
																		"nativeSrc": "6727:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6727:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6717:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6717:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6800:118:11",
															"nodeType": "YulBlock",
															"src": "6800:118:11",
															"statements": [
																{
																	"nativeSrc": "6815:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6815:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6829:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6819:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6819:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6845:63:11",
																	"nodeType": "YulAssignment",
																	"src": "6845:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6880:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6880:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6891:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6891:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6876:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6876:3:11"
																				},
																				"nativeSrc": "6876:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6876:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6900:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6900:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6855:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "6855:20:11"
																		},
																		"nativeSrc": "6855:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6855:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6845:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6845:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6451:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6496:9:11",
														"nodeType": "YulTypedName",
														"src": "6496:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6507:7:11",
														"nodeType": "YulTypedName",
														"src": "6507:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6519:6:11",
														"nodeType": "YulTypedName",
														"src": "6519:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6527:6:11",
														"nodeType": "YulTypedName",
														"src": "6527:6:11",
														"type": ""
													}
												],
												"src": "6451:474:11"
											},
											{
												"body": {
													"nativeSrc": "6974:43:11",
													"nodeType": "YulBlock",
													"src": "6974:43:11",
													"statements": [
														{
															"nativeSrc": "6984:27:11",
															"nodeType": "YulAssignment",
															"src": "6984:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6999:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "6999:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7006:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7006:4:11",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6995:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6995:3:11"
																},
																"nativeSrc": "6995:16:11",
																"nodeType": "YulFunctionCall",
																"src": "6995:16:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6984:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "6984:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6931:86:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6956:5:11",
														"nodeType": "YulTypedName",
														"src": "6956:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6966:7:11",
														"nodeType": "YulTypedName",
														"src": "6966:7:11",
														"type": ""
													}
												],
												"src": "6931:86:11"
											},
											{
												"body": {
													"nativeSrc": "7084:51:11",
													"nodeType": "YulBlock",
													"src": "7084:51:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7101:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7101:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7122:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "7122:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7106:15:11",
																			"nodeType": "YulIdentifier",
																			"src": "7106:15:11"
																		},
																		"nativeSrc": "7106:22:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7106:22:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7094:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7094:6:11"
																},
																"nativeSrc": "7094:35:11",
																"nodeType": "YulFunctionCall",
																"src": "7094:35:11"
															},
															"nativeSrc": "7094:35:11",
															"nodeType": "YulExpressionStatement",
															"src": "7094:35:11"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7023:112:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7072:5:11",
														"nodeType": "YulTypedName",
														"src": "7072:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7079:3:11",
														"nodeType": "YulTypedName",
														"src": "7079:3:11",
														"type": ""
													}
												],
												"src": "7023:112:11"
											},
											{
												"body": {
													"nativeSrc": "7235:120:11",
													"nodeType": "YulBlock",
													"src": "7235:120:11",
													"statements": [
														{
															"nativeSrc": "7245:26:11",
															"nodeType": "YulAssignment",
															"src": "7245:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7257:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7257:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7268:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7268:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7253:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7253:3:11"
																},
																"nativeSrc": "7253:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7253:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7245:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7245:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7321:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "7321:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7334:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7334:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7345:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7345:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7330:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7330:3:11"
																		},
																		"nativeSrc": "7330:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7330:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7281:39:11",
																	"nodeType": "YulIdentifier",
																	"src": "7281:39:11"
																},
																"nativeSrc": "7281:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7281:67:11"
															},
															"nativeSrc": "7281:67:11",
															"nodeType": "YulExpressionStatement",
															"src": "7281:67:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7141:214:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7207:9:11",
														"nodeType": "YulTypedName",
														"src": "7207:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7219:6:11",
														"nodeType": "YulTypedName",
														"src": "7219:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7230:4:11",
														"nodeType": "YulTypedName",
														"src": "7230:4:11",
														"type": ""
													}
												],
												"src": "7141:214:11"
											},
											{
												"body": {
													"nativeSrc": "7444:391:11",
													"nodeType": "YulBlock",
													"src": "7444:391:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "7490:83:11",
																"nodeType": "YulBlock",
																"src": "7490:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7492:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "7492:77:11"
																			},
																			"nativeSrc": "7492:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7492:79:11"
																		},
																		"nativeSrc": "7492:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7492:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7465:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7465:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7474:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7474:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7461:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7461:3:11"
																		},
																		"nativeSrc": "7461:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7461:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7486:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7486:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7457:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:11"
																},
																"nativeSrc": "7457:32:11",
																"nodeType": "YulFunctionCall",
																"src": "7457:32:11"
															},
															"nativeSrc": "7454:119:11",
															"nodeType": "YulIf",
															"src": "7454:119:11"
														},
														{
															"nativeSrc": "7583:117:11",
															"nodeType": "YulBlock",
															"src": "7583:117:11",
															"statements": [
																{
																	"nativeSrc": "7598:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7598:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7612:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7612:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7602:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7602:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7627:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7627:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7662:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7662:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7673:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7673:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7658:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7658:3:11"
																				},
																				"nativeSrc": "7658:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7658:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7682:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7682:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7637:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7637:20:11"
																		},
																		"nativeSrc": "7637:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7637:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7627:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7627:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7710:118:11",
															"nodeType": "YulBlock",
															"src": "7710:118:11",
															"statements": [
																{
																	"nativeSrc": "7725:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7725:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7739:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7739:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7729:6:11",
																			"nodeType": "YulTypedName",
																			"src": "7729:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7755:63:11",
																	"nodeType": "YulAssignment",
																	"src": "7755:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7790:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "7790:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7801:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "7801:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7786:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "7786:3:11"
																				},
																				"nativeSrc": "7786:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "7786:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7810:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "7810:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7765:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "7765:20:11"
																		},
																		"nativeSrc": "7765:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7765:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7755:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "7755:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7361:474:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7406:9:11",
														"nodeType": "YulTypedName",
														"src": "7406:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7417:7:11",
														"nodeType": "YulTypedName",
														"src": "7417:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7429:6:11",
														"nodeType": "YulTypedName",
														"src": "7429:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7437:6:11",
														"nodeType": "YulTypedName",
														"src": "7437:6:11",
														"type": ""
													}
												],
												"src": "7361:474:11"
											},
											{
												"body": {
													"nativeSrc": "7869:152:11",
													"nodeType": "YulBlock",
													"src": "7869:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7886:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7886:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7889:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7889:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7879:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7879:6:11"
																},
																"nativeSrc": "7879:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7879:88:11"
															},
															"nativeSrc": "7879:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7879:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7983:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7983:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7986:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7986:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7976:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7976:6:11"
																},
																"nativeSrc": "7976:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7976:15:11"
															},
															"nativeSrc": "7976:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7976:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8007:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8007:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8010:4:11",
																		"nodeType": "YulLiteral",
																		"src": "8010:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8000:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:11"
																},
																"nativeSrc": "8000:15:11",
																"nodeType": "YulFunctionCall",
																"src": "8000:15:11"
															},
															"nativeSrc": "8000:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "8000:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7841:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7841:180:11"
											},
											{
												"body": {
													"nativeSrc": "8078:269:11",
													"nodeType": "YulBlock",
													"src": "8078:269:11",
													"statements": [
														{
															"nativeSrc": "8088:22:11",
															"nodeType": "YulAssignment",
															"src": "8088:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8102:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8102:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8108:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8108:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8098:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8098:3:11"
																},
																"nativeSrc": "8098:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8098:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8088:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8088:6:11"
																}
															]
														},
														{
															"nativeSrc": "8119:38:11",
															"nodeType": "YulVariableDeclaration",
															"src": "8119:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8149:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8149:4:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8155:1:11",
																		"nodeType": "YulLiteral",
																		"src": "8155:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8145:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8145:3:11"
																},
																"nativeSrc": "8145:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8145:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8123:18:11",
																	"nodeType": "YulTypedName",
																	"src": "8123:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8196:51:11",
																"nodeType": "YulBlock",
																"src": "8196:51:11",
																"statements": [
																	{
																		"nativeSrc": "8210:27:11",
																		"nodeType": "YulAssignment",
																		"src": "8210:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8224:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "8224:6:11"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8232:4:11",
																					"nodeType": "YulLiteral",
																					"src": "8232:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8220:3:11",
																				"nodeType": "YulIdentifier",
																				"src": "8220:3:11"
																			},
																			"nativeSrc": "8220:17:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8220:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8210:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8210:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8176:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "8176:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8169:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8169:6:11"
																},
																"nativeSrc": "8169:26:11",
																"nodeType": "YulFunctionCall",
																"src": "8169:26:11"
															},
															"nativeSrc": "8166:81:11",
															"nodeType": "YulIf",
															"src": "8166:81:11"
														},
														{
															"body": {
																"nativeSrc": "8299:42:11",
																"nodeType": "YulBlock",
																"src": "8299:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8313:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8313:16:11"
																			},
																			"nativeSrc": "8313:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8313:18:11"
																		},
																		"nativeSrc": "8313:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8313:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8263:18:11",
																		"nodeType": "YulIdentifier",
																		"src": "8263:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8286:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8286:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8294:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8294:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8283:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "8283:2:11"
																		},
																		"nativeSrc": "8283:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8283:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8260:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8260:2:11"
																},
																"nativeSrc": "8260:38:11",
																"nodeType": "YulFunctionCall",
																"src": "8260:38:11"
															},
															"nativeSrc": "8257:84:11",
															"nodeType": "YulIf",
															"src": "8257:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8027:320:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8062:4:11",
														"nodeType": "YulTypedName",
														"src": "8062:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8071:6:11",
														"nodeType": "YulTypedName",
														"src": "8071:6:11",
														"type": ""
													}
												],
												"src": "8027:320:11"
											},
											{
												"body": {
													"nativeSrc": "8459:124:11",
													"nodeType": "YulBlock",
													"src": "8459:124:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8481:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8481:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8489:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8489:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8477:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8477:3:11"
																		},
																		"nativeSrc": "8477:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8477:14:11"
																	},
																	{
																		"hexValue": "44414f546f6b656e3a2063616e6e6f74206c6f636b206d6f7265207468616e20",
																		"kind": "string",
																		"nativeSrc": "8493:34:11",
																		"nodeType": "YulLiteral",
																		"src": "8493:34:11",
																		"type": "",
																		"value": "DAOToken: cannot lock more than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8470:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8470:6:11"
																},
																"nativeSrc": "8470:58:11",
																"nodeType": "YulFunctionCall",
																"src": "8470:58:11"
															},
															"nativeSrc": "8470:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "8470:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8549:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "8549:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8557:2:11",
																				"nodeType": "YulLiteral",
																				"src": "8557:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8545:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8545:3:11"
																		},
																		"nativeSrc": "8545:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8545:15:11"
																	},
																	{
																		"hexValue": "7468652062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8562:13:11",
																		"nodeType": "YulLiteral",
																		"src": "8562:13:11",
																		"type": "",
																		"value": "the balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8538:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8538:6:11"
																},
																"nativeSrc": "8538:38:11",
																"nodeType": "YulFunctionCall",
																"src": "8538:38:11"
															},
															"nativeSrc": "8538:38:11",
															"nodeType": "YulExpressionStatement",
															"src": "8538:38:11"
														}
													]
												},
												"name": "store_literal_in_memory_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07",
												"nativeSrc": "8353:230:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8451:6:11",
														"nodeType": "YulTypedName",
														"src": "8451:6:11",
														"type": ""
													}
												],
												"src": "8353:230:11"
											},
											{
												"body": {
													"nativeSrc": "8735:220:11",
													"nodeType": "YulBlock",
													"src": "8735:220:11",
													"statements": [
														{
															"nativeSrc": "8745:74:11",
															"nodeType": "YulAssignment",
															"src": "8745:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8811:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8811:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8816:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8816:2:11",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8752:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8752:58:11"
																},
																"nativeSrc": "8752:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8752:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8745:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8745:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8917:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8917:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07",
																	"nativeSrc": "8828:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8828:88:11"
																},
																"nativeSrc": "8828:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8828:93:11"
															},
															"nativeSrc": "8828:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8828:93:11"
														},
														{
															"nativeSrc": "8930:19:11",
															"nodeType": "YulAssignment",
															"src": "8930:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8941:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8941:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8946:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8946:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8937:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8937:3:11"
																},
																"nativeSrc": "8937:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8937:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8930:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8930:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8589:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8723:3:11",
														"nodeType": "YulTypedName",
														"src": "8723:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8731:3:11",
														"nodeType": "YulTypedName",
														"src": "8731:3:11",
														"type": ""
													}
												],
												"src": "8589:366:11"
											},
											{
												"body": {
													"nativeSrc": "9132:248:11",
													"nodeType": "YulBlock",
													"src": "9132:248:11",
													"statements": [
														{
															"nativeSrc": "9142:26:11",
															"nodeType": "YulAssignment",
															"src": "9142:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9154:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9154:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9165:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9165:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9150:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9150:3:11"
																},
																"nativeSrc": "9150:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9150:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9142:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9142:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9189:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9189:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9200:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9200:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9185:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:11"
																		},
																		"nativeSrc": "9185:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9208:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9208:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9214:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9214:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9204:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9204:3:11"
																		},
																		"nativeSrc": "9204:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9204:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9178:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9178:6:11"
																},
																"nativeSrc": "9178:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9178:47:11"
															},
															"nativeSrc": "9178:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9178:47:11"
														},
														{
															"nativeSrc": "9234:139:11",
															"nodeType": "YulAssignment",
															"src": "9234:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9368:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9368:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9242:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9242:124:11"
																},
																"nativeSrc": "9242:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9242:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9234:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9234:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8961:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9112:9:11",
														"nodeType": "YulTypedName",
														"src": "9112:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9127:4:11",
														"nodeType": "YulTypedName",
														"src": "9127:4:11",
														"type": ""
													}
												],
												"src": "8961:419:11"
											},
											{
												"body": {
													"nativeSrc": "9492:132:11",
													"nodeType": "YulBlock",
													"src": "9492:132:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9514:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9514:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9522:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9522:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9510:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9510:3:11"
																		},
																		"nativeSrc": "9510:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9510:14:11"
																	},
																	{
																		"hexValue": "44414f546f6b656e3a2063616e6e6f7420756e6c6f636b206d6f726520746f6b",
																		"kind": "string",
																		"nativeSrc": "9526:34:11",
																		"nodeType": "YulLiteral",
																		"src": "9526:34:11",
																		"type": "",
																		"value": "DAOToken: cannot unlock more tok"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9503:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9503:6:11"
																},
																"nativeSrc": "9503:58:11",
																"nodeType": "YulFunctionCall",
																"src": "9503:58:11"
															},
															"nativeSrc": "9503:58:11",
															"nodeType": "YulExpressionStatement",
															"src": "9503:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9582:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9582:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9590:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9590:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9578:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9578:3:11"
																		},
																		"nativeSrc": "9578:15:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9578:15:11"
																	},
																	{
																		"hexValue": "656e73207468616e20617265206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "9595:21:11",
																		"nodeType": "YulLiteral",
																		"src": "9595:21:11",
																		"type": "",
																		"value": "ens than are locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9571:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9571:6:11"
																},
																"nativeSrc": "9571:46:11",
																"nodeType": "YulFunctionCall",
																"src": "9571:46:11"
															},
															"nativeSrc": "9571:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "9571:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894",
												"nativeSrc": "9386:238:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9484:6:11",
														"nodeType": "YulTypedName",
														"src": "9484:6:11",
														"type": ""
													}
												],
												"src": "9386:238:11"
											},
											{
												"body": {
													"nativeSrc": "9776:220:11",
													"nodeType": "YulBlock",
													"src": "9776:220:11",
													"statements": [
														{
															"nativeSrc": "9786:74:11",
															"nodeType": "YulAssignment",
															"src": "9786:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9852:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9852:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9857:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9857:2:11",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9793:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "9793:58:11"
																},
																"nativeSrc": "9793:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9793:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9786:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9786:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9958:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9958:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894",
																	"nativeSrc": "9869:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9869:88:11"
																},
																"nativeSrc": "9869:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9869:93:11"
															},
															"nativeSrc": "9869:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9869:93:11"
														},
														{
															"nativeSrc": "9971:19:11",
															"nodeType": "YulAssignment",
															"src": "9971:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9982:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9982:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9987:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9987:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9978:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9978:3:11"
																},
																"nativeSrc": "9978:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9978:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9971:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9971:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9630:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9764:3:11",
														"nodeType": "YulTypedName",
														"src": "9764:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9772:3:11",
														"nodeType": "YulTypedName",
														"src": "9772:3:11",
														"type": ""
													}
												],
												"src": "9630:366:11"
											},
											{
												"body": {
													"nativeSrc": "10173:248:11",
													"nodeType": "YulBlock",
													"src": "10173:248:11",
													"statements": [
														{
															"nativeSrc": "10183:26:11",
															"nodeType": "YulAssignment",
															"src": "10183:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10195:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10195:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10206:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10206:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10191:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10191:3:11"
																},
																"nativeSrc": "10191:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10191:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10183:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10183:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10230:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10230:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10241:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10241:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10226:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10226:3:11"
																		},
																		"nativeSrc": "10226:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10226:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10249:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10249:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10255:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10255:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10245:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10245:3:11"
																		},
																		"nativeSrc": "10245:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10245:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10219:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10219:6:11"
																},
																"nativeSrc": "10219:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10219:47:11"
															},
															"nativeSrc": "10219:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10219:47:11"
														},
														{
															"nativeSrc": "10275:139:11",
															"nodeType": "YulAssignment",
															"src": "10275:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10409:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10409:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10283:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "10283:124:11"
																},
																"nativeSrc": "10283:131:11",
																"nodeType": "YulFunctionCall",
																"src": "10283:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10275:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10275:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10002:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10153:9:11",
														"nodeType": "YulTypedName",
														"src": "10153:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10168:4:11",
														"nodeType": "YulTypedName",
														"src": "10168:4:11",
														"type": ""
													}
												],
												"src": "10002:419:11"
											},
											{
												"body": {
													"nativeSrc": "10455:152:11",
													"nodeType": "YulBlock",
													"src": "10455:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10472:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10472:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10475:77:11",
																		"nodeType": "YulLiteral",
																		"src": "10475:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10465:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10465:6:11"
																},
																"nativeSrc": "10465:88:11",
																"nodeType": "YulFunctionCall",
																"src": "10465:88:11"
															},
															"nativeSrc": "10465:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "10465:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10569:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10569:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10572:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10572:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10562:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10562:6:11"
																},
																"nativeSrc": "10562:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10562:15:11"
															},
															"nativeSrc": "10562:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10562:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10593:1:11",
																		"nodeType": "YulLiteral",
																		"src": "10593:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10596:4:11",
																		"nodeType": "YulLiteral",
																		"src": "10596:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10586:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10586:6:11"
																},
																"nativeSrc": "10586:15:11",
																"nodeType": "YulFunctionCall",
																"src": "10586:15:11"
															},
															"nativeSrc": "10586:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "10586:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10427:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "10427:180:11"
											},
											{
												"body": {
													"nativeSrc": "10657:147:11",
													"nodeType": "YulBlock",
													"src": "10657:147:11",
													"statements": [
														{
															"nativeSrc": "10667:25:11",
															"nodeType": "YulAssignment",
															"src": "10667:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10690:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10690:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10672:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10672:17:11"
																},
																"nativeSrc": "10672:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10672:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10667:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10667:1:11"
																}
															]
														},
														{
															"nativeSrc": "10701:25:11",
															"nodeType": "YulAssignment",
															"src": "10701:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10724:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10724:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10706:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "10706:17:11"
																},
																"nativeSrc": "10706:20:11",
																"nodeType": "YulFunctionCall",
																"src": "10706:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10701:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "10701:1:11"
																}
															]
														},
														{
															"nativeSrc": "10735:16:11",
															"nodeType": "YulAssignment",
															"src": "10735:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10746:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10746:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10749:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10749:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10742:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10742:3:11"
																},
																"nativeSrc": "10742:9:11",
																"nodeType": "YulFunctionCall",
																"src": "10742:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10735:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10735:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10775:22:11",
																"nodeType": "YulBlock",
																"src": "10775:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10777:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "10777:16:11"
																			},
																			"nativeSrc": "10777:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "10777:18:11"
																		},
																		"nativeSrc": "10777:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "10777:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10767:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "10767:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10770:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10770:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10764:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "10764:2:11"
																},
																"nativeSrc": "10764:10:11",
																"nodeType": "YulFunctionCall",
																"src": "10764:10:11"
															},
															"nativeSrc": "10761:36:11",
															"nodeType": "YulIf",
															"src": "10761:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10613:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10644:1:11",
														"nodeType": "YulTypedName",
														"src": "10644:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10647:1:11",
														"nodeType": "YulTypedName",
														"src": "10647:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10653:3:11",
														"nodeType": "YulTypedName",
														"src": "10653:3:11",
														"type": ""
													}
												],
												"src": "10613:191:11"
											},
											{
												"body": {
													"nativeSrc": "10875:53:11",
													"nodeType": "YulBlock",
													"src": "10875:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10892:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10892:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10915:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "10915:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10897:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "10897:17:11"
																		},
																		"nativeSrc": "10897:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10897:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10885:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10885:6:11"
																},
																"nativeSrc": "10885:37:11",
																"nodeType": "YulFunctionCall",
																"src": "10885:37:11"
															},
															"nativeSrc": "10885:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "10885:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10810:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10863:5:11",
														"nodeType": "YulTypedName",
														"src": "10863:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10870:3:11",
														"nodeType": "YulTypedName",
														"src": "10870:3:11",
														"type": ""
													}
												],
												"src": "10810:118:11"
											},
											{
												"body": {
													"nativeSrc": "11032:124:11",
													"nodeType": "YulBlock",
													"src": "11032:124:11",
													"statements": [
														{
															"nativeSrc": "11042:26:11",
															"nodeType": "YulAssignment",
															"src": "11042:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11054:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11054:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11065:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11065:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11050:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11050:3:11"
																},
																"nativeSrc": "11050:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11050:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11042:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11042:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11122:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11122:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11135:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11135:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11146:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11146:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11131:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11131:3:11"
																		},
																		"nativeSrc": "11131:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11131:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11078:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11078:43:11"
																},
																"nativeSrc": "11078:71:11",
																"nodeType": "YulFunctionCall",
																"src": "11078:71:11"
															},
															"nativeSrc": "11078:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "11078:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10934:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11004:9:11",
														"nodeType": "YulTypedName",
														"src": "11004:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11016:6:11",
														"nodeType": "YulTypedName",
														"src": "11016:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11027:4:11",
														"nodeType": "YulTypedName",
														"src": "11027:4:11",
														"type": ""
													}
												],
												"src": "10934:222:11"
											},
											{
												"body": {
													"nativeSrc": "11316:288:11",
													"nodeType": "YulBlock",
													"src": "11316:288:11",
													"statements": [
														{
															"nativeSrc": "11326:26:11",
															"nodeType": "YulAssignment",
															"src": "11326:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11338:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11338:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11349:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11349:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11334:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11334:3:11"
																},
																"nativeSrc": "11334:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11334:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11326:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11326:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11406:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11406:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11419:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11419:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11430:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11430:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11415:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11415:3:11"
																		},
																		"nativeSrc": "11415:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11415:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11362:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11362:43:11"
																},
																"nativeSrc": "11362:71:11",
																"nodeType": "YulFunctionCall",
																"src": "11362:71:11"
															},
															"nativeSrc": "11362:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "11362:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11487:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11487:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11500:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11500:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11511:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11511:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11496:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11496:3:11"
																		},
																		"nativeSrc": "11496:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11496:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11443:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11443:43:11"
																},
																"nativeSrc": "11443:72:11",
																"nodeType": "YulFunctionCall",
																"src": "11443:72:11"
															},
															"nativeSrc": "11443:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "11443:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11569:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "11569:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11582:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11582:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11593:2:11",
																				"nodeType": "YulLiteral",
																				"src": "11593:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11578:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11578:3:11"
																		},
																		"nativeSrc": "11578:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11578:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11525:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11525:43:11"
																},
																"nativeSrc": "11525:72:11",
																"nodeType": "YulFunctionCall",
																"src": "11525:72:11"
															},
															"nativeSrc": "11525:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "11525:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11162:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11272:9:11",
														"nodeType": "YulTypedName",
														"src": "11272:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11284:6:11",
														"nodeType": "YulTypedName",
														"src": "11284:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11292:6:11",
														"nodeType": "YulTypedName",
														"src": "11292:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11300:6:11",
														"nodeType": "YulTypedName",
														"src": "11300:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11311:4:11",
														"nodeType": "YulTypedName",
														"src": "11311:4:11",
														"type": ""
													}
												],
												"src": "11162:442:11"
											},
											{
												"body": {
													"nativeSrc": "11655:149:11",
													"nodeType": "YulBlock",
													"src": "11655:149:11",
													"statements": [
														{
															"nativeSrc": "11665:25:11",
															"nodeType": "YulAssignment",
															"src": "11665:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11688:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11688:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11670:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11670:17:11"
																},
																"nativeSrc": "11670:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11670:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11665:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11665:1:11"
																}
															]
														},
														{
															"nativeSrc": "11699:25:11",
															"nodeType": "YulAssignment",
															"src": "11699:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11722:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11722:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11704:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "11704:17:11"
																},
																"nativeSrc": "11704:20:11",
																"nodeType": "YulFunctionCall",
																"src": "11704:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11699:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "11699:1:11"
																}
															]
														},
														{
															"nativeSrc": "11733:17:11",
															"nodeType": "YulAssignment",
															"src": "11733:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11745:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11745:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11748:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11748:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11741:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11741:3:11"
																},
																"nativeSrc": "11741:9:11",
																"nodeType": "YulFunctionCall",
																"src": "11741:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11733:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11733:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11775:22:11",
																"nodeType": "YulBlock",
																"src": "11775:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11777:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "11777:16:11"
																			},
																			"nativeSrc": "11777:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "11777:18:11"
																		},
																		"nativeSrc": "11777:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "11777:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11766:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11766:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11772:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "11772:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11763:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "11763:2:11"
																},
																"nativeSrc": "11763:11:11",
																"nodeType": "YulFunctionCall",
																"src": "11763:11:11"
															},
															"nativeSrc": "11760:37:11",
															"nodeType": "YulIf",
															"src": "11760:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11610:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11641:1:11",
														"nodeType": "YulTypedName",
														"src": "11641:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11644:1:11",
														"nodeType": "YulTypedName",
														"src": "11644:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11650:4:11",
														"nodeType": "YulTypedName",
														"src": "11650:4:11",
														"type": ""
													}
												],
												"src": "11610:194:11"
											},
											{
												"body": {
													"nativeSrc": "11936:206:11",
													"nodeType": "YulBlock",
													"src": "11936:206:11",
													"statements": [
														{
															"nativeSrc": "11946:26:11",
															"nodeType": "YulAssignment",
															"src": "11946:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11958:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11958:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11969:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11969:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11954:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11954:3:11"
																},
																"nativeSrc": "11954:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11954:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11946:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11946:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12026:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12026:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12039:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12039:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12050:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12050:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12035:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12035:3:11"
																		},
																		"nativeSrc": "12035:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12035:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11982:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "11982:43:11"
																},
																"nativeSrc": "11982:71:11",
																"nodeType": "YulFunctionCall",
																"src": "11982:71:11"
															},
															"nativeSrc": "11982:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "11982:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12107:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "12107:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12120:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12120:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12131:2:11",
																				"nodeType": "YulLiteral",
																				"src": "12131:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12116:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12116:3:11"
																		},
																		"nativeSrc": "12116:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12116:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "12063:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "12063:43:11"
																},
																"nativeSrc": "12063:72:11",
																"nodeType": "YulFunctionCall",
																"src": "12063:72:11"
															},
															"nativeSrc": "12063:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "12063:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "11810:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11900:9:11",
														"nodeType": "YulTypedName",
														"src": "11900:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11912:6:11",
														"nodeType": "YulTypedName",
														"src": "11912:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11920:6:11",
														"nodeType": "YulTypedName",
														"src": "11920:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11931:4:11",
														"nodeType": "YulTypedName",
														"src": "11931:4:11",
														"type": ""
													}
												],
												"src": "11810:332:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07(memPtr) {\n\n        mstore(add(memPtr, 0), \"DAOToken: cannot lock more than \")\n\n        mstore(add(memPtr, 32), \"the balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894(memPtr) {\n\n        mstore(add(memPtr, 0), \"DAOToken: cannot unlock more tok\")\n\n        mstore(add(memPtr, 32), \"ens than are locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x135 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x38D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x415 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x31E9E9C0 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x6B2D95D4 EQ PUSH2 0x2FD JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x32D JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1D4A8B2D GT PUSH2 0xFD JUMPI DUP1 PUSH4 0x1D4A8B2D EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x2FE3ABC7 EQ PUSH2 0x289 JUMPI PUSH2 0x135 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0x17BE3FA5 EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1D3 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14E SWAP2 SWAP1 PUSH2 0x1420 JUMP JUMPDEST PUSH2 0x445 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x160 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x171 PUSH2 0x4BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17E SWAP2 SWAP1 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19C SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x570 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DB PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x162C JUMP JUMPDEST PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x257 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x264 SWAP2 SWAP1 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x287 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x291 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AF PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DA SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH2 0x762 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F6 SWAP2 SWAP1 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x8B2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x317 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x312 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x92D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x324 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x973 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x377 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0x9B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x395 PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x14EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B3 PUSH2 0xAAC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x16E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DE SWAP2 SWAP1 PUSH2 0x159B JUMP JUMPDEST PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F0 SWAP2 SWAP1 PUSH2 0x1465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40E SWAP2 SWAP1 PUSH2 0x1702 JUMP JUMPDEST PUSH2 0xAD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42A SWAP2 SWAP1 PUSH2 0x1774 JUMP JUMPDEST PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x4B7 JUMPI POP PUSH2 0x4B6 DUP3 PUSH2 0xB78 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x4CD SWAP1 PUSH2 0x17DF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F9 SWAP1 PUSH2 0x17DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x544 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x544 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x527 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x558 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x565 DUP2 DUP6 DUP6 PUSH2 0xBE8 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xA0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F PUSH2 0x59A DUP2 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x5A3 DUP4 PUSH2 0x973 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x5E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DC SWAP1 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x635 DUP3 PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xC0E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x681 DUP4 ADDRESS DUP5 PUSH2 0xC23 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x69B DUP2 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x6C5 PUSH32 0xA0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F DUP4 PUSH2 0x714 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6D3 PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E0 DUP6 DUP3 DUP6 PUSH2 0xD13 JUMP JUMPDEST PUSH2 0x6EB DUP6 DUP6 DUP6 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x71D DUP3 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0x726 DUP2 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x730 DUP4 DUP4 PUSH2 0xDA5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0xA0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xA0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F PUSH2 0x78C DUP2 PUSH2 0xBFA JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP1 DUP4 GT ISZERO PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP1 PUSH2 0x190D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x860 DUP4 PUSH1 0x6 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xE8F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x8AC ADDRESS DUP6 DUP6 PUSH2 0xC23 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x8BA PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x91E JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x928 DUP3 DUP3 PUSH2 0xEA4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xA2B SWAP1 PUSH2 0x17DF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA57 SWAP1 PUSH2 0x17DF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA79 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA85 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xABC PUSH2 0xBE1 JUMP JUMPDEST SWAP1 POP PUSH2 0xAC9 DUP2 DUP6 DUP6 PUSH2 0xC23 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xADD DUP3 PUSH2 0x6F7 JUMP JUMPDEST PUSH2 0xAE6 DUP2 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0xAF0 DUP4 DUP4 PUSH2 0xEA4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBF5 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF8E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC0B DUP2 PUSH2 0xC06 PUSH2 0xBE1 JUMP JUMPDEST PUSH2 0x115D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xC1B SWAP2 SWAP1 PUSH2 0x1958 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8A SWAP2 SWAP1 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD03 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCFA SWAP2 SWAP1 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD0E DUP4 DUP4 DUP4 PUSH2 0x11AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD1E DUP5 DUP5 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xD9F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD90 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD87 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xF8E JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xDB0 DUP4 DUP4 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0xE85 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE22 PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xE89 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 DUP4 PUSH2 0xE9C SWAP2 SWAP1 PUSH2 0x19E8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xEAF DUP4 DUP4 PUSH2 0x9B8 JUMP JUMPDEST ISZERO PUSH2 0xF84 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF21 PUSH2 0xBE1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xF88 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFFE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1065 SWAP2 SWAP1 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1157 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x114E SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1167 DUP3 DUP3 PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x11AA JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11FE JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11F2 SWAP2 SWAP1 PUSH2 0x1958 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12CC JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1287 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1313 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x135D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13BA SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13FF DUP2 PUSH2 0x13CB JUMP JUMPDEST DUP2 EQ PUSH2 0x1409 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x141A DUP2 PUSH2 0x13F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1435 JUMPI PUSH2 0x1434 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1442 DUP5 DUP3 DUP6 ADD PUSH2 0x140C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x145F DUP2 PUSH2 0x144B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1478 PUSH0 DUP4 ADD DUP5 PUSH2 0x1456 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14C0 DUP3 PUSH2 0x147E JUMP JUMPDEST PUSH2 0x14CA DUP2 DUP6 PUSH2 0x1488 JUMP JUMPDEST SWAP4 POP PUSH2 0x14DA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1498 JUMP JUMPDEST PUSH2 0x14E3 DUP2 PUSH2 0x14A6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1506 DUP2 DUP5 PUSH2 0x14B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1537 DUP3 PUSH2 0x150E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1547 DUP2 PUSH2 0x152D JUMP JUMPDEST DUP2 EQ PUSH2 0x1551 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1562 DUP2 PUSH2 0x153E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x157A DUP2 PUSH2 0x1568 JUMP JUMPDEST DUP2 EQ PUSH2 0x1584 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1595 DUP2 PUSH2 0x1571 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15B1 JUMPI PUSH2 0x15B0 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15BE DUP6 DUP3 DUP7 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15CF DUP6 DUP3 DUP7 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x15E2 DUP2 PUSH2 0x1568 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15FB PUSH0 DUP4 ADD DUP5 PUSH2 0x15D9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1616 JUMPI PUSH2 0x1615 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1623 DUP5 DUP3 DUP6 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1643 JUMPI PUSH2 0x1642 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1650 DUP7 DUP3 DUP8 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1661 DUP7 DUP3 DUP8 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1672 DUP7 DUP3 DUP8 ADD PUSH2 0x1587 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x168E DUP2 PUSH2 0x167C JUMP JUMPDEST DUP2 EQ PUSH2 0x1698 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16A9 DUP2 PUSH2 0x1685 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16C4 JUMPI PUSH2 0x16C3 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16D1 DUP5 DUP3 DUP6 ADD PUSH2 0x169B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E3 DUP2 PUSH2 0x167C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16FC PUSH0 DUP4 ADD DUP5 PUSH2 0x16DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1718 JUMPI PUSH2 0x1717 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1725 DUP6 DUP3 DUP7 ADD PUSH2 0x169B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1736 DUP6 DUP3 DUP7 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1755 DUP2 PUSH2 0x1740 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x176E PUSH0 DUP4 ADD DUP5 PUSH2 0x174C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x178A JUMPI PUSH2 0x1789 PUSH2 0x13C7 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1797 DUP6 DUP3 DUP7 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17A8 DUP6 DUP3 DUP7 ADD PUSH2 0x1554 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x17F6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1809 JUMPI PUSH2 0x1808 PUSH2 0x17B2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x44414F546F6B656E3A2063616E6E6F74206C6F636B206D6F7265207468616E20 PUSH0 DUP3 ADD MSTORE PUSH32 0x7468652062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1869 PUSH1 0x2B DUP4 PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP PUSH2 0x1874 DUP3 PUSH2 0x180F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1896 DUP2 PUSH2 0x185D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x44414F546F6B656E3A2063616E6E6F7420756E6C6F636B206D6F726520746F6B PUSH0 DUP3 ADD MSTORE PUSH32 0x656E73207468616E20617265206C6F636B656400000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18F7 PUSH1 0x33 DUP4 PUSH2 0x1488 JUMP JUMPDEST SWAP2 POP PUSH2 0x1902 DUP3 PUSH2 0x189D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1924 DUP2 PUSH2 0x18EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1962 DUP3 PUSH2 0x1568 JUMP JUMPDEST SWAP2 POP PUSH2 0x196D DUP4 PUSH2 0x1568 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1985 JUMPI PUSH2 0x1984 PUSH2 0x192B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1994 DUP2 PUSH2 0x152D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19AD PUSH0 DUP4 ADD DUP5 PUSH2 0x198B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x19C6 PUSH0 DUP4 ADD DUP7 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x19D3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15D9 JUMP JUMPDEST PUSH2 0x19E0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19F2 DUP3 PUSH2 0x1568 JUMP JUMPDEST SWAP2 POP PUSH2 0x19FD DUP4 PUSH2 0x1568 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1A15 JUMPI PUSH2 0x1A14 PUSH2 0x192B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A2E PUSH0 DUP4 ADD DUP6 PUSH2 0x198B JUMP JUMPDEST PUSH2 0x1A3B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x16DA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xD0F1D3F94716D2869E9EF8291D47E53845937E12E500AF498A2471B773903964 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "231:1391:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;701:300:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3144:97:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1498:122:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5039:244:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;369:58:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1007:361:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1374:118:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:3:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;701:300:10:-;405:22;2464:16:0;2475:4;2464:10;:16::i;:::-;808:18:10::1;818:7;808:9;:18::i;:::-;798:6;:28;;790:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;909:34;936:6;909:13;:22;923:7;909:22;;;;;;;;;;;;;;;;:26;;:34;;;;:::i;:::-;884:13;:22;898:7;884:22;;;;;;;;;;;;;;;:59;;;;953:41;963:7;980:4;987:6;953:9;:41::i;:::-;701:300:::0;;;:::o;3144:97:3:-;3196:7;3222:12;;3215:19;;3144:97;:::o;1498:122:10:-;2232:4:0;1554:18:10;;2464:16:0;2475:4;2464:10;:16::i;:::-;1584:29:10::1;405:22;1605:7;1584:9;:29::i;:::-;1498:122:::0;;:::o;5039:244:3:-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;4226:136::-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;369:58:10:-;405:22;369:58;:::o;3002:82:3:-;3051:5;3075:2;3068:9;;3002:82;:::o;1007:361:10:-;405:22;2464:16:0;2475:4;2464:10;:16::i;:::-;1098:21:10::1;1122:13;:22;1136:7;1122:22;;;;;;;;;;;;;;;;1098:46;;1172:13;1162:6;:23;;1154:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;1276:34;1303:6;1276:13;:22;1290:7;1276:22;;;;;;;;;;;;;;;;:26;;:34;;;;:::i;:::-;1251:13;:22;1265:7;1251:22;;;;;;;;;;;;;;;:59;;;;1320:41;1338:4;1345:7;1354:6;1320:9;:41::i;:::-;1088:280;1007:361:::0;;;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1374:118:10:-;1437:7;1463:13;:22;1477:7;1463:22;;;;;;;;;;;;;;;;1456:29;;1374:118;;;:::o;3299:116:3:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2276:93:3:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3610:178:3:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3846:140:3:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;762:146:7:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:3:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;2755:96:9:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;5656:300:3:-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;3122:96:9:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;6730:317:0:-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;9949:432:3:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;6271:1107:3:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:11:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:126::-;2790:7;2830:42;2823:5;2819:54;2808:65;;2753:126;;;:::o;2885:96::-;2922:7;2951:24;2969:5;2951:24;:::i;:::-;2940:35;;2885:96;;;:::o;2987:122::-;3060:24;3078:5;3060:24;:::i;:::-;3053:5;3050:35;3040:63;;3099:1;3096;3089:12;3040:63;2987:122;:::o;3115:139::-;3161:5;3199:6;3186:20;3177:29;;3215:33;3242:5;3215:33;:::i;:::-;3115:139;;;;:::o;3260:77::-;3297:7;3326:5;3315:16;;3260:77;;;:::o;3343:122::-;3416:24;3434:5;3416:24;:::i;:::-;3409:5;3406:35;3396:63;;3455:1;3452;3445:12;3396:63;3343:122;:::o;3471:139::-;3517:5;3555:6;3542:20;3533:29;;3571:33;3598:5;3571:33;:::i;:::-;3471:139;;;;:::o;3616:474::-;3684:6;3692;3741:2;3729:9;3720:7;3716:23;3712:32;3709:119;;;3747:79;;:::i;:::-;3709:119;3867:1;3892:53;3937:7;3928:6;3917:9;3913:22;3892:53;:::i;:::-;3882:63;;3838:117;3994:2;4020:53;4065:7;4056:6;4045:9;4041:22;4020:53;:::i;:::-;4010:63;;3965:118;3616:474;;;;;:::o;4096:118::-;4183:24;4201:5;4183:24;:::i;:::-;4178:3;4171:37;4096:118;;:::o;4220:222::-;4313:4;4351:2;4340:9;4336:18;4328:26;;4364:71;4432:1;4421:9;4417:17;4408:6;4364:71;:::i;:::-;4220:222;;;;:::o;4448:329::-;4507:6;4556:2;4544:9;4535:7;4531:23;4527:32;4524:119;;;4562:79;;:::i;:::-;4524:119;4682:1;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4653:117;4448:329;;;;:::o;4783:619::-;4860:6;4868;4876;4925:2;4913:9;4904:7;4900:23;4896:32;4893:119;;;4931:79;;:::i;:::-;4893:119;5051:1;5076:53;5121:7;5112:6;5101:9;5097:22;5076:53;:::i;:::-;5066:63;;5022:117;5178:2;5204:53;5249:7;5240:6;5229:9;5225:22;5204:53;:::i;:::-;5194:63;;5149:118;5306:2;5332:53;5377:7;5368:6;5357:9;5353:22;5332:53;:::i;:::-;5322:63;;5277:118;4783:619;;;;;:::o;5408:77::-;5445:7;5474:5;5463:16;;5408:77;;;:::o;5491:122::-;5564:24;5582:5;5564:24;:::i;:::-;5557:5;5554:35;5544:63;;5603:1;5600;5593:12;5544:63;5491:122;:::o;5619:139::-;5665:5;5703:6;5690:20;5681:29;;5719:33;5746:5;5719:33;:::i;:::-;5619:139;;;;:::o;5764:329::-;5823:6;5872:2;5860:9;5851:7;5847:23;5843:32;5840:119;;;5878:79;;:::i;:::-;5840:119;5998:1;6023:53;6068:7;6059:6;6048:9;6044:22;6023:53;:::i;:::-;6013:63;;5969:117;5764:329;;;;:::o;6099:118::-;6186:24;6204:5;6186:24;:::i;:::-;6181:3;6174:37;6099:118;;:::o;6223:222::-;6316:4;6354:2;6343:9;6339:18;6331:26;;6367:71;6435:1;6424:9;6420:17;6411:6;6367:71;:::i;:::-;6223:222;;;;:::o;6451:474::-;6519:6;6527;6576:2;6564:9;6555:7;6551:23;6547:32;6544:119;;;6582:79;;:::i;:::-;6544:119;6702:1;6727:53;6772:7;6763:6;6752:9;6748:22;6727:53;:::i;:::-;6717:63;;6673:117;6829:2;6855:53;6900:7;6891:6;6880:9;6876:22;6855:53;:::i;:::-;6845:63;;6800:118;6451:474;;;;;:::o;6931:86::-;6966:7;7006:4;6999:5;6995:16;6984:27;;6931:86;;;:::o;7023:112::-;7106:22;7122:5;7106:22;:::i;:::-;7101:3;7094:35;7023:112;;:::o;7141:214::-;7230:4;7268:2;7257:9;7253:18;7245:26;;7281:67;7345:1;7334:9;7330:17;7321:6;7281:67;:::i;:::-;7141:214;;;;:::o;7361:474::-;7429:6;7437;7486:2;7474:9;7465:7;7461:23;7457:32;7454:119;;;7492:79;;:::i;:::-;7454:119;7612:1;7637:53;7682:7;7673:6;7662:9;7658:22;7637:53;:::i;:::-;7627:63;;7583:117;7739:2;7765:53;7810:7;7801:6;7790:9;7786:22;7765:53;:::i;:::-;7755:63;;7710:118;7361:474;;;;;:::o;7841:180::-;7889:77;7886:1;7879:88;7986:4;7983:1;7976:15;8010:4;8007:1;8000:15;8027:320;8071:6;8108:1;8102:4;8098:12;8088:22;;8155:1;8149:4;8145:12;8176:18;8166:81;;8232:4;8224:6;8220:17;8210:27;;8166:81;8294:2;8286:6;8283:14;8263:18;8260:38;8257:84;;8313:18;;:::i;:::-;8257:84;8078:269;8027:320;;;:::o;8353:230::-;8493:34;8489:1;8481:6;8477:14;8470:58;8562:13;8557:2;8549:6;8545:15;8538:38;8353:230;:::o;8589:366::-;8731:3;8752:67;8816:2;8811:3;8752:67;:::i;:::-;8745:74;;8828:93;8917:3;8828:93;:::i;:::-;8946:2;8941:3;8937:12;8930:19;;8589:366;;;:::o;8961:419::-;9127:4;9165:2;9154:9;9150:18;9142:26;;9214:9;9208:4;9204:20;9200:1;9189:9;9185:17;9178:47;9242:131;9368:4;9242:131;:::i;:::-;9234:139;;8961:419;;;:::o;9386:238::-;9526:34;9522:1;9514:6;9510:14;9503:58;9595:21;9590:2;9582:6;9578:15;9571:46;9386:238;:::o;9630:366::-;9772:3;9793:67;9857:2;9852:3;9793:67;:::i;:::-;9786:74;;9869:93;9958:3;9869:93;:::i;:::-;9987:2;9982:3;9978:12;9971:19;;9630:366;;;:::o;10002:419::-;10168:4;10206:2;10195:9;10191:18;10183:26;;10255:9;10249:4;10245:20;10241:1;10230:9;10226:17;10219:47;10283:131;10409:4;10283:131;:::i;:::-;10275:139;;10002:419;;;:::o;10427:180::-;10475:77;10472:1;10465:88;10572:4;10569:1;10562:15;10596:4;10593:1;10586:15;10613:191;10653:3;10672:20;10690:1;10672:20;:::i;:::-;10667:25;;10706:20;10724:1;10706:20;:::i;:::-;10701:25;;10749:1;10746;10742:9;10735:16;;10770:3;10767:1;10764:10;10761:36;;;10777:18;;:::i;:::-;10761:36;10613:191;;;;:::o;10810:118::-;10897:24;10915:5;10897:24;:::i;:::-;10892:3;10885:37;10810:118;;:::o;10934:222::-;11027:4;11065:2;11054:9;11050:18;11042:26;;11078:71;11146:1;11135:9;11131:17;11122:6;11078:71;:::i;:::-;10934:222;;;;:::o;11162:442::-;11311:4;11349:2;11338:9;11334:18;11326:26;;11362:71;11430:1;11419:9;11415:17;11406:6;11362:71;:::i;:::-;11443:72;11511:2;11500:9;11496:18;11487:6;11443:72;:::i;:::-;11525;11593:2;11582:9;11578:18;11569:6;11525:72;:::i;:::-;11162:442;;;;;;:::o;11610:194::-;11650:4;11670:20;11688:1;11670:20;:::i;:::-;11665:25;;11704:20;11722:1;11704:20;:::i;:::-;11699:25;;11748:1;11745;11741:9;11733:17;;11772:1;11766:4;11763:11;11760:37;;;11777:18;;:::i;:::-;11760:37;11610:194;;;;:::o;11810:332::-;11931:4;11969:2;11958:9;11954:18;11946:26;;11982:71;12050:1;12039:9;12035:17;12026:6;11982:71;:::i;:::-;12063:72;12131:2;12120:9;12116:18;12107:6;12063:72;:::i;:::-;11810:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1355200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CCUS_ROLE()": "436",
								"DEFAULT_ADMIN_ROLE()": "396",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2940",
								"decimals()": "361",
								"getLockedTokens(address)": "2918",
								"getRoleAdmin(bytes32)": "infinite",
								"grantCCUSRole(address)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3144",
								"lockToken(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2544",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"unlockToken(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 231,
									"end": 1622,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 489,
									"end": 695,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 489,
									"end": 695,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 489,
									"end": 695,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 489,
									"end": 695,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 489,
									"end": 695,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 489,
									"end": 695,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 489,
									"end": 695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 489,
									"end": 695,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 580,
									"end": 584,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 586,
									"end": 592,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 604,
									"end": 636,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 610,
									"end": 620,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 622,
									"end": 635,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 604,
									"end": 609,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 604,
									"end": 609,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 609,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 604,
									"end": 636,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 636,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 604,
									"end": 636,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 604,
									"end": 636,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 604,
									"end": 636,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 646,
									"end": 688,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 657,
									"end": 675,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 657,
									"end": 675,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 677,
									"end": 687,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 646,
									"end": 656,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 646,
									"end": 656,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 646,
									"end": 656,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 646,
									"end": 688,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 646,
									"end": 688,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 646,
									"end": 688,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 646,
									"end": 688,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 646,
									"end": 688,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 646,
									"end": 688,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 489,
									"end": 695,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 3,
									"value": "21"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "36"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 3,
									"value": "33"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "37"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 3,
									"value": "38"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 11,
									"value": "91"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 11,
									"value": "93"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 11,
									"value": "92"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "43"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 11,
									"value": "96"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 11,
									"value": "98"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 11
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 11,
									"value": "103"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 11,
									"value": "107"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "46"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 11,
									"value": "111"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2607,
									"end": 2614,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2636,
									"end": 2641,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2625,
									"end": 2641,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2647,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2570,
									"end": 2647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 2726,
									"end": 2750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2719,
									"end": 2724,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2716,
									"end": 2751,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2765,
									"end": 2766,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2762,
									"end": 2763,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2755,
									"end": 2767,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 2706,
									"end": 2769,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2653,
									"end": 2775,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2653,
									"end": 2775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2838,
									"end": 2843,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2875,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2863,
									"end": 2876,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2854,
									"end": 2876,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 2912,
									"end": 2917,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 2885,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 2885,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2924,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2781,
									"end": 2924,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3038,
									"end": 3044,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3054,
									"end": 3060,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3103,
									"end": 3105,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 3091,
									"end": 3100,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3082,
									"end": 3089,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3078,
									"end": 3101,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3074,
									"end": 3106,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "44"
								},
								{
									"begin": 3109,
									"end": 3188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 3109,
									"end": 3188,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 3071,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3250,
									"end": 3251,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3239,
									"end": 3248,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3235,
									"end": 3252,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3229,
									"end": 3253,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3280,
									"end": 3298,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3272,
									"end": 3278,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3269,
									"end": 3299,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 3302,
									"end": 3381,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 3302,
									"end": 3381,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "tag",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 3266,
									"end": 3383,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 3473,
									"end": 3480,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3464,
									"end": 3470,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3453,
									"end": 3462,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3449,
									"end": 3471,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 3407,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "tag",
									"source": 11,
									"value": "123"
								},
								{
									"begin": 3407,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3397,
									"end": 3481,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 3397,
									"end": 3481,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3200,
									"end": 3491,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3551,
									"end": 3553,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3540,
									"end": 3549,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3554,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3530,
									"end": 3555,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3582,
									"end": 3600,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3574,
									"end": 3580,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3571,
									"end": 3601,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 3604,
									"end": 3683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 3604,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "tag",
									"source": 11,
									"value": "124"
								},
								{
									"begin": 3568,
									"end": 3685,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 3775,
									"end": 3782,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3766,
									"end": 3772,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3755,
									"end": 3764,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3751,
									"end": 3773,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 3709,
									"end": 3783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "tag",
									"source": 11,
									"value": "126"
								},
								{
									"begin": 3709,
									"end": 3783,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3699,
									"end": 3783,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3699,
									"end": 3783,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3501,
									"end": 3793,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3832,
									"end": 3834,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 3914,
									"end": 3921,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3905,
									"end": 3911,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3894,
									"end": 3903,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 3890,
									"end": 3912,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 3858,
									"end": 3922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 3858,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3848,
									"end": 3922,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3848,
									"end": 3922,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3803,
									"end": 3932,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2930,
									"end": 3939,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2930,
									"end": 3939,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3997,
									"end": 4003,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4031,
									"end": 4036,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4025,
									"end": 4037,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4015,
									"end": 4037,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3945,
									"end": 4044,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3945,
									"end": 4044,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4050,
									"end": 4230,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 4050,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4098,
									"end": 4175,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4095,
									"end": 4096,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4088,
									"end": 4176,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4195,
									"end": 4199,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 4192,
									"end": 4193,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 4185,
									"end": 4200,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4219,
									"end": 4223,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4216,
									"end": 4217,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4209,
									"end": 4224,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4280,
									"end": 4286,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4317,
									"end": 4318,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 4311,
									"end": 4315,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4307,
									"end": 4319,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 4297,
									"end": 4319,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4297,
									"end": 4319,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4364,
									"end": 4365,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 4358,
									"end": 4362,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4354,
									"end": 4366,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4385,
									"end": 4403,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4441,
									"end": 4445,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 4433,
									"end": 4439,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4429,
									"end": 4446,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4419,
									"end": 4446,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4419,
									"end": 4446,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 4375,
									"end": 4456,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4503,
									"end": 4505,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4495,
									"end": 4501,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4492,
									"end": 4506,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4472,
									"end": 4490,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4469,
									"end": 4507,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 4522,
									"end": 4540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 4522,
									"end": 4540,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 4466,
									"end": 4550,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4287,
									"end": 4556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4236,
									"end": 4556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4236,
									"end": 4556,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4611,
									"end": 4615,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4634,
									"end": 4637,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4626,
									"end": 4637,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4626,
									"end": 4637,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4657,
									"end": 4660,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4654,
									"end": 4655,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4647,
									"end": 4661,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4691,
									"end": 4695,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4688,
									"end": 4689,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4678,
									"end": 4696,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 4670,
									"end": 4696,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4670,
									"end": 4696,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4562,
									"end": 4703,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4562,
									"end": 4703,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "tag",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4746,
									"end": 4752,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4793,
									"end": 4795,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4788,
									"end": 4790,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4781,
									"end": 4786,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4777,
									"end": 4791,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4773,
									"end": 4796,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 4763,
									"end": 4796,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4763,
									"end": 4796,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4709,
									"end": 4802,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4709,
									"end": 4802,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4852,
									"end": 4860,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4902,
									"end": 4907,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4896,
									"end": 4900,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4892,
									"end": 4908,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 4871,
									"end": 4908,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4871,
									"end": 4908,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4808,
									"end": 4915,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4808,
									"end": 4915,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4990,
									"end": 4996,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5040,
									"end": 5041,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 5028,
									"end": 5038,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5024,
									"end": 5042,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 5093,
									"end": 5159,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5082,
									"end": 5091,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 5063,
									"end": 5160,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 5063,
									"end": 5160,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 5211,
									"end": 5219,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5200,
									"end": 5209,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 5181,
									"end": 5220,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "tag",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 5181,
									"end": 5220,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5169,
									"end": 5220,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 5169,
									"end": 5220,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5253,
									"end": 5257,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5249,
									"end": 5258,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 5242,
									"end": 5247,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5238,
									"end": 5259,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5229,
									"end": 5259,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 5229,
									"end": 5259,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5302,
									"end": 5306,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 5292,
									"end": 5300,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 5288,
									"end": 5307,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 5281,
									"end": 5286,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5278,
									"end": 5308,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 5268,
									"end": 5308,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 5268,
									"end": 5308,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4997,
									"end": 5314,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4997,
									"end": 5314,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4921,
									"end": 5314,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4921,
									"end": 5314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5348,
									"end": 5351,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5369,
									"end": 5374,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5362,
									"end": 5374,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5362,
									"end": 5374,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5320,
									"end": 5380,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5320,
									"end": 5380,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5436,
									"end": 5445,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 5514,
									"end": 5519,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 5496,
									"end": 5520,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "tag",
									"source": 11,
									"value": "144"
								},
								{
									"begin": 5496,
									"end": 5520,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 5487,
									"end": 5521,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "tag",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 5487,
									"end": 5521,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 5469,
									"end": 5522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 5469,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5456,
									"end": 5522,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5456,
									"end": 5522,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5386,
									"end": 5528,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5386,
									"end": 5528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5577,
									"end": 5580,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5598,
									"end": 5603,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5591,
									"end": 5603,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5591,
									"end": 5603,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5534,
									"end": 5609,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5534,
									"end": 5609,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 5756,
									"end": 5763,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 5725,
									"end": 5764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "tag",
									"source": 11,
									"value": "147"
								},
								{
									"begin": 5725,
									"end": 5764,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "149"
								},
								{
									"begin": 5859,
									"end": 5875,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 5835,
									"end": 5876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "tag",
									"source": 11,
									"value": "149"
								},
								{
									"begin": 5835,
									"end": 5876,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5827,
									"end": 5833,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5820,
									"end": 5824,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5814,
									"end": 5825,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 5786,
									"end": 5877,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "tag",
									"source": 11,
									"value": "148"
								},
								{
									"begin": 5786,
									"end": 5877,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5780,
									"end": 5784,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5773,
									"end": 5878,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5691,
									"end": 5884,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5615,
									"end": 5884,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5615,
									"end": 5884,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5935,
									"end": 5938,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5890,
									"end": 5963,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5890,
									"end": 5963,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "tag",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 6046,
									"end": 6078,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "tag",
									"source": 11,
									"value": "152"
								},
								{
									"begin": 6046,
									"end": 6078,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 6145,
									"end": 6151,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6137,
									"end": 6143,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6131,
									"end": 6135,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 6087,
									"end": 6152,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "tag",
									"source": 11,
									"value": "153"
								},
								{
									"begin": 6087,
									"end": 6152,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6022,
									"end": 6158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6158,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "tag",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6241,
									"end": 6244,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6234,
									"end": 6239,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6231,
									"end": 6245,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "157"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "158"
								},
								{
									"begin": 6332,
									"end": 6333,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6325,
									"end": 6330,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "71"
								},
								{
									"begin": 6295,
									"end": 6334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "tag",
									"source": 11,
									"value": "158"
								},
								{
									"begin": 6295,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6268,
									"end": 6269,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 6261,
									"end": 6266,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6257,
									"end": 6270,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6248,
									"end": 6270,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6248,
									"end": 6270,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "155"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "tag",
									"source": 11,
									"value": "157"
								},
								{
									"begin": 6224,
									"end": 6344,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6164,
									"end": 6350,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6164,
									"end": 6350,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6457,
									"end": 6459,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6452,
									"end": 6455,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6449,
									"end": 6460,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "160"
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 6523,
									"end": 6528,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 6491,
									"end": 6529,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "tag",
									"source": 11,
									"value": "161"
								},
								{
									"begin": 6491,
									"end": 6529,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "162"
								},
								{
									"begin": 6593,
									"end": 6603,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 6575,
									"end": 6604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "tag",
									"source": 11,
									"value": "162"
								},
								{
									"begin": 6575,
									"end": 6604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6565,
									"end": 6573,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6561,
									"end": 6605,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6758,
									"end": 6760,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6746,
									"end": 6756,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "163"
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6779,
									"end": 6787,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6764,
									"end": 6787,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6764,
									"end": 6787,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "tag",
									"source": 11,
									"value": "163"
								},
								{
									"begin": 6740,
									"end": 6789,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "164"
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "165"
								},
								{
									"begin": 6876,
									"end": 6879,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "63"
								},
								{
									"begin": 6858,
									"end": 6880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "tag",
									"source": 11,
									"value": "165"
								},
								{
									"begin": 6858,
									"end": 6880,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6848,
									"end": 6856,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6844,
									"end": 6881,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6831,
									"end": 6842,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 6802,
									"end": 6882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "tag",
									"source": 11,
									"value": "164"
								},
								{
									"begin": 6802,
									"end": 6882,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6461,
									"end": 6892,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6461,
									"end": 6892,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "tag",
									"source": 11,
									"value": "160"
								},
								{
									"begin": 6446,
									"end": 6892,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6356,
									"end": 6899,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6356,
									"end": 6899,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6959,
									"end": 6967,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7009,
									"end": 7014,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7003,
									"end": 7007,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6999,
									"end": 7015,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 6978,
									"end": 7015,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6978,
									"end": 7015,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6905,
									"end": 7022,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6905,
									"end": 7022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "tag",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7072,
									"end": 7078,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "168"
								},
								{
									"begin": 7153,
									"end": 7154,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7149,
									"end": 7155,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7141,
									"end": 7146,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7138,
									"end": 7139,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 7134,
									"end": 7147,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 7105,
									"end": 7156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "tag",
									"source": 11,
									"value": "168"
								},
								{
									"begin": 7105,
									"end": 7156,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7101,
									"end": 7157,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7186,
									"end": 7190,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7180,
									"end": 7184,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 7191,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7166,
									"end": 7191,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7166,
									"end": 7191,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7079,
									"end": 7197,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7028,
									"end": 7197,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7028,
									"end": 7197,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7278,
									"end": 7282,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "170"
								},
								{
									"begin": 7449,
									"end": 7452,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7443,
									"end": 7447,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 7424,
									"end": 7453,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "tag",
									"source": 11,
									"value": "170"
								},
								{
									"begin": 7424,
									"end": 7453,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7416,
									"end": 7453,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7416,
									"end": 7453,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7486,
									"end": 7489,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7483,
									"end": 7484,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 7479,
									"end": 7490,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7473,
									"end": 7477,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7470,
									"end": 7491,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 7462,
									"end": 7491,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7462,
									"end": 7491,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7202,
									"end": 7497,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7202,
									"end": 7497,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "tag",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "172"
								},
								{
									"begin": 7652,
									"end": 7655,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 7619,
									"end": 7656,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "tag",
									"source": 11,
									"value": "172"
								},
								{
									"begin": 7619,
									"end": 7656,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7721,
									"end": 7739,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7713,
									"end": 7719,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7710,
									"end": 7740,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "173"
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "174"
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "49"
								},
								{
									"begin": 7743,
									"end": 7761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "tag",
									"source": 11,
									"value": "174"
								},
								{
									"begin": 7743,
									"end": 7761,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "tag",
									"source": 11,
									"value": "173"
								},
								{
									"begin": 7707,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "175"
								},
								{
									"begin": 7819,
									"end": 7823,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7813,
									"end": 7824,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 7787,
									"end": 7825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "tag",
									"source": 11,
									"value": "175"
								},
								{
									"begin": 7787,
									"end": 7825,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "176"
								},
								{
									"begin": 7932,
									"end": 7938,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7918,
									"end": 7922,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 7872,
									"end": 7939,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "tag",
									"source": 11,
									"value": "176"
								},
								{
									"begin": 7872,
									"end": 7939,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7966,
									"end": 7967,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7990,
									"end": 7994,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7977,
									"end": 7994,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7977,
									"end": 7994,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8022,
									"end": 8024,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8014,
									"end": 8020,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8011,
									"end": 8025,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8039,
									"end": 8040,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "178"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8696,
									"end": 8697,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8713,
									"end": 8719,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "179"
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8762,
									"end": 8771,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8757,
									"end": 8760,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 8753,
									"end": 8772,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8747,
									"end": 8773,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8738,
									"end": 8773,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8738,
									"end": 8773,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "tag",
									"source": 11,
									"value": "179"
								},
								{
									"begin": 8710,
									"end": 8787,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "180"
								},
								{
									"begin": 8873,
									"end": 8879,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8866,
									"end": 8871,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 8813,
									"end": 8880,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "tag",
									"source": 11,
									"value": "180"
								},
								{
									"begin": 8813,
									"end": 8880,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8807,
									"end": 8811,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8800,
									"end": 8881,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8669,
									"end": 8891,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "177"
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "tag",
									"source": 11,
									"value": "178"
								},
								{
									"begin": 8034,
									"end": 8652,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8086,
									"end": 8090,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8082,
									"end": 8091,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 8074,
									"end": 8080,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8070,
									"end": 8092,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "181"
								},
								{
									"begin": 8152,
									"end": 8156,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 8120,
									"end": 8157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "tag",
									"source": 11,
									"value": "181"
								},
								{
									"begin": 8120,
									"end": 8157,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8179,
									"end": 8180,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "tag",
									"source": 11,
									"value": "182"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8207,
									"end": 8214,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8205,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8201,
									"end": 8215,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "184"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8286,
									"end": 8295,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8281,
									"end": 8284,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8277,
									"end": 8296,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8271,
									"end": 8297,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8263,
									"end": 8269,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8256,
									"end": 8298,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8337,
									"end": 8338,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8329,
									"end": 8335,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8325,
									"end": 8339,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8315,
									"end": 8339,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8315,
									"end": 8339,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8384,
									"end": 8386,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8373,
									"end": 8382,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8369,
									"end": 8387,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8356,
									"end": 8387,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 8356,
									"end": 8387,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8230,
									"end": 8234,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8227,
									"end": 8228,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8223,
									"end": 8235,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8218,
									"end": 8235,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8218,
									"end": 8235,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "182"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "tag",
									"source": 11,
									"value": "184"
								},
								{
									"begin": 8193,
									"end": 8401,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8429,
									"end": 8435,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8420,
									"end": 8427,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8417,
									"end": 8436,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "185"
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8487,
									"end": 8496,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8482,
									"end": 8485,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8478,
									"end": 8497,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8472,
									"end": 8498,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "186"
								},
								{
									"begin": 8572,
									"end": 8576,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8564,
									"end": 8570,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8560,
									"end": 8577,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8549,
									"end": 8558,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "75"
								},
								{
									"begin": 8530,
									"end": 8578,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "tag",
									"source": 11,
									"value": "186"
								},
								{
									"begin": 8530,
									"end": 8578,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8522,
									"end": 8528,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8515,
									"end": 8579,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8437,
									"end": 8593,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "tag",
									"source": 11,
									"value": "185"
								},
								{
									"begin": 8414,
									"end": 8593,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8639,
									"end": 8640,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8635,
									"end": 8636,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8627,
									"end": 8633,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8623,
									"end": 8637,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8619,
									"end": 8641,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8613,
									"end": 8617,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8606,
									"end": 8642,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8041,
									"end": 8652,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "tag",
									"source": 11,
									"value": "177"
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8004,
									"end": 8891,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7594,
									"end": 8897,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7502,
									"end": 8897,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7502,
									"end": 8897,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8940,
									"end": 8947,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8980,
									"end": 9022,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8973,
									"end": 8978,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8969,
									"end": 9023,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8958,
									"end": 9023,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8958,
									"end": 9023,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8903,
									"end": 9029,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8903,
									"end": 9029,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9072,
									"end": 9079,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "189"
								},
								{
									"begin": 9119,
									"end": 9124,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 9101,
									"end": 9125,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "tag",
									"source": 11,
									"value": "189"
								},
								{
									"begin": 9101,
									"end": 9125,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9090,
									"end": 9125,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9090,
									"end": 9125,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9131,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9035,
									"end": 9131,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "191"
								},
								{
									"begin": 9242,
									"end": 9247,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 9224,
									"end": 9248,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "tag",
									"source": 11,
									"value": "191"
								},
								{
									"begin": 9224,
									"end": 9248,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9219,
									"end": 9222,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9212,
									"end": 9249,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9137,
									"end": 9255,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9137,
									"end": 9255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9354,
									"end": 9358,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9392,
									"end": 9394,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 9381,
									"end": 9390,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9377,
									"end": 9395,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9369,
									"end": 9395,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9369,
									"end": 9395,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "193"
								},
								{
									"begin": 9473,
									"end": 9474,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9462,
									"end": 9471,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9458,
									"end": 9475,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9449,
									"end": 9455,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 9405,
									"end": 9476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "tag",
									"source": 11,
									"value": "193"
								},
								{
									"begin": 9405,
									"end": 9476,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9261,
									"end": 9483,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9261,
									"end": 9483,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9489,
									"end": 9669,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 9489,
									"end": 9669,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9537,
									"end": 9614,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9534,
									"end": 9535,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9527,
									"end": 9615,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9634,
									"end": 9638,
									"name": "PUSH",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 9631,
									"end": 9632,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 9624,
									"end": 9639,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9658,
									"end": 9662,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 9655,
									"end": 9656,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9648,
									"end": 9663,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9715,
									"end": 9718,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 9734,
									"end": 9754,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "196"
								},
								{
									"begin": 9752,
									"end": 9753,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9734,
									"end": 9754,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 9734,
									"end": 9754,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9734,
									"end": 9754,
									"name": "tag",
									"source": 11,
									"value": "196"
								},
								{
									"begin": 9734,
									"end": 9754,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9729,
									"end": 9754,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9729,
									"end": 9754,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9768,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "197"
								},
								{
									"begin": 9786,
									"end": 9787,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 9768,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 9768,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9768,
									"end": 9788,
									"name": "tag",
									"source": 11,
									"value": "197"
								},
								{
									"begin": 9768,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9763,
									"end": 9788,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9763,
									"end": 9788,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9811,
									"end": 9812,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9808,
									"end": 9809,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9804,
									"end": 9813,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 9797,
									"end": 9813,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 9797,
									"end": 9813,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9832,
									"end": 9835,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 9829,
									"end": 9830,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9826,
									"end": 9836,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 9823,
									"end": 9859,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 9823,
									"end": 9859,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "198"
								},
								{
									"begin": 9823,
									"end": 9859,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 9839,
									"end": 9857,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "199"
								},
								{
									"begin": 9839,
									"end": 9857,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 9839,
									"end": 9857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9839,
									"end": 9857,
									"name": "tag",
									"source": 11,
									"value": "199"
								},
								{
									"begin": 9839,
									"end": 9857,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9823,
									"end": 9859,
									"name": "tag",
									"source": 11,
									"value": "198"
								},
								{
									"begin": 9823,
									"end": 9859,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9675,
									"end": 9866,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9675,
									"end": 9866,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9872,
									"end": 9990,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 9872,
									"end": 9990,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9959,
									"end": 9983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "201"
								},
								{
									"begin": 9977,
									"end": 9982,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 9959,
									"end": 9983,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 9959,
									"end": 9983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9959,
									"end": 9983,
									"name": "tag",
									"source": 11,
									"value": "201"
								},
								{
									"begin": 9959,
									"end": 9983,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9954,
									"end": 9957,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 9947,
									"end": 9984,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 9872,
									"end": 9990,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9872,
									"end": 9990,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9872,
									"end": 9990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10145,
									"end": 10149,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10183,
									"end": 10185,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 10172,
									"end": 10181,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10168,
									"end": 10186,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10160,
									"end": 10186,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10160,
									"end": 10186,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10196,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "203"
								},
								{
									"begin": 10264,
									"end": 10265,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10253,
									"end": 10262,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10249,
									"end": 10266,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10240,
									"end": 10246,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 10196,
									"end": 10267,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 10196,
									"end": 10267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10196,
									"end": 10267,
									"name": "tag",
									"source": 11,
									"value": "203"
								},
								{
									"begin": 10196,
									"end": 10267,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10277,
									"end": 10349,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "204"
								},
								{
									"begin": 10345,
									"end": 10347,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 10334,
									"end": 10343,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10330,
									"end": 10348,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10321,
									"end": 10327,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 10277,
									"end": 10349,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 10277,
									"end": 10349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10277,
									"end": 10349,
									"name": "tag",
									"source": 11,
									"value": "204"
								},
								{
									"begin": 10277,
									"end": 10349,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10359,
									"end": 10431,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "205"
								},
								{
									"begin": 10427,
									"end": 10429,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 10416,
									"end": 10425,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10412,
									"end": 10430,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10403,
									"end": 10409,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 10359,
									"end": 10431,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 10359,
									"end": 10431,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10359,
									"end": 10431,
									"name": "tag",
									"source": 11,
									"value": "205"
								},
								{
									"begin": 10359,
									"end": 10431,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9996,
									"end": 10438,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 9996,
									"end": 10438,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10537,
									"end": 10541,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10575,
									"end": 10577,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 10564,
									"end": 10573,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 10560,
									"end": 10578,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10552,
									"end": 10578,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 10552,
									"end": 10578,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10588,
									"end": 10659,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "207"
								},
								{
									"begin": 10656,
									"end": 10657,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 10645,
									"end": 10654,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 10641,
									"end": 10658,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 10632,
									"end": 10638,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 10588,
									"end": 10659,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 10588,
									"end": 10659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 10588,
									"end": 10659,
									"name": "tag",
									"source": 11,
									"value": "207"
								},
								{
									"begin": 10588,
									"end": 10659,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10444,
									"end": 10666,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 10444,
									"end": 10666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 231,
									"end": 1622,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207fd0f1d3f94716d2869e9ef8291d47e53845937e12e500af498a2471b773903964736f6c63430008190033",
									".code": [
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "95D89B41"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "DD62ED3E"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "313CE567"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "31E9E9C0"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "6B2D95D4"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "1D4A8B2D"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "1D4A8B2D"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "2FE3ABC7"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "6FDDE03"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "95EA7B3"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "17BE3FA5"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 231,
											"end": 1622,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 701,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 701,
											"end": 1001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1498,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1498,
											"end": 1620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 369,
											"end": 427,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 369,
											"end": 427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 369,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 369,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 369,
											"end": 427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 427,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 369,
											"end": 427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 369,
											"end": 427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 369,
											"end": 427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 369,
											"end": 427,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1007,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1007,
											"end": 1368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1374,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1374,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1374,
											"end": 1492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "99"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "102"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 405,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "A0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 808,
											"end": 826,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 818,
											"end": 825,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 808,
											"end": 817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 808,
											"end": 826,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 808,
											"end": 826,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 808,
											"end": 826,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 798,
											"end": 804,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 798,
											"end": 826,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 798,
											"end": 826,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "134"
										},
										{
											"begin": 790,
											"end": 874,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 790,
											"end": 874,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 909,
											"end": 943,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 936,
											"end": 942,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 909,
											"end": 922,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 909,
											"end": 931,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 909,
											"end": 935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 909,
											"end": 935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 909,
											"end": 943,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 909,
											"end": 943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 909,
											"end": 943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 909,
											"end": 943,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 909,
											"end": 943,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 909,
											"end": 943,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 909,
											"end": 943,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 884,
											"end": 897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 898,
											"end": 905,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 906,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 884,
											"end": 943,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 884,
											"end": 943,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 884,
											"end": 943,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 884,
											"end": 943,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 953,
											"end": 994,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 963,
											"end": 970,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 980,
											"end": 984,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 987,
											"end": 993,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 953,
											"end": 962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 953,
											"end": 994,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 953,
											"end": 994,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 953,
											"end": 994,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 701,
											"end": 1001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1554,
											"end": 1572,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1584,
											"end": 1613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 405,
											"end": 427,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F"
										},
										{
											"begin": 1605,
											"end": 1612,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1584,
											"end": 1593,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1584,
											"end": 1613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1584,
											"end": 1613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 1584,
											"end": 1613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1498,
											"end": 1620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 3,
											"value": "146"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 3,
											"value": "148"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 369,
											"end": 427,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 369,
											"end": 427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 405,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "A0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F"
										},
										{
											"begin": 369,
											"end": 427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 369,
											"end": 427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 405,
											"end": 427,
											"name": "PUSH",
											"source": 10,
											"value": "A0017D6D59DD228AE09B05F9EF75D0136B06C4284CA797E9B72B0A3A195E403F"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1098,
											"end": 1119,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1143,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1122,
											"end": 1144,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1144,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1098,
											"end": 1144,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1172,
											"end": 1185,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1168,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1185,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1185,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 1154,
											"end": 1241,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 1154,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1303,
											"end": 1309,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1297,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1298,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 1276,
											"end": 1302,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1276,
											"end": 1310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1310,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1276,
											"end": 1310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 1276,
											"end": 1310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1264,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1272,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1273,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1251,
											"end": 1310,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1361,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1338,
											"end": 1342,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1345,
											"end": 1352,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1360,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 1320,
											"end": 1361,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1320,
											"end": 1361,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 1320,
											"end": 1361,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1088,
											"end": 1368,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1007,
											"end": 1368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1437,
											"end": 1444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1476,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1477,
											"end": 1484,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1463,
											"end": 1485,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1374,
											"end": 1492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 3,
											"value": "177"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 3,
											"value": "126"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 3,
											"value": "138"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 3,
											"value": "210"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3211,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3122,
											"end": 3218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 3,
											"value": "208"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 3,
											"value": "243"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "242"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 3,
											"value": "246"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 3,
											"value": "245"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 3,
											"value": "244"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "247"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "255"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "256"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "257"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 11
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "258"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "262"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2872,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2873,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2873,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 2951,
											"end": 2975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 2951,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2940,
											"end": 2975,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2885,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "tag",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3078,
											"end": 3083,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 3060,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3060,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3053,
											"end": 3058,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3050,
											"end": 3085,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3099,
											"end": 3100,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3040,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2987,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3186,
											"end": 3206,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3177,
											"end": 3206,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3242,
											"end": 3247,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "265"
										},
										{
											"begin": 3215,
											"end": 3248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 3215,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3115,
											"end": 3254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3331,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3315,
											"end": 3331,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3260,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3434,
											"end": 3439,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 3416,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 3416,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3409,
											"end": 3414,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3406,
											"end": 3441,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3455,
											"end": 3456,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3445,
											"end": 3457,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 3396,
											"end": 3459,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3343,
											"end": 3465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3555,
											"end": 3561,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3542,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3533,
											"end": 3562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3598,
											"end": 3603,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 3571,
											"end": 3604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 3571,
											"end": 3604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3471,
											"end": 3610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3684,
											"end": 3690,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3741,
											"end": 3743,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3716,
											"end": 3739,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3712,
											"end": 3744,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 3747,
											"end": 3826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 3747,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 3709,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3868,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 3937,
											"end": 3944,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3928,
											"end": 3934,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3917,
											"end": 3926,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3913,
											"end": 3935,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 3892,
											"end": 3945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 3892,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3882,
											"end": 3945,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3994,
											"end": 3996,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4065,
											"end": 4072,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4056,
											"end": 4062,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4045,
											"end": 4054,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4063,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 4020,
											"end": 4073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 4020,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4010,
											"end": 4073,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3965,
											"end": 4083,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3616,
											"end": 4090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4201,
											"end": 4206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 4183,
											"end": 4207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 4183,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4178,
											"end": 4181,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4171,
											"end": 4208,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4096,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4351,
											"end": 4353,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4340,
											"end": 4349,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4336,
											"end": 4354,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4328,
											"end": 4354,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4421,
											"end": 4430,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4417,
											"end": 4434,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 4364,
											"end": 4435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 4364,
											"end": 4435,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4507,
											"end": 4513,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4556,
											"end": 4558,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4544,
											"end": 4553,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4542,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4531,
											"end": 4554,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4527,
											"end": 4559,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4643,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4643,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4524,
											"end": 4643,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4562,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4562,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 4562,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4562,
											"end": 4641,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4562,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4524,
											"end": 4643,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 4524,
											"end": 4643,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4682,
											"end": 4683,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4653,
											"end": 4770,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4777,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4874,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4876,
											"end": 4882,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4925,
											"end": 4927,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4913,
											"end": 4922,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4900,
											"end": 4923,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4896,
											"end": 4928,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 4931,
											"end": 5010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 4931,
											"end": 5010,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 4893,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5051,
											"end": 5052,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5097,
											"end": 5119,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 5076,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 5076,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5066,
											"end": 5129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5022,
											"end": 5139,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 5249,
											"end": 5256,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5240,
											"end": 5246,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5225,
											"end": 5247,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 5204,
											"end": 5257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 5204,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5194,
											"end": 5257,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5149,
											"end": 5267,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5306,
											"end": 5308,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5377,
											"end": 5384,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5368,
											"end": 5374,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5357,
											"end": 5366,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5353,
											"end": 5375,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 5332,
											"end": 5385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5332,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5322,
											"end": 5385,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5277,
											"end": 5395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4783,
											"end": 5402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "tag",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5445,
											"end": 5452,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5479,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5463,
											"end": 5479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5485,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5408,
											"end": 5485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 5582,
											"end": 5587,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 5564,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 5564,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5557,
											"end": 5562,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5554,
											"end": 5589,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5603,
											"end": 5604,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5600,
											"end": 5601,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5593,
											"end": 5605,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5544,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5613,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5491,
											"end": 5613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5665,
											"end": 5670,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5703,
											"end": 5709,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5690,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5681,
											"end": 5710,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 5746,
											"end": 5751,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 5719,
											"end": 5752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 5719,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5619,
											"end": 5758,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5619,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5823,
											"end": 5829,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5860,
											"end": 5869,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5851,
											"end": 5858,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5847,
											"end": 5870,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 5878,
											"end": 5957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "tag",
											"source": 11,
											"value": "355"
										},
										{
											"begin": 5878,
											"end": 5957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 5840,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5998,
											"end": 5999,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6068,
											"end": 6075,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6048,
											"end": 6057,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6044,
											"end": 6066,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 6023,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 6023,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6013,
											"end": 6076,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5969,
											"end": 6086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 6093,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 6093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6204,
											"end": 6209,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "271"
										},
										{
											"begin": 6186,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "tag",
											"source": 11,
											"value": "358"
										},
										{
											"begin": 6186,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6181,
											"end": 6184,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6211,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6099,
											"end": 6217,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6099,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6316,
											"end": 6320,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6356,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6339,
											"end": 6357,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6331,
											"end": 6357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 6435,
											"end": 6436,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6433,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6420,
											"end": 6437,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 6367,
											"end": 6438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "tag",
											"source": 11,
											"value": "360"
										},
										{
											"begin": 6367,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6445,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6223,
											"end": 6445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6519,
											"end": 6525,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6527,
											"end": 6533,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6576,
											"end": 6578,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6573,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6555,
											"end": 6562,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6551,
											"end": 6574,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6547,
											"end": 6579,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 6582,
											"end": 6661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 6582,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 6544,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6702,
											"end": 6703,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6763,
											"end": 6769,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6752,
											"end": 6761,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6748,
											"end": 6770,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 6727,
											"end": 6780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "tag",
											"source": 11,
											"value": "364"
										},
										{
											"begin": 6727,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6717,
											"end": 6780,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6673,
											"end": 6790,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6829,
											"end": 6831,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 6900,
											"end": 6907,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6891,
											"end": 6897,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6880,
											"end": 6889,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6876,
											"end": 6898,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 6855,
											"end": 6908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 6855,
											"end": 6908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6845,
											"end": 6908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6800,
											"end": 6918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6925,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6451,
											"end": 6925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7010,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6999,
											"end": 7004,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6995,
											"end": 7011,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6984,
											"end": 7011,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6931,
											"end": 7017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 7122,
											"end": 7127,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 7106,
											"end": 7128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 7106,
											"end": 7128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7101,
											"end": 7104,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7094,
											"end": 7129,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7023,
											"end": 7135,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7023,
											"end": 7135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "tag",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7230,
											"end": 7234,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7268,
											"end": 7270,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7253,
											"end": 7271,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7245,
											"end": 7271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7334,
											"end": 7343,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7330,
											"end": 7347,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7321,
											"end": 7327,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 7281,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 7281,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7141,
											"end": 7355,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7141,
											"end": 7355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7429,
											"end": 7435,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7437,
											"end": 7443,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7486,
											"end": 7488,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7474,
											"end": 7483,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7465,
											"end": 7472,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7461,
											"end": 7484,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7457,
											"end": 7489,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 7492,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 7492,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 7454,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 7682,
											"end": 7689,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7671,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7658,
											"end": 7680,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7637,
											"end": 7690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 7637,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7627,
											"end": 7690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7583,
											"end": 7700,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7739,
											"end": 7741,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 7810,
											"end": 7817,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7801,
											"end": 7807,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7790,
											"end": 7799,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 7786,
											"end": 7808,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 7765,
											"end": 7818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 7765,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7818,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7710,
											"end": 7828,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7361,
											"end": 7835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 7841,
											"end": 8021,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7889,
											"end": 7966,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7886,
											"end": 7887,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7879,
											"end": 7967,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7986,
											"end": 7990,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 7983,
											"end": 7984,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7976,
											"end": 7991,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8010,
											"end": 8014,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 8007,
											"end": 8008,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8000,
											"end": 8015,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8071,
											"end": 8077,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8109,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8102,
											"end": 8106,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8088,
											"end": 8110,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8155,
											"end": 8156,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8149,
											"end": 8153,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8145,
											"end": 8157,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8176,
											"end": 8194,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 8224,
											"end": 8230,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8210,
											"end": 8237,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 8166,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8294,
											"end": 8296,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8286,
											"end": 8292,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8283,
											"end": 8297,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8263,
											"end": 8281,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8260,
											"end": 8298,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 8313,
											"end": 8331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 8313,
											"end": 8331,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 8257,
											"end": 8341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8078,
											"end": 8347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8027,
											"end": 8347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8583,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 8353,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8493,
											"end": 8527,
											"name": "PUSH",
											"source": 11,
											"value": "44414F546F6B656E3A2063616E6E6F74206C6F636B206D6F7265207468616E20"
										},
										{
											"begin": 8489,
											"end": 8490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8481,
											"end": 8487,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8491,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8470,
											"end": 8528,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8562,
											"end": 8575,
											"name": "PUSH",
											"source": 11,
											"value": "7468652062616C616E6365000000000000000000000000000000000000000000"
										},
										{
											"begin": 8557,
											"end": 8559,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8549,
											"end": 8555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8545,
											"end": 8560,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8538,
											"end": 8576,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8583,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8353,
											"end": 8583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8589,
											"end": 8955,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 8589,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8731,
											"end": 8734,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8752,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 8816,
											"end": 8818,
											"name": "PUSH",
											"source": 11,
											"value": "2B"
										},
										{
											"begin": 8811,
											"end": 8814,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8752,
											"end": 8819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 8752,
											"end": 8819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8752,
											"end": 8819,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 8752,
											"end": 8819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8745,
											"end": 8819,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8745,
											"end": 8819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8828,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 8917,
											"end": 8920,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8828,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 8828,
											"end": 8921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8828,
											"end": 8921,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 8828,
											"end": 8921,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8946,
											"end": 8948,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8941,
											"end": 8944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8937,
											"end": 8949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8930,
											"end": 8949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8930,
											"end": 8949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8589,
											"end": 8955,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8589,
											"end": 8955,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8589,
											"end": 8955,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8589,
											"end": 8955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8961,
											"end": 9380,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 8961,
											"end": 9380,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9127,
											"end": 9131,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9165,
											"end": 9167,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9154,
											"end": 9163,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9150,
											"end": 9168,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9142,
											"end": 9168,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9142,
											"end": 9168,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9223,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9208,
											"end": 9212,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9204,
											"end": 9224,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9200,
											"end": 9201,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9189,
											"end": 9198,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9185,
											"end": 9202,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9225,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9242,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 9368,
											"end": 9372,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9242,
											"end": 9373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 9242,
											"end": 9373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9242,
											"end": 9373,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 9242,
											"end": 9373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9234,
											"end": 9373,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9234,
											"end": 9373,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8961,
											"end": 9380,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8961,
											"end": 9380,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8961,
											"end": 9380,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8961,
											"end": 9380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9386,
											"end": 9624,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 9386,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9526,
											"end": 9560,
											"name": "PUSH",
											"source": 11,
											"value": "44414F546F6B656E3A2063616E6E6F7420756E6C6F636B206D6F726520746F6B"
										},
										{
											"begin": 9522,
											"end": 9523,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9514,
											"end": 9520,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9510,
											"end": 9524,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9503,
											"end": 9561,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9595,
											"end": 9616,
											"name": "PUSH",
											"source": 11,
											"value": "656E73207468616E20617265206C6F636B656400000000000000000000000000"
										},
										{
											"begin": 9590,
											"end": 9592,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9582,
											"end": 9588,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9578,
											"end": 9593,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9571,
											"end": 9617,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9386,
											"end": 9624,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9386,
											"end": 9624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9630,
											"end": 9996,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 9630,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9772,
											"end": 9775,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 9857,
											"end": 9859,
											"name": "PUSH",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 9852,
											"end": 9855,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9793,
											"end": 9860,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 9793,
											"end": 9860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9793,
											"end": 9860,
											"name": "tag",
											"source": 11,
											"value": "389"
										},
										{
											"begin": 9793,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9786,
											"end": 9860,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9786,
											"end": 9860,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9869,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 9958,
											"end": 9961,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9869,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 9869,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9869,
											"end": 9962,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 9869,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9987,
											"end": 9989,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9982,
											"end": 9985,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9978,
											"end": 9990,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9971,
											"end": 9990,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9971,
											"end": 9990,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9630,
											"end": 9996,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9630,
											"end": 9996,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9630,
											"end": 9996,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9630,
											"end": 9996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10002,
											"end": 10421,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 10002,
											"end": 10421,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10168,
											"end": 10172,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10208,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10195,
											"end": 10204,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10191,
											"end": 10209,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10183,
											"end": 10209,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10183,
											"end": 10209,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10255,
											"end": 10264,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10249,
											"end": 10253,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10245,
											"end": 10265,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10241,
											"end": 10242,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10239,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10226,
											"end": 10243,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10219,
											"end": 10266,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10283,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 10409,
											"end": 10413,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10283,
											"end": 10414,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 10283,
											"end": 10414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10283,
											"end": 10414,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 10283,
											"end": 10414,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10414,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10275,
											"end": 10414,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10002,
											"end": 10421,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10002,
											"end": 10421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10002,
											"end": 10421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10002,
											"end": 10421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10427,
											"end": 10607,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 10427,
											"end": 10607,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10475,
											"end": 10552,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10472,
											"end": 10473,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10465,
											"end": 10553,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10572,
											"end": 10576,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 10569,
											"end": 10570,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10562,
											"end": 10577,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10596,
											"end": 10600,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10593,
											"end": 10594,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10586,
											"end": 10601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10613,
											"end": 10804,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 10613,
											"end": 10804,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10653,
											"end": 10656,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10672,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 10690,
											"end": 10691,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10672,
											"end": 10692,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 10672,
											"end": 10692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10672,
											"end": 10692,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 10672,
											"end": 10692,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10667,
											"end": 10692,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10667,
											"end": 10692,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10706,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10706,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 10706,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10706,
											"end": 10726,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 10706,
											"end": 10726,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10701,
											"end": 10726,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10701,
											"end": 10726,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10749,
											"end": 10750,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10746,
											"end": 10747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10742,
											"end": 10751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10735,
											"end": 10751,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10735,
											"end": 10751,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10770,
											"end": 10773,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10767,
											"end": 10768,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10764,
											"end": 10774,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10761,
											"end": 10797,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10761,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 10761,
											"end": 10797,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 10777,
											"end": 10795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 10777,
											"end": 10795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10761,
											"end": 10797,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 10761,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10613,
											"end": 10804,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10613,
											"end": 10804,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10613,
											"end": 10804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10613,
											"end": 10804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10613,
											"end": 10804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10810,
											"end": 10928,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 10810,
											"end": 10928,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10897,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 10915,
											"end": 10920,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10897,
											"end": 10921,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 10897,
											"end": 10921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10897,
											"end": 10921,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 10897,
											"end": 10921,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10892,
											"end": 10895,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10885,
											"end": 10922,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10810,
											"end": 10928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10810,
											"end": 10928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10810,
											"end": 10928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 11156,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 10934,
											"end": 11156,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11027,
											"end": 11031,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11067,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11054,
											"end": 11063,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11050,
											"end": 11068,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11042,
											"end": 11068,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11042,
											"end": 11068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 11146,
											"end": 11147,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11135,
											"end": 11144,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11131,
											"end": 11148,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11122,
											"end": 11128,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 11078,
											"end": 11149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 11078,
											"end": 11149,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 11156,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 11156,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 11156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 11156,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10934,
											"end": 11156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11162,
											"end": 11604,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 11162,
											"end": 11604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11311,
											"end": 11315,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11349,
											"end": 11351,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11338,
											"end": 11347,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11334,
											"end": 11352,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11326,
											"end": 11352,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11326,
											"end": 11352,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 11430,
											"end": 11431,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11419,
											"end": 11428,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11415,
											"end": 11432,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11406,
											"end": 11412,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11433,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 11362,
											"end": 11433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11433,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 11362,
											"end": 11433,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11443,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 11511,
											"end": 11513,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11500,
											"end": 11509,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11496,
											"end": 11514,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11487,
											"end": 11493,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11443,
											"end": 11515,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 11443,
											"end": 11515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11443,
											"end": 11515,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 11443,
											"end": 11515,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 11593,
											"end": 11595,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11582,
											"end": 11591,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11578,
											"end": 11596,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11575,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 11525,
											"end": 11597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 11525,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11162,
											"end": 11604,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 11162,
											"end": 11604,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11162,
											"end": 11604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11162,
											"end": 11604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11162,
											"end": 11604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11162,
											"end": 11604,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11162,
											"end": 11604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11610,
											"end": 11804,
											"name": "tag",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 11610,
											"end": 11804,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11650,
											"end": 11654,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 11688,
											"end": 11689,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 11670,
											"end": 11690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 11670,
											"end": 11690,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11665,
											"end": 11690,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11665,
											"end": 11690,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11704,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 11722,
											"end": 11723,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11704,
											"end": 11724,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 11704,
											"end": 11724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11704,
											"end": 11724,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 11704,
											"end": 11724,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11724,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11748,
											"end": 11749,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11745,
											"end": 11746,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11741,
											"end": 11750,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11733,
											"end": 11750,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11733,
											"end": 11750,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11772,
											"end": 11773,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11766,
											"end": 11770,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11763,
											"end": 11774,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11760,
											"end": 11797,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11760,
											"end": 11797,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 11760,
											"end": 11797,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11777,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 11777,
											"end": 11795,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 11777,
											"end": 11795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11777,
											"end": 11795,
											"name": "tag",
											"source": 11,
											"value": "411"
										},
										{
											"begin": 11777,
											"end": 11795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11760,
											"end": 11797,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 11760,
											"end": 11797,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11610,
											"end": 11804,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11610,
											"end": 11804,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11610,
											"end": 11804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11610,
											"end": 11804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11610,
											"end": 11804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11810,
											"end": 12142,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 11810,
											"end": 12142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11931,
											"end": 11935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11969,
											"end": 11971,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11958,
											"end": 11967,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11954,
											"end": 11972,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11946,
											"end": 11972,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11946,
											"end": 11972,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12053,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 12050,
											"end": 12051,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12039,
											"end": 12048,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12035,
											"end": 12052,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12026,
											"end": 12032,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12053,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 11982,
											"end": 12053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12053,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 11982,
											"end": 12053,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12063,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 12131,
											"end": 12133,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12120,
											"end": 12129,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12116,
											"end": 12134,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12107,
											"end": 12113,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12063,
											"end": 12135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 12063,
											"end": 12135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12063,
											"end": 12135,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 12063,
											"end": 12135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11810,
											"end": 12142,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 11810,
											"end": 12142,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 11810,
											"end": 12142,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11810,
											"end": 12142,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11810,
											"end": 12142,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11810,
											"end": 12142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"ECE473 Final Project/DAOToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CCUS_ROLE()": "2fe3abc7",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getLockedTokens(address)": "6b2d95d4",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantCCUSRole(address)": "1d4a8b2d",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"lockToken(address,uint256)": "17be3fa5",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unlockToken(address,uint256)": "31e9e9c0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CCUS_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLockedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantCCUSRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"lockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"unlockToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ECE473 Final Project/DAOToken.sol\":\"DAOToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"ECE473 Final Project/DAOToken.sol\":{\"keccak256\":\"0x0e821dfc16728229e015f3600ff425e3ed6ef7bacbb49e1689cb472551507209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://015b2f4f6d79e7ec8b56b388d777888d47923ddb57941026190423354a3ead01\",\"dweb:/ipfs/QmZxb5uGhvCtSqzkghThyMn9bbDu3By8YrWYCXjoWr4J2j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "ECE473 Final Project/DAOToken.sol:DAOToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "ECE473 Final Project/DAOToken.sol:DAOToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "ECE473 Final Project/DAOToken.sol:DAOToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "ECE473 Final Project/DAOToken.sol:DAOToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "ECE473 Final Project/DAOToken.sol:DAOToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "ECE473 Final Project/DAOToken.sol:DAOToken",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1533,
								"contract": "ECE473 Final Project/DAOToken.sol:DAOToken",
								"label": "_lockedTokens",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "ECE473 Final Project/DAOToken.sol:DAOToken",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "ECE473 Final Project/DAOToken.sol:DAOToken",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1188
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1165,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1189,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1188,
								1200,
								378,
								1164
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1187,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:2",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "652:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "668:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "685:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:2"
									},
									"src": "621:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "889:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:2"
									},
									"src": "864:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1102:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:2"
									},
									"src": "1075:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1509:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1526:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1545:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:2"
									},
									"src": "1476:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1773:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:2"
									},
									"src": "1746:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:2"
									},
									"src": "1997:43:2"
								}
							],
							"scope": 516,
							"src": "278:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:2",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2465:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:2"
									},
									"src": "2440:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:2"
									},
									"src": "2623:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "2996:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3012:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3029:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:2"
									},
									"src": "2969:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3233:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:2"
									},
									"src": "3207:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3447:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:2"
									},
									"src": "3419:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3756:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3774:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:2"
									},
									"src": "3723:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4004:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:2"
									},
									"src": "3976:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4258:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:2"
									},
									"src": "4230:46:2"
								}
							],
							"scope": 516,
							"src": "2186:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:2",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4854:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4870:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4887:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4903:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:2"
									},
									"src": "4821:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:2"
									},
									"src": "5083:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5325:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:2"
									},
									"src": "5296:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5645:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:2"
									},
									"src": "5610:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5892:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:2"
									},
									"src": "5863:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6147:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:2"
									},
									"src": "6118:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6488:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6507:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:2"
									},
									"src": "6456:73:2"
								}
							],
							"scope": 516,
							"src": "4424:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1164
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1135,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1134,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1165,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1428:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1428:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1437:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "1445:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1461:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "ERC20",
							"nameLocation": "1419:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1480:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1496:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1540:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1556:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1583:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1630:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1665:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1691:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1952:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1962:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1970:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1985:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1995:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1908:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1929:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:3"
									},
									"scope": 1030,
									"src": "1896:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "2134:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "2151:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "2144:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "2119:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:3"
									},
									"scope": 1030,
									"src": "2074:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2338:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2355:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2348:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2323:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:3"
									},
									"scope": 1030,
									"src": "2276:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1133
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "3058:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "3068:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "3051:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:3"
									},
									"scope": 1030,
									"src": "3002:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "3205:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "3222:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "3215:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "3196:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:3"
									},
									"scope": 1030,
									"src": "3144:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3373:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3390:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3400:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3383:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3318:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:3"
									},
									"scope": 1030,
									"src": "3299:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3685:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3695:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "3711:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3743:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3750:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3754:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3733:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3770:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3628:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3640:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3679:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:3"
									},
									"scope": 1030,
									"src": "3610:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3935:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3952:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3964:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3971:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3945:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3865:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3880:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:3"
									},
									"scope": 1030,
									"src": "3846:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4372:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4382:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4398:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4436:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4445:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4420:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4461:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4310:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4327:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4366:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:3"
									},
									"scope": 1030,
									"src": "4293:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "5132:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "5142:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "5160:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5198:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5204:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5213:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "5182:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "5239:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "5245:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5249:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "5229:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "5265:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:3",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5061:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5075:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5087:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "5126:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:3"
									},
									"scope": 1030,
									"src": "5039:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5725:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5739:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5735:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5759:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5780:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5773:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5834:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5830:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5852:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5873:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5866:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5933:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5939:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5943:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5925:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5675:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5689:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5701:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:3"
									},
									"scope": 1030,
									"src": "5656:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6346:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6360:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6534:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6548:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6570:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6580:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6603:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6617:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6599:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6624:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6674:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6680:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6693:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6649:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6834:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6844:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6852:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6866:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6356:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6380:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6496:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6512:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6910:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "7125:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7284:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7294:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7301:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6906:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6928:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "7073:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7089:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7355:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7361:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7365:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7346:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7341:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6288:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6302:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6314:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:3"
									},
									"scope": 1030,
									"src": "6271:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7777:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7791:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7787:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7814:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7835:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7828:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7907:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7916:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7887:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7736:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7753:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:3"
									},
									"scope": 1030,
									"src": "7721:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8303:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8313:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8340:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8361:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8354:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8419:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8411:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8262:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "8279:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:3"
									},
									"scope": 1030,
									"src": "8247:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "9063:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "9082:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "9089:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "9098:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "9073:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9007:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9022:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "9039:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:3"
									},
									"scope": 1030,
									"src": "8989:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "10047:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "10061:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "10057:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "10082:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "10103:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "10096:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "10159:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "10155:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "10182:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "10203:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "10196:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "10254:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "10266:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10273:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10284:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10303:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10299:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10314:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10342:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10349:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10358:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10333:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10328:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9967:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9999:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "10014:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:3"
									},
									"scope": 1030,
									"src": "9949:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10752:388:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10762:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10799:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10806:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10789:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10828:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10824:310:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10867:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10885:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10904:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10881:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10911:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10963:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10972:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10990:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10936:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "11061:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "11068:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "11077:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "11096:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "11052:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10688:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10720:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:3"
									},
									"scope": 1030,
									"src": "10663:477:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1401:9741:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:11038:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "213:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "395:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "404:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "426:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "446:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:4"
									},
									"src": "389:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "626:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "635:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "658:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "683:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:4"
									},
									"src": "620:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "820:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:4"
									},
									"scope": 1108,
									"src": "774:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "930:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "970:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:4"
									},
									"scope": 1108,
									"src": "911:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1221:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1233:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1266:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:4"
									},
									"scope": 1108,
									"src": "1203:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1566:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1581:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1621:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:4"
									},
									"scope": 1108,
									"src": "1547:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2325:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2342:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2375:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:4"
									},
									"scope": 1108,
									"src": "2308:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2711:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2725:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2737:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2770:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:4"
									},
									"scope": 1108,
									"src": "2689:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "203:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2673:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 1109,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1114,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "305:6:5"
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 1134,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 1134,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1130,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 1134,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1135,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:558:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1164
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1137,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1164,
							"linearizedBaseContracts": [
								1164
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1142,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1144,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1164,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1151,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1153,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1164,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1159,
												"id": 1161,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1164,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1165,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1188
						],
						"IERC165": [
							1200
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1189,
							"sourceUnit": 1201,
							"src": "140:38:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1167,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1200,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1170,
										"name": "IERC165",
										"nameLocations": [
											"687:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1200,
										"src": "687:7:7"
									},
									"id": 1171,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1169,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1188,
							"linearizedBaseContracts": [
								1188,
								1200
							],
							"name": "ERC165",
							"nameLocation": "677:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1199
									],
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "844:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "861:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1181,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "881:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1200_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1180,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1200",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1185,
												"nodeType": "Return",
												"src": "854:47:7"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "789:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1173,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:7"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "838:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:7"
									},
									"scope": 1188,
									"src": "762:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1189,
							"src": "659:251:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1200
						]
					},
					"id": 1201,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1191,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1200,
							"linearizedBaseContracts": [
								1200
							],
							"name": "IERC165",
							"nameLocation": "431:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1199,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "817:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1193,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:8"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "860:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1196,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:8"
									},
									"scope": 1200,
									"src": "790:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1201,
							"src": "421:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1512
						]
					},
					"id": 1513,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1202,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1203,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:9",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1512,
							"linearizedBaseContracts": [
								1512
							],
							"name": "SafeMath",
							"nameLocation": "490:8:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1234,
										"nodeType": "Block",
										"src": "717:140:9",
										"statements": [
											{
												"id": 1233,
												"nodeType": "UncheckedBlock",
												"src": "727:124:9",
												"statements": [
													{
														"assignments": [
															1216
														],
														"declarations": [
															{
																"constant": false,
																"id": 1216,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1233,
																"src": "751:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1215,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1220,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1217,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "763:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1218,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1208,
																"src": "767:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1221,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1216,
																"src": "786:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1222,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1206,
																"src": "790:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1228,
														"nodeType": "IfStatement",
														"src": "782:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1226,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1214,
															"id": 1227,
															"nodeType": "Return",
															"src": "793:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1229,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1230,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "838:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1231,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1214,
														"id": 1232,
														"nodeType": "Return",
														"src": "824:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:9",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1235,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "657:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "668:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:9"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "702:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "708:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:9"
									},
									"scope": 1512,
									"src": "641:216:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1262,
										"nodeType": "Block",
										"src": "1078:113:9",
										"statements": [
											{
												"id": 1261,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1247,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "1116:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1248,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "1120:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1254,
														"nodeType": "IfStatement",
														"src": "1112:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1252,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1246,
															"id": 1253,
															"nodeType": "Return",
															"src": "1123:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1256,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1238,
																		"src": "1168:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1257,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "1172:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1259,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1246,
														"id": 1260,
														"nodeType": "Return",
														"src": "1154:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:9",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1018:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1029:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:9"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1063:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1263,
												"src": "1069:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:9"
									},
									"scope": 1512,
									"src": "1002:189:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "1415:417:9",
										"statements": [
											{
												"id": 1303,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1275,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "1683:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1282,
														"nodeType": "IfStatement",
														"src": "1679:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1280,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1274,
															"id": 1281,
															"nodeType": "Return",
															"src": "1691:16:9"
														}
													},
													{
														"assignments": [
															1284
														],
														"declarations": [
															{
																"constant": false,
																"id": 1284,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1303,
																"src": "1721:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1283,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1288,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1285,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1266,
																"src": "1733:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1286,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "1737:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1291,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1289,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "1756:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1290,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1266,
																	"src": "1760:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1292,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1268,
																"src": "1765:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1298,
														"nodeType": "IfStatement",
														"src": "1752:33:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1296,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1274,
															"id": 1297,
															"nodeType": "Return",
															"src": "1768:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1299,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1300,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "1813:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1301,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1274,
														"id": 1302,
														"nodeType": "Return",
														"src": "1799:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1266,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1355:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1366:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:9"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1400:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1270,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "1406:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:9"
									},
									"scope": 1512,
									"src": "1339:493:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "2057:114:9",
										"statements": [
											{
												"id": 1331,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1317,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1310,
																"src": "2095:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1318,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1324,
														"nodeType": "IfStatement",
														"src": "2091:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1321,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1322,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1316,
															"id": 1323,
															"nodeType": "Return",
															"src": "2103:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1326,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1308,
																		"src": "2148:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1327,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "2152:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1329,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1316,
														"id": 1330,
														"nodeType": "Return",
														"src": "2134:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:9",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "1997:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2008:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:9"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2042:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "2048:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:9"
									},
									"scope": 1512,
									"src": "1981:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "2406:114:9",
										"statements": [
											{
												"id": 1359,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1345,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "2444:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1352,
														"nodeType": "IfStatement",
														"src": "2440:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1344,
															"id": 1351,
															"nodeType": "Return",
															"src": "2452:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1354,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1336,
																		"src": "2497:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1355,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1338,
																		"src": "2501:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1357,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1344,
														"id": 1358,
														"nodeType": "Return",
														"src": "2483:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2346:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2357:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:9"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2391:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1340,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "2397:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:9"
									},
									"scope": 1512,
									"src": "2330:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "2822:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1371,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "2839:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1372,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "2843:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1374,
												"nodeType": "Return",
												"src": "2832:12:9"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:9",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2768:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2779:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:9"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "2813:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:9"
									},
									"scope": 1512,
									"src": "2755:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1390,
										"nodeType": "Block",
										"src": "3189:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1386,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1379,
														"src": "3206:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1387,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "3210:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1385,
												"id": 1389,
												"nodeType": "Return",
												"src": "3199:12:9"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:9",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "3135:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "3146:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:9"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "3180:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:9"
									},
									"scope": 1512,
									"src": "3122:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "3532:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1401,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1394,
														"src": "3549:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1402,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "3553:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1400,
												"id": 1404,
												"nodeType": "Return",
												"src": "3542:12:9"
											}
										]
									},
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:9",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "3478:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "3489:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:9"
									},
									"returnParameters": {
										"id": 1400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "3523:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:9"
									},
									"scope": 1512,
									"src": "3465:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "3917:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1416,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "3934:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1417,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "3938:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1415,
												"id": 1419,
												"nodeType": "Return",
												"src": "3927:12:9"
											}
										]
									},
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:9",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1421,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3863:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3874:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:9"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "3908:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:9"
									},
									"scope": 1512,
									"src": "3850:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "4466:29:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1431,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "4483:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1432,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1426,
														"src": "4487:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1430,
												"id": 1434,
												"nodeType": "Return",
												"src": "4476:12:9"
											}
										]
									},
									"documentation": {
										"id": 1422,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "4412:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "4423:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:9"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "4457:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:9"
									},
									"scope": 1512,
									"src": "4399:96:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1460,
										"nodeType": "Block",
										"src": "5054:106:9",
										"statements": [
											{
												"id": 1459,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1449,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1441,
																		"src": "5096:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1450,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1439,
																		"src": "5101:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1452,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1443,
																	"src": "5104:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1448,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1454,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1455,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "5138:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1456,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1441,
																"src": "5142:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1447,
														"id": 1458,
														"nodeType": "Return",
														"src": "5131:12:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:9",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "4972:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "4983:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "4994:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:9"
									},
									"returnParameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1461,
												"src": "5045:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:9"
									},
									"scope": 1512,
									"src": "4959:201:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "5739:105:9",
										"statements": [
											{
												"id": 1484,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1476,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1474,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "5781:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1477,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5788:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1473,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1479,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1480,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1464,
																"src": "5822:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1481,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "5826:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1472,
														"id": 1483,
														"nodeType": "Return",
														"src": "5815:12:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1462,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:9",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5657:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5668:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5679:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:9"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "5730:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:9"
									},
									"scope": 1512,
									"src": "5644:200:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1510,
										"nodeType": "Block",
										"src": "6585:105:9",
										"statements": [
											{
												"id": 1509,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1499,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "6627:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1502,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "6634:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1498,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1504,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1505,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1489,
																"src": "6668:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1506,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "6672:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1497,
														"id": 1508,
														"nodeType": "Return",
														"src": "6661:12:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "6503:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "6514:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "6525:26:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1492,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:9"
									},
									"returnParameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "6576:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:9"
									},
									"scope": 1512,
									"src": "6490:200:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1513,
							"src": "482:6210:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:9"
				},
				"id": 9
			},
			"ECE473 Final Project/DAOToken.sol": {
				"ast": {
					"absolutePath": "ECE473 Final Project/DAOToken.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"DAOToken": [
							1670
						],
						"ERC165": [
							1188
						],
						"ERC20": [
							1030
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						],
						"SafeMath": [
							1512
						]
					},
					"id": 1671,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1514,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1671,
							"sourceUnit": 1031,
							"src": "57:55:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1516,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1671,
							"sourceUnit": 296,
							"src": "113:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1517,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1671,
							"sourceUnit": 1513,
							"src": "172:57:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1518,
										"name": "ERC20",
										"nameLocations": [
											"252:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "252:5:10"
									},
									"id": 1519,
									"nodeType": "InheritanceSpecifier",
									"src": "252:5:10"
								},
								{
									"baseName": {
										"id": 1520,
										"name": "AccessControl",
										"nameLocations": [
											"259:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "259:13:10"
									},
									"id": 1521,
									"nodeType": "InheritanceSpecifier",
									"src": "259:13:10"
								}
							],
							"canonicalName": "DAOToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1670,
							"linearizedBaseContracts": [
								1670,
								295,
								1188,
								1200,
								378,
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "DAOToken",
							"nameLocation": "240:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1524,
									"libraryName": {
										"id": 1522,
										"name": "SafeMath",
										"nameLocations": [
											"285:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1512,
										"src": "285:8:10"
									},
									"nodeType": "UsingForDirective",
									"src": "279:27:10",
									"typeName": {
										"id": 1523,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "298:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "2fe3abc7",
									"id": 1529,
									"mutability": "constant",
									"name": "CCUS_ROLE",
									"nameLocation": "393:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1670,
									"src": "369:58:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1525,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "369:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "434355535f524f4c45",
												"id": 1527,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "415:11:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a0017d6d59dd228ae09b05f9ef75d0136b06c4284ca797e9b72b0a3a195e403f",
													"typeString": "literal_string \"CCUS_ROLE\""
												},
												"value": "CCUS_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a0017d6d59dd228ae09b05f9ef75d0136b06c4284ca797e9b72b0a3a195e403f",
													"typeString": "literal_string \"CCUS_ROLE\""
												}
											],
											"id": 1526,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "405:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1528,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "405:22:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1533,
									"mutability": "mutable",
									"name": "_lockedTokens",
									"nameLocation": "469:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1670,
									"src": "433:49:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1532,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1530,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "441:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "433:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1531,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "452:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "594:101:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1547,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "610:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "614:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "610:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1549,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "622:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1546,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "604:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "604:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "ExpressionStatement",
												"src": "604:32:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1553,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "657:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1554,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "677:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "681:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "677:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1552,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "646:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "646:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1557,
												"nodeType": "ExpressionStatement",
												"src": "646:42:10"
											}
										]
									},
									"id": 1559,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1542,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1535,
													"src": "580:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1543,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1537,
													"src": "586:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1544,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1541,
												"name": "ERC20",
												"nameLocations": [
													"574:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "574:5:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "574:19:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "515:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "501:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1534,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "501:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "535:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "521:20:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1536,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "521:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "551:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "543:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:65:10"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "594:0:10"
									},
									"scope": 1670,
									"src": "489:206:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "780:221:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1570,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "798:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1572,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1561,
																		"src": "818:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1571,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "808:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "808:18:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "798:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44414f546f6b656e3a2063616e6e6f74206c6f636b206d6f7265207468616e207468652062616c616e6365",
															"id": 1575,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "828:45:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07",
																"typeString": "literal_string \"DAOToken: cannot lock more than the balance\""
															},
															"value": "DAOToken: cannot lock more than the balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4e0fc9cdaa512ef64ed996947e368e277be82ab45cfc2ad9aabbd7a21dff4e07",
																"typeString": "literal_string \"DAOToken: cannot lock more than the balance\""
															}
														],
														"id": 1569,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "790:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "790:84:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1577,
												"nodeType": "ExpressionStatement",
												"src": "790:84:10"
											},
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1578,
															"name": "_lockedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "884:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1580,
														"indexExpression": {
															"id": 1579,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "898:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "884:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1585,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1563,
																"src": "936:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1581,
																	"name": "_lockedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "909:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1583,
																"indexExpression": {
																	"id": 1582,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1561,
																	"src": "923:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "909:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "932:3:10",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1376,
															"src": "909:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "909:34:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "884:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "884:59:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1590,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "963:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1593,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "980:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DAOToken_$1670",
																		"typeString": "contract DAOToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DAOToken_$1670",
																		"typeString": "contract DAOToken"
																	}
																],
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "972:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1591,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "972:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "972:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1595,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1563,
															"src": "987:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1589,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "953:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "953:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1597,
												"nodeType": "ExpressionStatement",
												"src": "953:41:10"
											}
										]
									},
									"functionSelector": "17be3fa5",
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1566,
													"name": "CCUS_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1529,
													"src": "769:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1567,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1565,
												"name": "onlyRole",
												"nameLocations": [
													"760:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "760:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "760:19:10"
										}
									],
									"name": "lockToken",
									"nameLocation": "710:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "728:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "720:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "720:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "745:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1599,
												"src": "737:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "719:33:10"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:0:10"
									},
									"scope": 1670,
									"src": "701:300:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "1088:280:10",
										"statements": [
											{
												"assignments": [
													1610
												],
												"declarations": [
													{
														"constant": false,
														"id": 1610,
														"mutability": "mutable",
														"name": "lockedBalance",
														"nameLocation": "1106:13:10",
														"nodeType": "VariableDeclaration",
														"scope": 1642,
														"src": "1098:21:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1609,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1098:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1614,
												"initialValue": {
													"baseExpression": {
														"id": 1611,
														"name": "_lockedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "1122:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1613,
													"indexExpression": {
														"id": 1612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1601,
														"src": "1136:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1122:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1098:46:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1616,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "1162:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1617,
																"name": "lockedBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1610,
																"src": "1172:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1162:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "44414f546f6b656e3a2063616e6e6f7420756e6c6f636b206d6f726520746f6b656e73207468616e20617265206c6f636b6564",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1187:53:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894",
																"typeString": "literal_string \"DAOToken: cannot unlock more tokens than are locked\""
															},
															"value": "DAOToken: cannot unlock more tokens than are locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_22fbc31e87708851c4fd09564d0fd3134caae3e7bce136314888b015e5cb8894",
																"typeString": "literal_string \"DAOToken: cannot unlock more tokens than are locked\""
															}
														],
														"id": 1615,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1154:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1154:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "1154:87:10"
											},
											{
												"expression": {
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1622,
															"name": "_lockedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1533,
															"src": "1251:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1624,
														"indexExpression": {
															"id": 1623,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "1265:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1251:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1629,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1603,
																"src": "1303:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 1625,
																	"name": "_lockedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "1276:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1627,
																"indexExpression": {
																	"id": 1626,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "1290:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1276:22:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1299:3:10",
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1391,
															"src": "1276:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1276:34:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1251:59:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1632,
												"nodeType": "ExpressionStatement",
												"src": "1251:59:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1636,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1338:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DAOToken_$1670",
																		"typeString": "contract DAOToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DAOToken_$1670",
																		"typeString": "contract DAOToken"
																	}
																],
																"id": 1635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1330:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1634,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1330:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1330:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1638,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "1345:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1639,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1603,
															"src": "1354:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1633,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "1320:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1320:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1641,
												"nodeType": "ExpressionStatement",
												"src": "1320:41:10"
											}
										]
									},
									"functionSelector": "31e9e9c0",
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1606,
													"name": "CCUS_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1529,
													"src": "1077:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1607,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1605,
												"name": "onlyRole",
												"nameLocations": [
													"1068:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1068:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1068:19:10"
										}
									],
									"name": "unlockToken",
									"nameLocation": "1016:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1036:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1028:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1053:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1643,
												"src": "1045:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:33:10"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1088:0:10"
									},
									"scope": 1670,
									"src": "1007:361:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1654,
										"nodeType": "Block",
										"src": "1446:46:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1650,
														"name": "_lockedTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "1463:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1652,
													"indexExpression": {
														"id": 1651,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "1477:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1463:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1649,
												"id": 1653,
												"nodeType": "Return",
												"src": "1456:29:10"
											}
										]
									},
									"functionSelector": "6b2d95d4",
									"id": 1655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLockedTokens",
									"nameLocation": "1383:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1407:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "1399:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1398:17:10"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1655,
												"src": "1437:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1437:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1436:9:10"
									},
									"scope": 1670,
									"src": "1374:118:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "1574:46:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1664,
															"name": "CCUS_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "1594:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1665,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "1605:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1663,
														"name": "grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1584:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1584:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1667,
												"nodeType": "ExpressionStatement",
												"src": "1584:29:10"
											}
										]
									},
									"functionSelector": "1d4a8b2d",
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1660,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1554:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1661,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1659,
												"name": "onlyRole",
												"nameLocations": [
													"1545:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1545:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1545:28:10"
										}
									],
									"name": "grantCCUSRole",
									"nameLocation": "1507:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1529:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1521:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1521:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1520:17:10"
									},
									"returnParameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1574:0:10"
									},
									"scope": 1670,
									"src": "1498:122:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1671,
							"src": "231:1391:10",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								317,
								326,
								335,
								1042,
								1051
							]
						}
					],
					"src": "32:1591:10"
				},
				"id": 10
			}
		}
	}
}